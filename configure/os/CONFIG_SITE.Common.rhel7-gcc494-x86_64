# CONFIG_SITE.Common.rhel7-gcc494-x86_64
#
#
# Site Specific definitions for rhel7-gcc494-x86_64 target
# Only the local epics system manager should modify this file

# NOTE for SHARED_LIBRARIES: In most cases if this is set to YES the
# shared libraries will be found automatically.  However if the .so
# files are installed at a different path to their compile-time path
# then in order to be found at runtime do one of these:
# a) LD_LIBRARY_PATH must include the full absolute pathname to
#    $(INSTALL_LOCATION)/lib/$(EPICS_HOST_ARCH) when invoking base
#    executables.
# b) Add the runtime path to SHRLIB_DEPLIB_DIRS and PROD_DEPLIB_DIRS, which
#    will add the named directory to the list contained in the executables.
# c) Add the runtime path to /etc/ld.so.conf and run ldconfig
#    to inform the system of the shared library location.

# Depending on your version of Linux you'll want one of the following
# lines to enable command-line editing and history in iocsh.  If you're
# not sure which, start with the top one and work downwards until the
# build doesn't fail to link the readline library.  If none of them work,
# comment them all out to build without readline support.

# No other libraries needed (recent Fedora, Ubuntu etc.):
#COMMANDLINE_LIBRARY = READLINE

# Needs -lncurses (RHEL 5 etc.):
COMMANDLINE_LIBRARY = READLINE_NCURSES

# Needs -lcurses (older versions)
#COMMANDLINE_LIBRARY = READLINE_CURSES


# It makes sense to include debugging symbols even in optimized builds
# in case you want to attach gdb to the process or examine a core-dump.
# This does cost disk space, but not memory as debug symbols are not
# loaded into RAM when the binary is loaded.
OPT_CFLAGS_YES += -g
OPT_CXXFLAGS_YES += -g

# Support Package Architecture
PKG_ARCH=x86_64-rhel7-gcc49-opt

# Specify location of gcc/4.9.4 installation
# Note that it was built w/ gcc 4.8 so path is correct
GNU_DIR = /reg/g/pcds/pkg_mgr/release/gcc/4.9.4/x86_64-rhel7-gcc48-opt

# from configure/CONFIG.gnuCommon
#CC = $(GNU_BIN)/$(CMPLR_PREFIX)gcc$(CMPLR_SUFFIX)
#CCC = $(GNU_BIN)/$(CMPLR_PREFIX)g++$(CMPLR_SUFFIX)
AR = /usr/bin/$(CMPLR_PREFIX)ar$(CMPLR_SUFFIX) -rc
LD = /usr/bin/$(CMPLR_PREFIX)ld$(CMPLR_SUFFIX) -r
RANLIB = /usr/bin/$(CMPLR_PREFIX)ranlib$(CMPLR_SUFFIX)

# Needed by gcc
export LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):/reg/g/pcds/pkg_mgr/release/gmp/4.3.2/x86_64-rhel7-gcc48-opt/lib
export LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):/reg/g/pcds/pkg_mgr/release/mpfr/2.4.2/x86_64-rhel7-gcc48-opt/lib
export LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):/reg/g/pcds/pkg_mgr/release/mpc/0.8.1/x86_64-rhel7-gcc48-opt/lib
#export LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):/reg/g/pcds/pkg_mgr/release/zeromq/4.1.5/x86_64-rhel7-gcc48-opt/lib

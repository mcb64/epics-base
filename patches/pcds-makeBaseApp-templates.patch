diff --git a/src/makeBaseApp/Makefile b/src/makeBaseApp/Makefile
index 7b72839..fd3d4b0 100644
--- a/src/makeBaseApp/Makefile
+++ b/src/makeBaseApp/Makefile
@@ -91,6 +91,359 @@ TEMPLATES += top/iocBoot/ioc/st.cmd@Cross
 TEMPLATES += top/iocBoot/ioc/st.cmd@vxWorks
 TEMPLATES += top/iocBoot/ioc/st.cmd@RTEMS
 
+######################################################################
+# PCDS Additions
+######################################################################
+
+######################################################################
+## Application TOP files
+## ================================================
+TEMPLATES += top/README
+TEMPLATES += top/RELEASE_NOTES
+TEMPLATES += top/RELEASE_SITE
+TEMPLATES += top/edm-_IOC_.cmd
+TEMPLATES += top/_APPNAME_Screens/_APPNAME_.edl
+
+######################################################################
+## Additional RULES
+## ================================================
+TEMPLATES += top/configure/RULES.archive
+TEMPLATES += top/configure/RULES.autosave
+TEMPLATES += top/configure/RULES.copy
+TEMPLATES += top/configure/RULES.ioc-targets
+
+######################################################################
+# PCDS templates: 'pcdsDemoApp' and 'pcdsDemoBoot'.
+# Author: Jason Tiller
+######################################################################
+
+## =================================================
+# pcdsDemoApp - based on lclsApp.  Also includes a 'srcProtocol' directory
+# for managing streamDevice's protocol files.
+
+TEMPLATES += top/pcdsDemoApp/Makefile
+TEMPLATES += top/pcdsDemoApp/Db/Makefile
+TEMPLATES += top/pcdsDemoApp/Db/dbExample1.db
+TEMPLATES += top/pcdsDemoApp/Db/dbExample2.db
+TEMPLATES += top/pcdsDemoApp/Db/dbSubExample.db
+TEMPLATES += top/pcdsDemoApp/src/Makefile
+TEMPLATES += top/pcdsDemoApp/src/xxxRecord.dbd
+TEMPLATES += top/pcdsDemoApp/src/xxxRecord.c
+TEMPLATES += top/pcdsDemoApp/src/devXxxSoft.c
+TEMPLATES += top/pcdsDemoApp/src/xxxSupport.dbd
+TEMPLATES += top/pcdsDemoApp/src/sncExample.stt
+TEMPLATES += top/pcdsDemoApp/src/sncProgram.st
+TEMPLATES += top/pcdsDemoApp/src/sncExample.dbd
+TEMPLATES += top/pcdsDemoApp/src/dbSubExample.c
+TEMPLATES += top/pcdsDemoApp/src/dbSubExample.dbd
+TEMPLATES += top/pcdsDemoApp/src/_APPNAME_Main.cpp
+TEMPLATES += top/pcdsDemoApp/src/_APPNAME_Hello.c
+TEMPLATES += top/pcdsDemoApp/src/_APPNAME_Hello.dbd
+
+TEMPLATES += top/pcdsDemoApp/configure/RELEASE
+
+TEMPLATES += top/pcdsDemoApp/srcDisplay/Makefile
+TEMPLATES += top/pcdsDemoApp/srcDisplay/example.edl
+
+TEMPLATES += top/pcdsDemoApp/srcProtocol/Makefile
+TEMPLATES += top/pcdsDemoApp/srcProtocol/example.proto
+
+# pcdsDemoBoot - based on lclsBoot.  Will copy 'iocBoot' (and st.cmd!)
+# into INSTALL_LOCATION if you aren't building in your development
+# directory.
+
+TEMPLATES += top/pcdsDemoBoot/Makefile
+
+TEMPLATES += top/pcdsDemoBoot/nfsCommands@vxWorks
+TEMPLATES += top/pcdsDemoBoot/nfsCommands@vxWorks6
+
+TEMPLATES += top/pcdsDemoBoot/nfsCommands@RTEMS
+TEMPLATES += top/pcdsDemoBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsDemoBoot/ioc/Makefile@vxWorks
+TEMPLATES += top/pcdsDemoBoot/ioc/Makefile@vxWorks6
+
+TEMPLATES += top/pcdsDemoBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsDemoBoot/ioc/st.cmd@Cross
+
+TEMPLATES += top/pcdsDemoBoot/ioc/st.cmd@vxWorks
+TEMPLATES += top/pcdsDemoBoot/ioc/st.cmd@vxWorks6
+
+TEMPLATES += top/pcdsDemoBoot/ioc/st.cmd@RTEMS
+TEMPLATES += top/pcdsDemoBoot/ioc/README@Common
+
+TEMPLATES += top/pcdsDemoBoot/ioc/README@vxWorks
+TEMPLATES += top/pcdsDemoBoot/ioc/README@vxWorks6
+
+######################################################################
+# PCDS templates: 'pcdsIocApp' and 'pcdsIocBoot'.
+# Author: Bruce Hill
+######################################################################
+
+# pcdsIocApp - Basic pcds IOC including autosave and iocAdmin
+
+TEMPLATES += top/pcdsIocApp/Makefile
+TEMPLATES += top/pcdsIocApp/Db/Makefile
+TEMPLATES += top/pcdsIocApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsIocApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsIocApp/Db/iocAdmin.substitutions
+TEMPLATES += top/pcdsIocApp/src/Makefile
+TEMPLATES += top/pcdsIocApp/src/_APPNAME_Main.cpp
+
+TEMPLATES += top/pcdsIocApp/configure/RELEASE
+
+# pcdsIocBoot - based on lclsBoot.  Will copy 'iocBoot' (and st.cmd!)
+# into INSTALL_LOCATION if you aren't building in your development
+# directory.
+
+TEMPLATES += top/pcdsIocBoot/Makefile
+
+TEMPLATES += top/pcdsIocBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsIocBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsIocBoot/ioc/st.cmd@RTEMS
+
+TEMPLATES += top/pcdsIocBoot/ioc/startup.cmd@Common
+TEMPLATES += top/pcdsIocBoot/ioc/startup.cmd@RTEMS
+
+TEMPLATES += top/pcdsIocBoot/ioc/README@Common
+
+TEMPLATES += top/pcdsIocBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsIocBoot/ioc/_IOC_.sub-req
+
+
+######################################################################
+# PCDS templates: 'pcdsEvrApp' and 'pcdsEvrBoot'.
+# Author: Bruce Hill
+######################################################################
+
+# pcdsEvrApp - Basic pcds IOC including autosave, iocAdmin, and EVR
+
+TEMPLATES += top/pcdsEvrApp/Makefile
+
+TEMPLATES += top/pcdsEvrApp/Db/Makefile
+TEMPLATES += top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsEvrApp/Db/iocAdmin.substitutions
+TEMPLATES += top/pcdsEvrApp/Db/evrPmc230.substitutions
+TEMPLATES += top/pcdsEvrApp/Db/evrVme230.substitutions
+
+TEMPLATES += top/pcdsEvrApp/src/Makefile
+TEMPLATES += top/pcdsEvrApp/src/_APPNAME_Main.cpp
+
+TEMPLATES += top/pcdsEvrApp/configure/RELEASE
+
+# pcdsEvrBoot - based on lclsBoot.  Will copy 'iocBoot' (and st.cmd!)
+# into INSTALL_LOCATION if you aren't building in your development
+# directory.
+
+TEMPLATES += top/pcdsEvrBoot/Makefile
+
+TEMPLATES += top/pcdsEvrBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsEvrBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsEvrBoot/ioc/st.cmd@RTEMS
+
+TEMPLATES += top/pcdsEvrBoot/ioc/startup.cmd@Common
+TEMPLATES += top/pcdsEvrBoot/ioc/startup.cmd@RTEMS
+
+TEMPLATES += top/pcdsEvrBoot/ioc/README@Common
+
+TEMPLATES += top/pcdsEvrBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsEvrBoot/ioc/_IOC_.sub-req
+
+######################################################################
+# PCDS templates: 'pcdsMotorApp' and 'pcdsMotorBoot'.
+# Author: Bruce Hill
+######################################################################
+
+# pcdsMotorApp - Basic pcds IOC including autosave, iocAdmin and motor
+TEMPLATES += top/pcdsMotorApp/Makefile
+
+TEMPLATES += top/pcdsMotorApp/Db/Makefile
+TEMPLATES += top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsMotorApp/Db/iocAdmin.substitutions
+
+TEMPLATES += top/pcdsMotorApp/_APPNAME_Screens/_APPNAME_.edl
+TEMPLATES += top/pcdsMotorApp/_APPNAME_Screens/motor.edl
+TEMPLATES += top/pcdsMotorApp/_APPNAME_Screens/motor_mcode.edl
+TEMPLATES += top/pcdsMotorApp/_APPNAME_Screens/motor_setup.edl
+
+TEMPLATES += top/pcdsMotorApp/configure/CONFIG_SITE
+TEMPLATES += top/pcdsMotorApp/configure/RELEASE
+
+TEMPLATES += top/pcdsMotorApp/src/Makefile
+TEMPLATES += top/pcdsMotorApp/src/_APPNAME_Main.cpp
+
+TEMPLATES += top/pcdsMotorApp/srcProtocol/Makefile
+
+TEMPLATES += top/pcdsMotorBoot/Makefile
+TEMPLATES += top/pcdsMotorBoot/nfsCommands@RTEMS
+
+TEMPLATES += top/pcdsMotorBoot/ioc/Makefile@Common
+TEMPLATES += top/pcdsMotorBoot/ioc/README@Common
+TEMPLATES += top/pcdsMotorBoot/ioc/README@RTEMS
+TEMPLATES += top/pcdsMotorBoot/ioc/_IOC_-motors.substitutions
+TEMPLATES += top/pcdsMotorBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsMotorBoot/ioc/_IOC_.sub-req
+TEMPLATES += top/pcdsMotorBoot/ioc/_IOC_-positions.sub-req
+TEMPLATES += top/pcdsMotorBoot/ioc/st.cmd@Common*
+TEMPLATES += top/pcdsMotorBoot/ioc/st.cmd@RTEMS*
+TEMPLATES += top/pcdsMotorBoot/ioc/startup.cmd@Common*
+TEMPLATES += top/pcdsMotorBoot/ioc/startup.cmd@RTEMS*
+
+######################################################################
+# PCDS template: 'pcdsModuleLib'
+# Author: Bruce Hill
+######################################################################
+
+# pcdsModuleLib - Basic pcds module including autosave and archive support
+
+TEMPLATES += top/pcdsModuleLib/Makefile
+
+TEMPLATES += top/pcdsModuleLib/Db/Makefile
+TEMPLATES += top/pcdsModuleLib/Db/_APPNAME_.substitutions
+TEMPLATES += top/pcdsModuleLib/Db/_APPNAME_.template
+TEMPLATES += top/pcdsModuleLib/Db/_APPNAME_.tpl-arch
+TEMPLATES += top/pcdsModuleLib/Db/_APPNAME_.tpl-req
+
+TEMPLATES += top/pcdsModuleLib/configure/RELEASE
+
+TEMPLATES += top/pcdsModuleLib/src/Makefile
+TEMPLATES += top/pcdsModuleLib/src/_APPNAME_.cpp
+TEMPLATES += top/pcdsModuleLib/src/_APPNAME_.dbd
+TEMPLATES += top/pcdsModuleLib/src/_APPNAME_.h
+
+######################################################################
+# PCDS templates: 'pcdsBeckhoffApp' and 'pcdsBeckhoffBoot'.
+# Author: Garth Brown
+######################################################################
+
+# pcdsBeckhoffApp - Mostly the same as pcdsEvr, but for Beckhoff instead of evr.
+
+TEMPLATES += top/pcdsBeckhoffApp/Makefile
+
+TEMPLATES += top/pcdsBeckhoffApp/Db/Makefile
+TEMPLATES += top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsBeckhoffApp/Db/iocAdmin.substitutions
+TEMPLATES += top/pcdsBeckhoffApp/Db/Bx9000.substitutions
+
+TEMPLATES += top/pcdsBeckhoffApp/src/Makefile
+TEMPLATES += top/pcdsBeckhoffApp/src/_APPNAME_Main.cpp
+
+TEMPLATES += top/pcdsBeckhoffApp/configure/RELEASE
+
+# pcdsBeckhoffBoot - based on lclsBoot.  Will copy 'iocBoot' (and st.cmd!)
+# into INSTALL_LOCATION if you aren't building in your development
+# directory.
+
+TEMPLATES += top/pcdsBeckhoffBoot/Makefile
+
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/st.cmd@RTEMS
+
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/startup.cmd@Common
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/startup.cmd@RTEMS
+
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/README@Common
+
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsBeckhoffBoot/ioc/_IOC_.sub-req
+
+######################################################################
+# PCDS templates: 'pcdsSerialApp' and 'pcdsSerialBoot'.
+# Author: Bruce Hill
+######################################################################
+
+# pcdsSerialApp - Basic pcds IOC including autosave, iocAdmin, and EVR
+
+TEMPLATES += top/pcdsSerialApp/Makefile
+
+TEMPLATES += top/pcdsSerialApp/Db/Makefile
+TEMPLATES += top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsSerialApp/Db/iocAdmin.substitutions
+TEMPLATES += top/pcdsSerialApp/Db/exampleDevice.db
+TEMPLATES += top/pcdsSerialApp/Db/exampleDevice.tpl-arch
+TEMPLATES += top/pcdsSerialApp/Db/exampleDevice.tpl-req
+
+TEMPLATES += top/pcdsSerialApp/src/Makefile
+TEMPLATES += top/pcdsSerialApp/src/_APPNAME_Main.cpp
+
+TEMPLATES += top/pcdsSerialApp/srcProtocol/Makefile
+TEMPLATES += top/pcdsSerialApp/srcProtocol/example.proto
+
+TEMPLATES += top/pcdsSerialApp/configure/RELEASE
+TEMPLATES += top/pcdsSerialApp/configure/CONFIG_SITE
+
+# pcdsSerialBoot - based on lclsBoot.  Will copy 'iocBoot' (and st.cmd!)
+# into INSTALL_LOCATION if you aren't building in your development
+# directory.
+
+TEMPLATES += top/pcdsSerialBoot/Makefile
+
+TEMPLATES += top/pcdsSerialBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsSerialBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsSerialBoot/ioc/st.cmd@RTEMS
+
+TEMPLATES += top/pcdsSerialBoot/ioc/startup.cmd@Common
+TEMPLATES += top/pcdsSerialBoot/ioc/startup.cmd@RTEMS
+
+TEMPLATES += top/pcdsSerialBoot/ioc/README@Common
+TEMPLATES += top/pcdsSerialBoot/ioc/README@RTEMS
+
+TEMPLATES += top/pcdsSerialBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsSerialBoot/ioc/_IOC_.sub-req
+
+######################################################################
+# PCDS templates: 'pcdsTemplateIocApp' and 'pcdsIocTemplateBoot'.
+# Author: Bruce Hill
+######################################################################
+
+# pcdsTemplateIocApp - Basic pcds IOC including autosave and iocAdmin
+
+TEMPLATES += top/pcdsTemplateIocApp/Makefile
+TEMPLATES += top/pcdsTemplateIocApp/Db/Makefile
+TEMPLATES += top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-arch
+TEMPLATES += top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-req
+TEMPLATES += top/pcdsTemplateIocApp/Db/iocAdmin.substitutions
+TEMPLATES += top/pcdsTemplateIocApp/configure/RELEASE
+TEMPLATES += top/pcdsTemplateIocApp/src/Makefile
+TEMPLATES += top/pcdsTemplateIocApp/src/_APPNAME_Main.cpp
+
+
+# pcdsTemplateIocBoot - Generate a sample parent templated ioc
+
+TEMPLATES += top/pcdsTemplateIocBoot/Makefile
+
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/Makefile@Common
+
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/st.cmd@Common
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/st.cmd@RTEMS
+
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/startup.cmd@Common
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/startup.cmd@RTEMS
+
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/README@Common
+
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/_IOC_.sub-arch
+TEMPLATES += top/pcdsTemplateIocBoot/ioc/_IOC_.sub-req
+
+TEMPLATES += top/pcdsTemplateIocBoot/templates/st.cmd
+TEMPLATES += top/pcdsTemplateIocBoot/templates/Makefile
+TEMPLATES += top/pcdsTemplateIocBoot/templates/ioc.sub-arch
+TEMPLATES += top/pcdsTemplateIocBoot/templates/ioc.sub-req
+TEMPLATES += top/pcdsTemplateIocBoot/templates/ioc-sample.cfg
+
+######################################################################
+# End of PCDS additions
+######################################################################
+
 SCRIPTS_HOST += makeBaseApp.pl
 
 include $(TOP)/configure/RULES
diff --git a/src/makeBaseApp/top/Makefile b/src/makeBaseApp/top/Makefile
index f0d9ad7..5da0f13 100644
--- a/src/makeBaseApp/top/Makefile
+++ b/src/makeBaseApp/top/Makefile
@@ -1,7 +1,16 @@
 #Makefile at top of application tree
 TOP = .
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
 include $(TOP)/configure/CONFIG
 DIRS := $(DIRS) $(filter-out $(DIRS), configure)
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Lib))
 DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *App))
 DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard iocBoot))
 
diff --git a/src/makeBaseApp/top/README b/src/makeBaseApp/top/README
new file mode 100644
index 0000000..e93f84b
--- /dev/null
+++ b/src/makeBaseApp/top/README
@@ -0,0 +1,3 @@
+TODO: Add notes on how to build and run this IOC,
+along with any useful information that would help
+someone else to support this IOC if needed.
diff --git a/src/makeBaseApp/top/RELEASE_NOTES b/src/makeBaseApp/top/RELEASE_NOTES
new file mode 100644
index 0000000..0f00a06
--- /dev/null
+++ b/src/makeBaseApp/top/RELEASE_NOTES
@@ -0,0 +1 @@
+TODO: Add notes on each release
diff --git a/src/makeBaseApp/top/RELEASE_SITE b/src/makeBaseApp/top/RELEASE_SITE
new file mode 100644
index 0000000..e081234
--- /dev/null
+++ b/src/makeBaseApp/top/RELEASE_SITE
@@ -0,0 +1,10 @@
+# =============================================================
+# Define the top of the EPICS tree for your site.
+# We will build some tools/scripts that allow us to
+# change this easily when relocating software.
+# ==============================================================
+EPICS_SITE_TOP=/reg/g/pcds/package/epics/3.14
+
+# EPICS module releases are kept here
+EPICS_MODULES=$(EPICS_SITE_TOP)/modules
+
diff --git a/src/makeBaseApp/top/_APPNAME_Screens/_APPNAME_.edl b/src/makeBaseApp/top/_APPNAME_Screens/_APPNAME_.edl
new file mode 100644
index 0000000..23bfcb1
--- /dev/null
+++ b/src/makeBaseApp/top/_APPNAME_Screens/_APPNAME_.edl
@@ -0,0 +1,417 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 1290
+y 453
+w 466
+h 566
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+ctlFont "helvetica-medium-r-14.0"
+ctlFontAlign "center"
+btnFont "helvetica-medium-r-14.0"
+btnFontAlign "center"
+fgColor index 14
+bgColor index 7
+textColor index 14
+ctlFgColor1 index 14
+ctlFgColor2 index 1
+ctlBgColor1 index 1
+ctlBgColor2 index 14
+topShadowColor index 1
+botShadowColor index 14
+title "myIoc Status"
+showGrid
+snapToGrid
+gridSize 4
+endScreenProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 5
+y 36
+w 456
+h 523
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 5
+y 2
+w 456
+h 26
+lineColor index 54
+fill
+fillColor index 54
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 13
+y 7
+w 166
+h 16
+font "helvetica-bold-r-14.0"
+fgColor index 14
+bgColor index 54
+value {
+  "myIoc Template 480x600"
+}
+autoSize
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 257
+y 39
+w 0
+h 0
+lineColor index 14
+fillColor index 10
+numPoints 3
+xPoints {
+  0 257
+  1 257
+  2 257
+}
+yPoints {
+  0 39
+  1 39
+  2 39
+}
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 216
+y 40
+w 240
+h 516
+lineColor index 14
+fill
+fillColor index 2
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 228
+y 48
+w 55
+h 21
+font "helvetica-bold-r-18.0"
+fgColor index 14
+bgColor index 2
+value {
+  "Status"
+}
+autoSize
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 409
+y 7
+w 47
+h 16
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-12.0"
+buttonLabel "Home"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "$(HOME)"
+}
+setPosition {
+  0 "parentWindow"
+}
+replaceSymbols {
+  0 1
+}
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 296
+y 532
+w 148
+h 14
+controlPv "$(IOC):TOD"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 336
+y 4
+w 64
+h 20
+fgColor index 14
+onColor index 1
+offColor index 4
+topShadowColor index 1
+botShadowColor index 14
+controlPv "$(IOC):SYSRESET"
+pressValue "1"
+onLabel "Reboot Now!"
+offLabel "Reboot"
+3d
+font "helvetica-medium-r-12.0"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 300
+y 76
+w 148
+h 14
+controlPv "$(IOC):UPTIME"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 228
+y 76
+w 37
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Uptime"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 300
+y 100
+w 148
+h 14
+controlPv "$(IOC):HEARTBEAT"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 228
+y 100
+w 54
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Heartbeat"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 300
+y 128
+w 148
+h 14
+controlPv "$(IOC):HOSTNAME"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 228
+y 128
+w 61
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Host Name"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 300
+y 152
+w 148
+h 14
+controlPv "$(IOC):LOAD"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 228
+y 152
+w 57
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "CPU Load"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 300
+y 48
+w 139
+h 21
+font "helvetica-medium-r-18.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "$(IOC)"
+}
+autoSize
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/configure/CONFIG b/src/makeBaseApp/top/configure/CONFIG
index c1a4703..55ed7e8 100644
--- a/src/makeBaseApp/top/configure/CONFIG
+++ b/src/makeBaseApp/top/configure/CONFIG
@@ -1,29 +1,26 @@
-# CONFIG - Load build configuration data
-#
-# Do not make changes to this file!
+# CONFIG
 
-# Allow user to override where the build rules come from
-RULES = $(EPICS_BASE)
-
-# RELEASE files point to other application tops
 include $(TOP)/configure/RELEASE
+-include $(TOP)/configure/RELEASE.$(EPICS_HOST_ARCH)
 -include $(TOP)/configure/RELEASE.$(EPICS_HOST_ARCH).Common
 ifdef T_A
 -include $(TOP)/configure/RELEASE.Common.$(T_A)
 -include $(TOP)/configure/RELEASE.$(EPICS_HOST_ARCH).$(T_A)
 endif
 
-CONFIG = $(RULES)/configure
+CONFIG=$(EPICS_BASE)/configure
 include $(CONFIG)/CONFIG
 
-# Override the Base definition:
+# Override for definition in base
 INSTALL_LOCATION = $(TOP)
-
-# CONFIG_SITE files contain other build configuration settings
 include $(TOP)/configure/CONFIG_SITE
+-include $(TOP)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH)
 -include $(TOP)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH).Common
+
 ifdef T_A
  -include $(TOP)/configure/CONFIG_SITE.Common.$(T_A)
  -include $(TOP)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
+
+ -include $(TOP)/configure/O.$(T_A)/CONFIG_APP_INCLUDE
 endif
 
diff --git a/src/makeBaseApp/top/configure/CONFIG_SITE b/src/makeBaseApp/top/configure/CONFIG_SITE
index 92156d9..cba8743 100644
--- a/src/makeBaseApp/top/configure/CONFIG_SITE
+++ b/src/makeBaseApp/top/configure/CONFIG_SITE
@@ -1,12 +1,12 @@
 # CONFIG_SITE
 
 # Make any application-specific changes to the EPICS build
-#   configuration variables in this file.
+# configuration variables in this file.
 #
 # Host/target specific settings can be specified in files named
-#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
-#   CONFIG_SITE.Common.$(T_A)
-#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).Common
+#  CONFIG_SITE.Common.$(T_A)
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
 
 # CHECK_RELEASE controls the consistency checking of the support
 #   applications pointed to by the RELEASE* files.
@@ -19,7 +19,11 @@ CHECK_RELEASE = YES
 # Set this when you only want to compile this application
 #   for a subset of the cross-compiled target architectures
 #   that Base is built for.
-#CROSS_COMPILER_TARGET_ARCHS = vxWorks-ppc32
+# CROSS_COMPILER_TARGET_ARCHS = RTEMS-beatnik linux-x86 linux-x86_64
+
+# If you do NOT want to build for the host architecture,
+# clear BUILD_FOR_HOST_ARCH
+# BUILD_FOR_HOST_ARCH = 
 
 # To install files into a location other than $(TOP) define
 #   INSTALL_LOCATION here.
diff --git a/src/makeBaseApp/top/configure/Makefile b/src/makeBaseApp/top/configure/Makefile
index 9254309..0052e7e 100644
--- a/src/makeBaseApp/top/configure/Makefile
+++ b/src/makeBaseApp/top/configure/Makefile
@@ -1,8 +1,19 @@
+# Makefile
+
 TOP=..
 
 include $(TOP)/configure/CONFIG
 
+# CHECK_RELEASE controls the consistency checking of the support
+# applications defined in the $(TOP)/configure/RELEASE* files.
+# Normally CHECK_RELEASE should be set to YES.
+# Set CHECK_RELEASE to NO to disable checking completely.
+# Set CHECK_RELEASE to WARN to perform consistency checking,
+# but continue the build even if conflicts are found.
+CHECK_RELEASE = YES
+
 TARGETS = $(CONFIG_TARGETS)
 CONFIGS += $(subst ../,,$(wildcard $(CONFIG_INSTALLS)))
 
 include $(TOP)/configure/RULES
+
diff --git a/src/makeBaseApp/top/configure/RELEASE b/src/makeBaseApp/top/configure/RELEASE
index 84074fe..14476b8 100644
--- a/src/makeBaseApp/top/configure/RELEASE
+++ b/src/makeBaseApp/top/configure/RELEASE
@@ -1,32 +1,40 @@
-# RELEASE - Location of external support modules
+# RELEASE
+# Defines location of external products
 #
-# IF YOU MAKE ANY CHANGES to this file you must subsequently
-# do a "gnumake rebuild" in this application's top level
-# directory.
+# IF YOU MAKE ANY CHANGES to this file you MUST at least run
+# "gnumake" in this directory afterwards; you usually need
+# to run "gnumake rebuild" in the application's top level
+# directory each time this file is changed.
 #
-# The build process does not check dependencies against files
-# that are outside this application, thus you should do a
-# "gnumake rebuild" in the top level directory after EPICS_BASE
-# or any other external module pointed to below is rebuilt.
+# NOTE: The build does not check dependencies against files
+# that are outside this application, thus you should run
+# "gnumake distclean install" in the top directory each time
+# EPICS_BASE, SNCSEQ, or any other external module defined
+# in the RELEASE file is rebuilt.
 #
-# Host- or target-specific settings can be given in files named
+# Host/target specific settings can be specified in files named
 #  RELEASE.$(EPICS_HOST_ARCH).Common
 #  RELEASE.Common.$(T_A)
 #  RELEASE.$(EPICS_HOST_ARCH).$(T_A)
-#
-# This file should ONLY define paths to other support modules,
-# or include statements that pull in similar RELEASE files.
-# Build settings that are NOT module paths should appear in a
-# CONFIG_SITE file.
-
-TEMPLATE_TOP=_TEMPLATE_TOP_
 
-# If using the sequencer, point SNCSEQ at its top directory:
-#SNCSEQ=$(EPICS_BASE)/../modules/soft/seq
+# Site configuration, if it does not exist, the
+# following environment variables must be set
+#	EPICS_BASE
+#	EPICS_HOST_ARCH
+#	RTEMS_SITE_TOP
+#	RTEMS_VER
+#	EPICS_EXTENSIONS
+#	EPICS_MODULES
+#	MSI
+-include $(TOP)/RELEASE_SITE
 
-# EPICS_BASE usually appears last so other apps can override stuff:
-EPICS_BASE=_EPICS_BASE_
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+# example: IPAC_MODULE_VERSION=R2.8.4-0.2.0
 
-# Set RULES here if you want to take build rules from somewhere
-# other than EPICS_BASE:
-#RULES=/path/to/epics/support/module/rules/x-y
+# ============================================================
+# External Support
+# ============================================================
+# example: IPAC=$(EPICS_MODULES)/ipac/$(IPAC_MODULE_VERSION)
diff --git a/src/makeBaseApp/top/configure/RULES b/src/makeBaseApp/top/configure/RULES
index 6d56e14..1f2cb5d 100644
--- a/src/makeBaseApp/top/configure/RULES
+++ b/src/makeBaseApp/top/configure/RULES
@@ -1,6 +1,6 @@
 # RULES
 
-include $(CONFIG)/RULES
+include $(EPICS_BASE)/configure/RULES
 
 # Library should be rebuilt because LIBOBJS may have changed.
 $(LIBNAME): ../Makefile
diff --git a/src/makeBaseApp/top/configure/RULES.archive b/src/makeBaseApp/top/configure/RULES.archive
new file mode 100644
index 0000000..a8efb44
--- /dev/null
+++ b/src/makeBaseApp/top/configure/RULES.archive
@@ -0,0 +1,2 @@
+# RULES.archive
+include $(EPICS_BASE)/configure/RULES.archive
diff --git a/src/makeBaseApp/top/configure/RULES.autosave b/src/makeBaseApp/top/configure/RULES.autosave
new file mode 100644
index 0000000..c3b5cb0
--- /dev/null
+++ b/src/makeBaseApp/top/configure/RULES.autosave
@@ -0,0 +1,2 @@
+# RULES.autosave
+include $(EPICS_BASE)/configure/RULES.autosave
diff --git a/src/makeBaseApp/top/configure/RULES.copy b/src/makeBaseApp/top/configure/RULES.copy
new file mode 100644
index 0000000..6cf19e7
--- /dev/null
+++ b/src/makeBaseApp/top/configure/RULES.copy
@@ -0,0 +1,2 @@
+# RULES.copy
+include $(EPICS_BASE)/configure/RULES.copy
diff --git a/src/makeBaseApp/top/configure/RULES.ioc b/src/makeBaseApp/top/configure/RULES.ioc
index 901987c..5ba1013 100644
--- a/src/makeBaseApp/top/configure/RULES.ioc
+++ b/src/makeBaseApp/top/configure/RULES.ioc
@@ -1,2 +1,2 @@
 #RULES.ioc
-include $(CONFIG)/RULES.ioc
+include $(EPICS_BASE)/configure/RULES.ioc
diff --git a/src/makeBaseApp/top/configure/RULES.ioc-targets b/src/makeBaseApp/top/configure/RULES.ioc-targets
new file mode 100644
index 0000000..5c0240f
--- /dev/null
+++ b/src/makeBaseApp/top/configure/RULES.ioc-targets
@@ -0,0 +1,2 @@
+# RULES.ioc-targets
+include $(EPICS_BASE)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/configure/RULES_DIRS b/src/makeBaseApp/top/configure/RULES_DIRS
index 3ba269d..804faee 100644
--- a/src/makeBaseApp/top/configure/RULES_DIRS
+++ b/src/makeBaseApp/top/configure/RULES_DIRS
@@ -1,2 +1,2 @@
 #RULES_DIRS
-include $(CONFIG)/RULES_DIRS
+include $(EPICS_BASE)/configure/RULES_DIRS
diff --git a/src/makeBaseApp/top/configure/RULES_TOP b/src/makeBaseApp/top/configure/RULES_TOP
index d09d668..0620f08 100644
--- a/src/makeBaseApp/top/configure/RULES_TOP
+++ b/src/makeBaseApp/top/configure/RULES_TOP
@@ -1,3 +1,3 @@
 #RULES_TOP
-include $(CONFIG)/RULES_TOP
+include $(EPICS_BASE)/configure/RULES_TOP
 
diff --git a/src/makeBaseApp/top/edm-_IOC_.cmd b/src/makeBaseApp/top/edm-_IOC_.cmd
new file mode 100755
index 0000000..f514927
--- /dev/null
+++ b/src/makeBaseApp/top/edm-_IOC_.cmd
@@ -0,0 +1,6 @@
+#! /bin/bash
+
+# Setup edm environment
+source /reg/g/pcds/setup/epicsenv-3.14.12.sh
+
+edm -x -m "IOC=_IOCPVROOT_" -eolc _APPNAME_Screens/_APPNAME_.edl &
diff --git a/src/makeBaseApp/top/exampleApp/Db/Makefile b/src/makeBaseApp/top/exampleApp/Db/Makefile
index 7ce990f..c285af8 100644
--- a/src/makeBaseApp/top/exampleApp/Db/Makefile
+++ b/src/makeBaseApp/top/exampleApp/Db/Makefile
@@ -1,19 +1,26 @@
 TOP=../..
 include $(TOP)/configure/CONFIG
 #----------------------------------------
-#  ADD MACRO DEFINITIONS BELOW HERE
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
 
-# Install databases, templates & substitutions like this
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
 DB += dbExample1.db
 DB += dbExample2.db
 DB += dbSubExample.db
 DB += user.substitutions
 DB += userHost.substitutions
 
+#----------------------------------------------------
 # If <anyname>.db template is not named <anyname>*.template add
 # <anyname>_TEMPLATE = <templatename>
 
 include $(TOP)/configure/RULES
 #----------------------------------------
-#  ADD EXTRA GNUMAKE RULES BELOW HERE
+#  ADD RULES AFTER THIS LINE
 
diff --git a/src/makeBaseApp/top/exampleApp/src/Makefile b/src/makeBaseApp/top/exampleApp/src/Makefile
index f3b262c..243cd92 100644
--- a/src/makeBaseApp/top/exampleApp/src/Makefile
+++ b/src/makeBaseApp/top/exampleApp/src/Makefile
@@ -2,37 +2,38 @@ TOP=../..
 
 include $(TOP)/configure/CONFIG
 #----------------------------------------
-#  ADD MACRO DEFINITIONS BELOW HERE
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#=============================
+# Build the IOC support library
+
+LIBRARY_IOC += _APPNAME_Support
 
 # xxxRecord.h will be created from xxxRecord.dbd
 DBDINC += xxxRecord
-
-# Install xxxSupport.dbd into <top>/dbd
+# Install devXxxSoft.dbd into <top>/dbd
 DBD += xxxSupport.dbd
 
-# Build an IOC support library
-LIBRARY_IOC += _APPNAME_Support
-
 # Compile and add the code to the support library
 _APPNAME_Support_SRCS += xxxRecord.c
 _APPNAME_Support_SRCS += devXxxSoft.c
 
 # Link locally-provided code into the support library,
 # rather than directly into the IOC application.
-# This is required for Windows DLL builds.
 _APPNAME_Support_SRCS += dbSubExample.c
 _APPNAME_Support_SRCS += _APPNAME_Hello.c
 _APPNAME_Support_SRCS += initTrace.c
 
 _APPNAME_Support_LIBS += $(EPICS_BASE_IOC_LIBS)
 
+#=============================
 # Build the IOC application
-PROD_IOC = _APPNAME_
 
+PROD_IOC = _APPNAME_
 # _APPNAME_.dbd will be created and installed
 DBD += _APPNAME_.dbd
 
-# _APPNAME_.dbd will include these files:
+# _APPNAME_.dbd will be made up from these files:
 _APPNAME__DBD += base.dbd
 _APPNAME__DBD += xxxSupport.dbd
 _APPNAME__DBD += dbSubExample.dbd
@@ -42,18 +43,19 @@ _APPNAME__DBD += initTrace.dbd
 # _APPNAME__registerRecordDeviceDriver.cpp derives from _APPNAME_.dbd
 _APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
 
-# Build the main IOC entry point where needed
+# Build the main IOC entry point on workstation OSs.
 _APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
 _APPNAME__SRCS_vxWorks += -nil-
 
 # Add support from base/src/vxWorks if needed
 #_APPNAME__OBJS_vxWorks += $(EPICS_BASE_BIN)/vxComLibrary
 
-# Link in the code from our support library
+# Link in the code from the support library
 _APPNAME__LIBS += _APPNAME_Support
 
-# To build SNL programs, SNCSEQ must be defined
+# NOTE: To build SNL programs, SNCSEQ must be defined
 # in the <top>/configure/RELEASE file
+
 ifneq ($(SNCSEQ),)
     # Build sncExample into _APPNAME_Support
     sncExample_SNCFLAGS += +r
@@ -70,10 +72,12 @@ ifneq ($(SNCSEQ),)
     sncProgram_LIBS += $(EPICS_BASE_HOST_LIBS)
 endif
 
-# Finally link IOC to the EPICS Base libraries
+# Finally link to the EPICS Base libraries
 _APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
 
+#=============================
+
 include $(TOP)/configure/RULES
 #----------------------------------------
-#  ADD EXTRA GNUMAKE RULES BELOW HERE
+#  ADD RULES AFTER THIS LINE
 
diff --git a/src/makeBaseApp/top/exampleBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/exampleBoot/ioc/st.cmd@Common
index b3269ff..da313e1 100644
--- a/src/makeBaseApp/top/exampleBoot/ioc/st.cmd@Common
+++ b/src/makeBaseApp/top/exampleBoot/ioc/st.cmd@Common
@@ -5,7 +5,7 @@
 
 < envPaths
 
-cd "${TOP}"
+cd ${TOP}
 
 ## Register all support components
 dbLoadDatabase "dbd/_APPNAME_.dbd"
@@ -21,7 +21,7 @@ dbLoadRecords "db/dbSubExample.db", "user=_USER_Host"
 ## Run this to trace the stages of iocInit
 #traceIocInit
 
-cd "${TOP}/iocBoot/${IOC}"
+cd ${TOP}/iocBoot/${IOC}
 iocInit
 
 ## Start any sequence programs
diff --git a/src/makeBaseApp/top/iocBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/iocBoot/ioc/st.cmd@Common
index 521a100..68cb619 100644
--- a/src/makeBaseApp/top/iocBoot/ioc/st.cmd@Common
+++ b/src/makeBaseApp/top/iocBoot/ioc/st.cmd@Common
@@ -5,7 +5,7 @@
 
 < envPaths
 
-cd "${TOP}"
+cd ${TOP}
 
 ## Register all support components
 dbLoadDatabase "dbd/_APPNAME_.dbd"
@@ -14,7 +14,7 @@ _CSAFEAPPNAME__registerRecordDeviceDriver pdbbase
 ## Load record instances
 #dbLoadRecords("db/xxx.db","user=_USER_Host")
 
-cd "${TOP}/iocBoot/${IOC}"
+cd ${TOP}/iocBoot/${IOC}
 iocInit
 
 ## Start any sequence programs
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Bx9000.substitutions b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Bx9000.substitutions
new file mode 100644
index 0000000..2a0efe7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Bx9000.substitutions
@@ -0,0 +1,42 @@
+#==============================================================================
+#
+# Abs:  Beckhoff Bx9000 Controller
+#
+# Name: Bx9000.substitutions
+#
+# Auth: 22-May-2009, Bruce Hill			(bhill)
+# Rev : dd-mmm-yyyy, Reviewer's Name	(USERNAME)
+#
+#==============================================================================
+#
+
+file Bx9000Info.template
+{
+	pattern
+	{	REPROCEVT	}
+	{	188			}
+}
+
+file Bx9000InstalledBTs.template
+{
+	pattern
+	{	SLOT	}
+	{	0		}
+	{	1		}
+	{	2		}
+	{	3		}
+	{	4		}
+	{	5		}
+	{	6		}
+	{	7		}
+	{	8		}
+	{	9		}
+	{	10		}
+	{	11		}
+	{	12		}
+	{	13		}
+	{	14		}
+	{	15		}
+	{	16		}
+}
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Makefile b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Makefile
new file mode 100644
index 0000000..f2027e6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/Makefile
@@ -0,0 +1,35 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+DB += Bx9000.db
+# TODO: Add db files for modules here, e.g. DB += KL1408.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..04490ee
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,42 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin archive request 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_iocAdmin.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
+
+# Generate Save/Restore status archive requests
+#	Macros:
+#		IOC		- PV prefix for all IOC Save/Restore PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_SR.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
+
+# Generate Beckhoff coupler status archive requests
+#	Macros:
+#		COUPLER_LOC		- PV prefix for Bx9000.db
+# 
+file Bx9000.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		COUPLER_LOC		=	$(COUPLER_LOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..7f74c88
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,13 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		# Hack till msi supports empty substitutions
+		_FOOBAR_=_FOOBAR_
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/Makefile b/src/makeBaseApp/top/pcdsBeckhoffApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/_APPNAME_Screens/_APPNAME_.edl b/src/makeBaseApp/top/pcdsBeckhoffApp/_APPNAME_Screens/_APPNAME_.edl
new file mode 100644
index 0000000..e8fb961
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/_APPNAME_Screens/_APPNAME_.edl
@@ -0,0 +1,886 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 114
+y 399
+w 379
+h 440
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+ctlFont "helvetica-medium-r-14.0"
+ctlFontAlign "center"
+btnFont "helvetica-medium-r-14.0"
+btnFontAlign "center"
+fgColor index 14
+bgColor index 7
+textColor index 14
+ctlFgColor1 index 14
+ctlFgColor2 index 1
+ctlBgColor1 index 1
+ctlBgColor2 index 14
+topShadowColor index 1
+botShadowColor index 14
+title "myIoc Status"
+showGrid
+snapToGrid
+gridSize 4
+endScreenProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 4
+y 36
+w 368
+h 396
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 4
+y 4
+w 368
+h 28
+lineColor index 54
+fill
+fillColor index 54
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 13
+y 7
+w 155
+h 16
+font "helvetica-bold-r-14.0"
+fgColor index 14
+bgColor index 54
+value {
+  "Beckhoff & IOC Status"
+}
+autoSize
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 257
+y 39
+w 0
+h 0
+lineColor index 14
+fillColor index 10
+numPoints 3
+xPoints {
+  0 257
+  1 257
+  2 257
+}
+yPoints {
+  0 39
+  1 39
+  2 39
+}
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 316
+y 8
+w 47
+h 16
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-12.0"
+buttonLabel "Home"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "$(HOME)"
+}
+setPosition {
+  0 "parentWindow"
+}
+replaceSymbols {
+  0 1
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 244
+y 4
+w 64
+h 20
+fgColor index 14
+onColor index 1
+offColor index 4
+topShadowColor index 1
+botShadowColor index 14
+controlPv "$(IOC):SYSRESET"
+pressValue "1"
+onLabel "Reboot Now!"
+offLabel "Reboot"
+3d
+font "helvetica-medium-r-12.0"
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 36
+y 228
+w 308
+h 192
+
+beginGroup
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 34
+y 225
+w 308
+h 192
+lineColor index 14
+fill
+fillColor index 2
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 233
+w 81
+h 21
+font "helvetica-bold-r-18.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Beckhoff"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 261
+w 86
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Coupler Name:"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 257
+w 176
+h 20
+controlPv "$(BHC):CplrID"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 277
+w 176
+h 20
+controlPv "$(BHC):CplrIPAddr"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 281
+w 64
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Coupler IP:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 337
+w 83
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Connected At:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 357
+w 101
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Disconnected At:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 377
+w 84
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Packets Sent:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 321
+w 76
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "MBT Status:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 301
+w 92
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Coupler Status:"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 46
+y 393
+w 69
+h 14
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 5
+useDisplayBg
+value {
+  "Exceptions:"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 297
+w 176
+h 20
+controlPv "$(BHC):CplrReady"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 317
+w 176
+h 20
+controlPv "$(BHC):CplrLinkStat"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 333
+w 176
+h 20
+controlPv "$(BHC):CplrTSetConn"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 353
+w 176
+h 20
+controlPv "$(BHC):CplrTLostConn"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 373
+w 176
+h 20
+controlPv "$(BHC):CplrNofPkts"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 158
+y 389
+w 176
+h 20
+controlPv "$(BHC):CplrNofExcp"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 1
+useDisplayBg
+motifWidget
+limitsFromDb
+nullColor index 0
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 36
+y 52
+w 308
+h 156
+
+beginGroup
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 85
+y 52
+w 0
+h 0
+lineColor index 14
+fillColor index 10
+numPoints 3
+xPoints {
+  0 85
+  1 85
+  2 85
+}
+yPoints {
+  0 52
+  1 52
+  2 52
+}
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 33
+y 52
+w 308
+h 156
+lineColor index 14
+fill
+fillColor index 2
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 49
+y 60
+w 55
+h 21
+font "helvetica-bold-r-18.0"
+fgColor index 14
+bgColor index 2
+value {
+  "Status"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 49
+y 188
+w 190
+h 14
+controlPv "$(IOC):TOD"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 141
+y 88
+w 190
+h 14
+controlPv "$(IOC):UPTIME"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 49
+y 88
+w 37
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Uptime"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 141
+y 112
+w 190
+h 14
+controlPv "$(IOC):HEARTBEAT"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 49
+y 112
+w 54
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Heartbeat"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 141
+y 140
+w 190
+h 14
+controlPv "$(IOC):HOSTNAME"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 49
+y 140
+w 61
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "Host Name"
+}
+autoSize
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 141
+y 164
+w 190
+h 14
+controlPv "$(IOC):LOAD"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+autoHeight
+limitsFromDb
+nullColor index 1
+smartRefresh
+useHexPrefix
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 49
+y 164
+w 57
+h 14
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "CPU Load"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 123
+y 60
+w 57
+h 21
+font "helvetica-medium-r-18.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 1
+useDisplayBg
+value {
+  "$(IOC)"
+}
+autoSize
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/configure/RELEASE b/src/makeBaseApp/top/pcdsBeckhoffApp/configure/RELEASE
new file mode 100644
index 0000000..b7581fa
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/configure/RELEASE
@@ -0,0 +1,37 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+BX9000_MBT_MODULE_VERSION=R2.5.0-2.7.0
+IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+MODBUSTCPCLNT_MODULE_VERSION=R2.2.1-0.2.0
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+BX9000_MBT=$(EPICS_MODULES)/Bx9000_MBT/$(BX9000_MBT_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+MODBUSTCPCLNT=$(EPICS_MODULES)/ModBusTCPClnt/$(MODBUSTCPCLNT_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/src/Makefile b/src/makeBaseApp/top/pcdsBeckhoffApp/src/Makefile
new file mode 100644
index 0000000..21f7794
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/src/Makefile
@@ -0,0 +1,41 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+_APPNAME__DBD += Bx9000_MBT.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += Bx9000_MBT
+_APPNAME__LIBS += ModBusTCPClnt
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsBeckhoffApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/Makefile b/src/makeBaseApp/top/pcdsBeckhoffBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..eb36b38
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/Makefile@Common
@@ -0,0 +1,24 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..faeee53
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,11 @@
+# IOC archive file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC archive request 
+# TODO: replace HUTCH:RXX:BHC:XX with the real location
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_", COUPLER_LOC = HUTCH:RXX:BHC:XX }
+}
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..19c4c24
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,11 @@
+# IOC autosave file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC autosave request 
+# TODO: replace HUTCH:RXX:BHC:XX with the real location
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_", COUPLER_LOC = HUTCH:RXX:BHC:XX }
+}
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..1e31c43
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@Common
@@ -0,0 +1,65 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+# TODO: change _BHC_ to the network name of the Beckhoff controller
+epicsEnvSet( "BHC", "_BHC_")
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Add coupler
+# Bx9000_Coupler_Add( UINT8 * cplrname, UINT8 * ipaddr, UINT8 * init_string)
+# TODO: change to a valid IP address for the Beckhoff coupler
+Bx9000_Coupler_Add( "$(BHC)", "172.21.xxx.xxx", 0 )
+
+# Add terminals to the coupler
+# Bx9000_Terminal_Add( UINT8 * cplrname, UINT16 slot, UINT8 * btname, UINT8 * init_string)
+# TODO: Add other terminals by slot #
+Bx9000_Terminal_Add("$(BHC)", 3, "KL9010", 0)
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=$(LOCATION)" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=$(LOCATION)" )
+# TODO: replace HUTCH:RXX:BHC:XX with the real location
+dbLoadRecords("db/Bx9000.db", "COUPLER=$(BHC),COUPLER_LOC=HUTCH:RXX:BHC:XX")
+# TODO: add module loads, e.g. dbLoadRecords("db/KL2114.db", "COUPLER=$(BHC)" )
+
+# Setup autosave
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+save_restoreSet_status_prefix( "$(LOCATION):" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5 )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..da978bc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,65 @@
+## Example RTEMS startup script
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Configure drivers as needed
+# EVR driver
+# ErConfigure( 0, 0, 0, 0, 1 )
+
+## Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5 )
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..5589466
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change xxx as needed for your hutch
+source /reg/d/iocCommon/All/xxx_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/xxx/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsBeckhoffBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsDemoApp/Db/Makefile b/src/makeBaseApp/top/pcdsDemoApp/Db/Makefile
new file mode 100644
index 0000000..035b9f0
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/Db/Makefile
@@ -0,0 +1,24 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += dbExample1.db
+DB += dbExample2.db
+DB += dbSubExample.db
+
+#----------------------------------------------------
+# If <anyname>.db template is not named <anyname>*.template add
+# <anyname>_TEMPLATE = <templatename>
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample1.db b/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample1.db
new file mode 100644
index 0000000..4f16ada
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample1.db
@@ -0,0 +1,62 @@
+record(ai, "$(user):aiExample")
+{
+	field(DESC, "Analog input")
+	field(INP, "$(user):calcExample.VAL  NPP NMS")
+	field(EGUF, "10")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(LOPR, "0")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(calc, "$(user):calcExample")
+{
+	field(DESC, "Counter")
+	field(SCAN,"1 second")
+	field(FLNK, "$(user):aiExample")
+	field(CALC, "(A<B)?(A+C):D")
+	field(INPA, "$(user):calcExample.VAL  NPP NMS")
+	field(INPB, "9")
+	field(INPC, "1")
+	field(INPD, "0")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(xxx, "$(user):xxxExample")
+{
+	field(DESC, "xxx record")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(compress,"$(user):compressExample")
+{
+	field(DESC, "Circular buffer")
+	field(INP,"$(user):aiExample.VAL CP NMS")
+	field(ALG,"Circular Buffer")
+	field(NSAM,"10")
+	field(HOPR,"10")
+	field(EGU,"Counts")
+}
+
diff --git a/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample2.db b/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample2.db
new file mode 100644
index 0000000..836c53d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/Db/dbExample2.db
@@ -0,0 +1,38 @@
+record(calc, "$(user):calcExample$(no)")
+{
+	field(DESC, "Counter No. $(no)")
+	field(SCAN,"$(scan)")
+	field(FLNK, "$(user):aiExample$(no)")
+	field(CALC, "(A<B)?(A+C):D")
+	field(INPA, "$(user):calcExample$(no).VAL NPP NMS")
+	field(INPB, "9")
+	field(INPC, "1")
+	field(INPD, "0")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(ai, "$(user):aiExample$(no)")
+{
+	field(DESC, "Analog input No. $(no)")
+	field(INP, "$(user):calcExample$(no).VAL NPP NMS")
+	field(EGUF, "10")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(LOPR, "0")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/Db/dbSubExample.db b/src/makeBaseApp/top/pcdsDemoApp/Db/dbSubExample.db
new file mode 100644
index 0000000..96b8638
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/Db/dbSubExample.db
@@ -0,0 +1,5 @@
+record(sub,"$(user):subExample")
+{
+    field(INAM,"mySubInit")
+    field(SNAM,"mySubProcess")
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/Makefile b/src/makeBaseApp/top/pcdsDemoApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsDemoApp/configure/RELEASE b/src/makeBaseApp/top/pcdsDemoApp/configure/RELEASE
new file mode 100644
index 0000000..92f19ae
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/configure/RELEASE
@@ -0,0 +1,33 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+# AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+# IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+# AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+# IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/Makefile b/src/makeBaseApp/top/pcdsDemoApp/src/Makefile
new file mode 100644
index 0000000..3ab7ca1
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/Makefile
@@ -0,0 +1,76 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#==================================================
+# Build an IOC support library
+
+LIBRARY_IOC += xxxSupport
+
+# xxxRecord.h will be created from xxxRecord.dbd
+DBDINC += xxxRecord
+# install devXxxSoft.dbd into <top>/dbd
+DBD += xxxSupport.dbd
+
+# The following are compiled and added to the Support library
+xxxSupport_SRCS += xxxRecord.c
+xxxSupport_SRCS += devXxxSoft.c
+
+xxxSupport_LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#=============================
+# build an ioc application
+
+PROD_IOC = _APPNAME_
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += xxxSupport.dbd
+_APPNAME__DBD += dbSubExample.dbd
+_APPNAME__DBD += _APPNAME_Hello.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+_APPNAME__SRCS_vxWorks += -nil-
+
+# Add locally compiled object code
+_APPNAME__SRCS += dbSubExample.c
+_APPNAME__SRCS += _APPNAME_Hello.c
+
+# The following adds support from base/src/vxWorks
+_APPNAME__OBJS_vxWorks += $(EPICS_BASE_BIN)/vxComLibrary
+
+_APPNAME__LIBS += xxxSupport
+
+# NOTE: To build SNL programs, SNCSEQ must be defined
+# in the <top>/configure/RELEASE file
+
+ifneq ($(SNCSEQ),)
+    # This builds sncExample as a component of _APPNAME_
+    _APPNAME__SNCFLAGS += +r
+    _APPNAME__DBD += sncExample.dbd
+    _APPNAME__SRCS += sncExample.stt
+    _APPNAME__LIBS += seq pv
+
+    # The following builds sncProgram as a standalone application
+    PROD_HOST += sncProgram
+    sncProgram_SNCFLAGS += +m
+    sncProgram_SRCS += sncProgram.st
+    sncProgram_LIBS += seq pv
+    sncProgram_LIBS += $(EPICS_BASE_HOST_LIBS)
+endif
+
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.c b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.c
new file mode 100644
index 0000000..6582b84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.c
@@ -0,0 +1,31 @@
+/* Example showing how to register a new command with iocsh */
+
+#include <stdio.h>
+
+#include <epicsExport.h>
+#include <iocsh.h>
+
+/* This is the command, which the vxWorks shell will call directly */
+void hello(const char *name) {
+    if (name) {
+	printf("Hello %s, from _APPNAME_\n", name);
+    } else {
+	puts("Hello from _APPNAME_");
+    }
+}
+
+/* Information needed by iocsh */
+static const iocshArg     helloArg0 = {"name", iocshArgString};
+static const iocshArg    *helloArgs[] = {&helloArg0};
+static const iocshFuncDef helloFuncDef = {"hello", 1, helloArgs};
+
+/* Wrapper called by iocsh, selects the argument types that hello needs */
+static void helloCallFunc(const iocshArgBuf *args) {
+    hello(args[0].sval);
+}
+
+/* Registration routine, runs at startup */
+static void helloRegister(void) {
+    iocshRegister(&helloFuncDef, helloCallFunc);
+}
+epicsExportRegistrar(helloRegister);
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.dbd b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.dbd
new file mode 100644
index 0000000..64eb038
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Hello.dbd
@@ -0,0 +1 @@
+registrar(helloRegister)
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.c b/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.c
new file mode 100644
index 0000000..9a5776d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.c
@@ -0,0 +1,32 @@
+#include <stdio.h>
+
+#include <dbDefs.h>
+#include <registryFunction.h>
+#include <subRecord.h>
+#include <epicsExport.h>
+
+int mySubDebug;
+
+typedef long (*processMethod)(subRecord *precord);
+
+static long mySubInit(subRecord *precord,processMethod process)
+{
+    if (mySubDebug)
+        printf("Record %s called mySubInit(%p, %p)\n",
+               precord->name, (void*) precord, (void*) process);
+    return(0);
+}
+
+static long mySubProcess(subRecord *precord)
+{
+    if (mySubDebug)
+        printf("Record %s called mySubProcess(%p)\n",
+               precord->name, (void*) precord);
+    return(0);
+}
+
+/* Register these symbols for use by IOC code: */
+
+epicsExportAddress(int, mySubDebug);
+epicsRegisterFunction(mySubInit);
+epicsRegisterFunction(mySubProcess);
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.dbd b/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.dbd
new file mode 100644
index 0000000..a907fb7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/dbSubExample.dbd
@@ -0,0 +1,3 @@
+variable(mySubDebug)
+function(mySubInit)
+function(mySubProcess)
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/devXxxSoft.c b/src/makeBaseApp/top/pcdsDemoApp/src/devXxxSoft.c
new file mode 100644
index 0000000..0507fdf
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/devXxxSoft.c
@@ -0,0 +1,58 @@
+/* devXxxSoft.c */
+/* Example device support module */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "alarm.h"
+#include "cvtTable.h"
+#include "dbDefs.h"
+#include "dbAccess.h"
+#include "recGbl.h"
+#include "recSup.h"
+#include "devSup.h"
+#include "link.h"
+#include "xxxRecord.h"
+#include "epicsExport.h"
+
+/*Create the dset for devXxxSoft */
+static long init_record();
+static long read_xxx();
+struct {
+	long		number;
+	DEVSUPFUN	report;
+	DEVSUPFUN	init;
+	DEVSUPFUN	init_record;
+	DEVSUPFUN	get_ioint_info;
+	DEVSUPFUN	read_xxx;
+}devXxxSoft={
+	5,
+	NULL,
+	NULL,
+	init_record,
+	NULL,
+	read_xxx,
+};
+epicsExportAddress(dset,devXxxSoft);
+
+
+static long init_record(pxxx)
+    struct xxxRecord	*pxxx;
+{
+    if(recGblInitConstantLink(&pxxx->inp,DBF_DOUBLE,&pxxx->val))
+         pxxx->udf = FALSE;
+    return(0);
+}
+
+static long read_xxx(pxxx)
+    struct xxxRecord	*pxxx;
+{
+    long status;
+
+    status = dbGetLink(&(pxxx->inp),DBF_DOUBLE, &(pxxx->val),0,0);
+    /*If return was succesful then set undefined false*/
+    if(!status) pxxx->udf = FALSE;
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.dbd b/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.dbd
new file mode 100644
index 0000000..df61066
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.dbd
@@ -0,0 +1 @@
+registrar(sncExampleRegistrar)
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.stt b/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.stt
new file mode 100644
index 0000000..bc1a576
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/sncExample.stt
@@ -0,0 +1,28 @@
+program sncExample
+double v;
+assign v to "{user}:xxxExample";
+monitor v;
+
+ss ss1
+{
+	state low
+	{
+	    when(v>5.0)
+	    {
+		printf("changing to high\n");
+	    } state high
+	    when(delay(.1)) 
+	    {
+	    } state low
+	}
+	state high
+	{
+	    when(v<=5.0)
+	    {
+		printf("changing to low\n");
+	    } state low
+	    when(delay(.1))
+	    {
+	    } state high
+	}
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/sncProgram.st b/src/makeBaseApp/top/pcdsDemoApp/src/sncProgram.st
new file mode 100644
index 0000000..1ba2989
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/sncProgram.st
@@ -0,0 +1 @@
+#include "../sncExample.stt"
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.c b/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.c
new file mode 100644
index 0000000..6fb1472
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.c
@@ -0,0 +1,272 @@
+/* xxxRecord.c */
+/* Example record support module */
+  
+#include <stddef.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "alarm.h"
+#include "dbAccess.h"
+#include "recGbl.h"
+#include "dbEvent.h"
+#include "dbDefs.h"
+#include "dbAccess.h"
+#include "devSup.h"
+#include "errMdef.h"
+#include "recSup.h"
+#include "special.h"
+#define GEN_SIZE_OFFSET
+#include "xxxRecord.h"
+#undef  GEN_SIZE_OFFSET
+#include "epicsExport.h"
+
+/* Create RSET - Record Support Entry Table */
+#define report NULL
+#define initialize NULL
+static long init_record();
+static long process();
+#define special NULL
+#define get_value NULL
+#define cvt_dbaddr NULL
+#define get_array_info NULL
+#define put_array_info NULL
+static long get_units();
+static long get_precision();
+#define get_enum_str NULL
+#define get_enum_strs NULL
+#define put_enum_str NULL
+static long get_graphic_double();
+static long get_control_double();
+static long get_alarm_double();
+ 
+rset xxxRSET={
+	RSETNUMBER,
+	report,
+	initialize,
+	init_record,
+	process,
+	special,
+	get_value,
+	cvt_dbaddr,
+	get_array_info,
+	put_array_info,
+	get_units,
+	get_precision,
+	get_enum_str,
+	get_enum_strs,
+	put_enum_str,
+	get_graphic_double,
+	get_control_double,
+	get_alarm_double
+};
+epicsExportAddress(rset,xxxRSET);
+
+typedef struct xxxset { /* xxx input dset */
+	long		number;
+	DEVSUPFUN	dev_report;
+	DEVSUPFUN	init;
+	DEVSUPFUN	init_record; /*returns: (-1,0)=>(failure,success)*/
+	DEVSUPFUN	get_ioint_info;
+	DEVSUPFUN	read_xxx;
+}xxxdset;
+
+static void checkAlarms(xxxRecord *pxxx);
+static void monitor(xxxRecord *pxxx);
+
+static long init_record(void *precord,int pass)
+{
+    xxxRecord	*pxxx = (xxxRecord *)precord;
+    xxxdset	*pdset;
+    long	status;
+
+    if (pass==0) return(0);
+
+    if(!(pdset = (xxxdset *)(pxxx->dset))) {
+	recGblRecordError(S_dev_noDSET,(void *)pxxx,"xxx: init_record");
+	return(S_dev_noDSET);
+    }
+    /* must have read_xxx function defined */
+    if( (pdset->number < 5) || (pdset->read_xxx == NULL) ) {
+	recGblRecordError(S_dev_missingSup,(void *)pxxx,"xxx: init_record");
+	return(S_dev_missingSup);
+    }
+
+    if( pdset->init_record ) {
+	if((status=(*pdset->init_record)(pxxx))) return(status);
+    }
+    return(0);
+}
+
+static long process(void *precord)
+{
+	xxxRecord	*pxxx = (xxxRecord *)precord;
+	xxxdset		*pdset = (xxxdset *)(pxxx->dset);
+	long		 status;
+	unsigned char    pact=pxxx->pact;
+
+	if( (pdset==NULL) || (pdset->read_xxx==NULL) ) {
+		pxxx->pact=TRUE;
+		recGblRecordError(S_dev_missingSup,(void *)pxxx,"read_xxx");
+		return(S_dev_missingSup);
+	}
+
+	/* pact must not be set until after calling device support */
+	status=(*pdset->read_xxx)(pxxx);
+	/* check if device support set pact */
+	if ( !pact && pxxx->pact ) return(0);
+	pxxx->pact = TRUE;
+
+	recGblGetTimeStamp(pxxx);
+	/* check for alarms */
+	checkAlarms(pxxx);
+	/* check event list */
+	monitor(pxxx);
+	/* process the forward scan link record */
+        recGblFwdLink(pxxx);
+
+	pxxx->pact=FALSE;
+	return(status);
+}
+
+static long get_units(DBADDR *paddr, char *units)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+
+    strncpy(units,pxxx->egu,DB_UNITS_SIZE);
+    return(0);
+}
+
+static long get_precision(DBADDR *paddr, long *precision)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+
+    *precision = pxxx->prec;
+    if(paddr->pfield == (void *)&pxxx->val) return(0);
+    recGblGetPrec(paddr,precision);
+    return(0);
+}
+
+static long get_graphic_double(DBADDR *paddr,struct dbr_grDouble *pgd)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL
+    || fieldIndex == xxxRecordHIHI
+    || fieldIndex == xxxRecordHIGH
+    || fieldIndex == xxxRecordLOW
+    || fieldIndex == xxxRecordLOLO
+    || fieldIndex == xxxRecordHOPR
+    || fieldIndex == xxxRecordLOPR) {
+        pgd->upper_disp_limit = pxxx->hopr;
+        pgd->lower_disp_limit = pxxx->lopr;
+    } else recGblGetGraphicDouble(paddr,pgd);
+    return(0);
+}
+
+static long get_control_double(DBADDR *paddr,struct dbr_ctrlDouble *pcd)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL
+    || fieldIndex == xxxRecordHIHI
+    || fieldIndex == xxxRecordHIGH
+    || fieldIndex == xxxRecordLOW
+    || fieldIndex == xxxRecordLOLO) {
+	pcd->upper_ctrl_limit = pxxx->hopr;
+	pcd->lower_ctrl_limit = pxxx->lopr;
+    } else recGblGetControlDouble(paddr,pcd);
+    return(0);
+}
+
+static long get_alarm_double(DBADDR *paddr,struct dbr_alDouble *pad)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL) {
+	pad->upper_alarm_limit = pxxx->hihi;
+	pad->upper_warning_limit = pxxx->high;
+	pad->lower_warning_limit = pxxx->low;
+	pad->lower_alarm_limit = pxxx->lolo;
+    } else recGblGetAlarmDouble(paddr,pad);
+    return(0);
+}
+
+static void checkAlarms(xxxRecord *pxxx)
+{
+	double		val;
+	float		hyst, lalm, hihi, high, low, lolo;
+	unsigned short	hhsv, llsv, hsv, lsv;
+
+	if(pxxx->udf == TRUE ){
+		recGblSetSevr(pxxx,UDF_ALARM,INVALID_ALARM);
+		return;
+	}
+	hihi = pxxx->hihi; lolo = pxxx->lolo; high = pxxx->high; low = pxxx->low;
+	hhsv = pxxx->hhsv; llsv = pxxx->llsv; hsv = pxxx->hsv; lsv = pxxx->lsv;
+	val = pxxx->val; hyst = pxxx->hyst; lalm = pxxx->lalm;
+
+	/* alarm condition hihi */
+	if (hhsv && (val >= hihi || ((lalm==hihi) && (val >= hihi-hyst)))){
+	        if (recGblSetSevr(pxxx,HIHI_ALARM,pxxx->hhsv)) pxxx->lalm = hihi;
+		return;
+	}
+
+	/* alarm condition lolo */
+	if (llsv && (val <= lolo || ((lalm==lolo) && (val <= lolo+hyst)))){
+	        if (recGblSetSevr(pxxx,LOLO_ALARM,pxxx->llsv)) pxxx->lalm = lolo;
+		return;
+	}
+
+	/* alarm condition high */
+	if (hsv && (val >= high || ((lalm==high) && (val >= high-hyst)))){
+	        if (recGblSetSevr(pxxx,HIGH_ALARM,pxxx->hsv)) pxxx->lalm = high;
+		return;
+	}
+
+	/* alarm condition low */
+	if (lsv && (val <= low || ((lalm==low) && (val <= low+hyst)))){
+	        if (recGblSetSevr(pxxx,LOW_ALARM,pxxx->lsv)) pxxx->lalm = low;
+		return;
+	}
+
+	/* we get here only if val is out of alarm by at least hyst */
+	pxxx->lalm = val;
+	return;
+}
+
+static void monitor(xxxRecord *pxxx)
+{
+	unsigned short	monitor_mask;
+	double		delta;
+
+        monitor_mask = recGblResetAlarms(pxxx);
+	/* check for value change */
+	delta = pxxx->mlst - pxxx->val;
+	if(delta<0.0) delta = -delta;
+	if (delta > pxxx->mdel) {
+		/* post events for value change */
+		monitor_mask |= DBE_VALUE;
+		/* update last value monitored */
+		pxxx->mlst = pxxx->val;
+	}
+
+	/* check for archive change */
+	delta = pxxx->alst - pxxx->val;
+	if(delta<0.0) delta = -delta;
+	if (delta > pxxx->adel) {
+		/* post events on value field for archive change */
+		monitor_mask |= DBE_LOG;
+		/* update last archive value monitored */
+		pxxx->alst = pxxx->val;
+	}
+
+	/* send out monitors connected to the value field */
+	if (monitor_mask){
+		db_post_events(pxxx,&pxxx->val,monitor_mask);
+	}
+	return;
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.dbd b/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.dbd
new file mode 100644
index 0000000..4a71c54
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/xxxRecord.dbd
@@ -0,0 +1,117 @@
+recordtype(xxx) {
+	include "dbCommon.dbd" 
+	field(VAL,DBF_DOUBLE) {
+		prompt("Current EGU Value")
+		asl(ASL0)
+		pp(TRUE)
+	}
+	field(INP,DBF_INLINK) {
+		prompt("Input Specification")
+		promptgroup(GUI_INPUTS)
+		special(SPC_NOMOD)
+		interest(1)
+	}
+	field(PREC,DBF_SHORT) {
+		prompt("Display Precision")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(EGU,DBF_STRING) {
+		prompt("Engineering Units")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+		size(16)
+	}
+	field(HOPR,DBF_FLOAT) {
+		prompt("High Operating Range")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(LOPR,DBF_FLOAT) {
+		prompt("Low Operating Range")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(HIHI,DBF_FLOAT) {
+		prompt("Hihi Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(LOLO,DBF_FLOAT) {
+		prompt("Lolo Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(HIGH,DBF_FLOAT) {
+		prompt("High Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(LOW,DBF_FLOAT) {
+		prompt("Low Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(HHSV,DBF_MENU) {
+		prompt("Hihi Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(LLSV,DBF_MENU) {
+		prompt("Lolo Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(HSV,DBF_MENU) {
+		prompt("High Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(LSV,DBF_MENU) {
+		prompt("Low Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(HYST,DBF_DOUBLE) {
+		prompt("Alarm Deadband")
+		promptgroup(GUI_ALARMS)
+		interest(1)
+	}
+	field(ADEL,DBF_DOUBLE) {
+		prompt("Archive Deadband")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(MDEL,DBF_DOUBLE) {
+		prompt("Monitor Deadband")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(LALM,DBF_DOUBLE) {
+		prompt("Last Value Alarmed")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+	field(ALST,DBF_DOUBLE) {
+		prompt("Last Value Archived")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+	field(MLST,DBF_DOUBLE) {
+		prompt("Last Val Monitored")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+}
diff --git a/src/makeBaseApp/top/pcdsDemoApp/src/xxxSupport.dbd b/src/makeBaseApp/top/pcdsDemoApp/src/xxxSupport.dbd
new file mode 100644
index 0000000..8094bdd
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/src/xxxSupport.dbd
@@ -0,0 +1,2 @@
+include "xxxRecord.dbd"
+device(xxx,CONSTANT,devXxxSoft,"SoftChannel")
diff --git a/src/makeBaseApp/top/pcdsDemoApp/srcDisplay/Makefile b/src/makeBaseApp/top/pcdsDemoApp/srcDisplay/Makefile
new file mode 100644
index 0000000..dec71f3
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/srcDisplay/Makefile
@@ -0,0 +1,29 @@
+#  -*- Makefile -*-
+T_A=$EPICS_HOST_ARCH
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+# EDM Screens to install
+# You can override the default installation path.
+#INSTALL_LOCATION=
+
+#EDLS += example.edl
+
+# Install images to be used by EDM (Gif and Png are supported)
+# PNG is better and preferred.
+#PNGS +=
+#GIFS +=
+
+# EDM Screens to install
+# If you want to install all screens and are
+# lazy use the wildcard method. :)
+#EDLS+=$(wildcard *.edl)
+#PNGS+=$(wildcard *.png)
+#GIFS+=$(wildcard *.gif)
+
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
diff --git a/src/makeBaseApp/top/pcdsDemoApp/srcDisplay/example.edl b/src/makeBaseApp/top/pcdsDemoApp/srcDisplay/example.edl
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/Makefile b/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/Makefile
new file mode 100644
index 0000000..ee58d1c
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/Makefile
@@ -0,0 +1,29 @@
+# Makefile for copying streamDevice protocol files during build.
+# Author: Jason Tiller
+
+T_A=$(EPICS_HOST_ARCH)
+TOP=../..
+include $(TOP)/configure/CONFIG
+
+######################################################################
+# Specify what files should be copied and where.
+
+# What protocol files should be copied as part of the build.
+# COPY_FILES = example.proto
+
+# What subdirectory should hold the protcol files.  For this example,
+# $INSTALL_LOCATION/protocol will be created.
+# COPY_SUBDIR = protocol
+
+# Uncomment this if you only want to copy when *not* installing to
+# your development area.  Useful for iocBoot, where the source and
+# target directories are actually the same.
+# COPY_ONLY_IF_NON_LOCAL=1
+
+######################################################################
+# Don't change these.
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.copy
+
+######################################################################
+# Add additional RULES files, if necessary.
diff --git a/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/example.proto b/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/example.proto
new file mode 100644
index 0000000..22d7882
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoApp/srcProtocol/example.proto
@@ -0,0 +1,24 @@
+# This is an example streamDevice protocol file.
+
+Terminator = CR LF;
+ReadTimeout = 10;
+# ReplyTimeout = 2000;
+# MaxInput = 32;
+# InTerminator = CR LF;
+# ExtraInput = Ignore;
+
+# read_X      {in "$%f,%*f,%*f,N%*4s\r\n";}
+# read_X      {out "*9900XY"; in "$%f,%*f,%*f,N%*4s";}
+# read_Y      {               in "$%*f,%f,%*f,N%*4s";}
+# read_temp   {               in "$%*f,%*f,%f,N%*4s";}
+# read_serial {               in "$%*f,%*f,%*f,N%4s";}
+
+# For I/O Intr mode - every 1 second.
+start_X { out "*9900XYC2"; }
+read_X      {in "$%f,%(AMO:HFP:CLIN:Y.VAL)f,%(AMO:HFP:CLIN:TEMP.VAL)f,N%(AMO:HFP:CLIN:SERL.VAL)4s";}
+
+# For SCAN mode.
+# start_X { out "*9900XYC-OFF"; }
+# read_X      {out "*9900XY"; in "$%f,%(AMO:MT:HFP:CLIN:Y.VAL)f,%(AMO:MT:HFP:CLIN:TEMP.VAL)f,N%(AMO:MT:HFP:CLIN:SERL.VAL)4s";}
+
+# debug {in "%s"}
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/Makefile b/src/makeBaseApp/top/pcdsDemoBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..cf3369b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@Common
@@ -0,0 +1,10 @@
+# Makefile to install the st.cmd into the correctly location.
+# Author: Jason Tiller
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks
new file mode 100644
index 0000000..c7f3254
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks
@@ -0,0 +1,6 @@
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = cdCommands
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks6 b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks6
new file mode 100644
index 0000000..c7f3254
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/Makefile@vxWorks6
@@ -0,0 +1,6 @@
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = cdCommands
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@vxWorks b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@vxWorks
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsDemoBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..d04070f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Common
@@ -0,0 +1,41 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+< envPaths
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd ${TOP}
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_Host")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_Host")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+cd ${TOP}/iocBoot/${IOC}
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_Host"
+
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Cross b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Cross
new file mode 100644
index 0000000..7f33928
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@Cross
@@ -0,0 +1,26 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+#< envPaths
+
+## Register all support components
+dbLoadDatabase("../../dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Load record instances
+dbLoadRecords("../../db/dbExample1.db","user=_USER_Host")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=1,scan=1 second")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=2,scan=2 second")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=3,scan=5 second")
+dbLoadRecords("../../db/dbSubExample.db","user=_USER_Host")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_"
+
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..7127a27
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,42 @@
+## Example RTEMS startup script
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+< envPaths
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_"
+
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
+
+
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks
new file mode 100644
index 0000000..947003d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks
@@ -0,0 +1,52 @@
+## Example vxWorks startup file
+
+## The following is needed if your board support package doesn't at boot time
+## automatically cd to the directory containing its startup script
+#cd "_TOP_/iocBoot/_IOC_"
+
+< cdCommands
+#< ../nfsCommands
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd topbin
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+ld < _APPNAME_.munch
+
+## This drvTS initializer is needed if the IOC has a hardware event system
+#TSinit
+
+## Register all support components
+cd top
+dbLoadDatabase("dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#mySubDebug = 1
+
+cd startup
+iocInit()
+
+## Start any sequence programs
+#seq &sncExample,"user=_USER_"
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks6 b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks6
new file mode 100644
index 0000000..947003d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/ioc/st.cmd@vxWorks6
@@ -0,0 +1,52 @@
+## Example vxWorks startup file
+
+## The following is needed if your board support package doesn't at boot time
+## automatically cd to the directory containing its startup script
+#cd "_TOP_/iocBoot/_IOC_"
+
+< cdCommands
+#< ../nfsCommands
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd topbin
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+ld < _APPNAME_.munch
+
+## This drvTS initializer is needed if the IOC has a hardware event system
+#TSinit
+
+## Register all support components
+cd top
+dbLoadDatabase("dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#mySubDebug = 1
+
+cd startup
+iocInit()
+
+## Start any sequence programs
+#seq &sncExample,"user=_USER_"
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsDemoBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/Makefile b/src/makeBaseApp/top/pcdsEvrApp/Db/Makefile
new file mode 100644
index 0000000..94bab4a
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/Makefile
@@ -0,0 +1,35 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+DB += evrPmc230.db
+DB += evrVme230.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..cac2d87
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,43 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin archive request 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_iocAdmin.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC)
+	}
+}
+
+
+# Generate Save/Restore status archive requests
+#	Macros:
+#		IOC		- PV prefix for all IOC Save/Restore PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_SR.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC)
+	}
+}
+
+
+# Generate EVR archive request 
+#	Macros:
+#		EVR		- PV prefix for all EVR PV's
+# Typically, EVR will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_evr.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+		EVR		=	$(EVR)
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..0b4256a
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,23 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC)
+	}
+}
+
+# Generate EVR autosave request 
+file autosave_evr.tpl-req
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+		EVR		=	$(EVR)
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/evrPmc230.substitutions b/src/makeBaseApp/top/pcdsEvrApp/Db/evrPmc230.substitutions
new file mode 100644
index 0000000..136a201
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/evrPmc230.substitutions
@@ -0,0 +1,89 @@
+#
+# Basic PMC EVR 230 Event Substitutions file
+# Set event specific variations here.
+# Set EVR and IOC in dbLoadRecords()
+# Example:
+# dbLoadRecords( "db/evrPmc230.db", "IOC=AMO:R06:IOC:19,EVR=AMO:R06:EVR:19" )
+#
+
+# Need one instance of evrPmc230 for the card
+file evrPmc230.template
+{
+#       Device  Card
+#           FP*L        Trigger name
+#           DG*E        {Enabled|Disabled}
+#           DG*P        {Normal|Inverted}
+#           DG*W        {Width}
+#           DG*D        {Delay}
+#           DG*C        {ScaleFactor}
+    pattern
+    {   DEV,    CARD,
+        FP0L,   DG0E,       DG0P,   DG0W,       DG0D,   DG0C,
+        FP1L,   DG1E,       DG1P,   DG1W,       DG1D,   DG1C,
+        FP2L,   DG2E,       DG2P,   DG2W,       DG2D,   DG2C,
+        FP3L,   DG3E,       DG3P,   DG3W,       DG3D,   DG3C,
+    }
+
+    {   $(EVR), 0,
+        "Spare",    Enabled,    Normal,     1000,   500,    119,
+        "Spare",    Enabled,    Normal,     1000,   750,    119,
+        "Spare",    Disabled,   Normal,     5000,   500,    119,
+        "Spare",    Disabled,   Normal,     5000,   500,    119,
+    } 
+}
+
+
+#   DEV     Name of EVR
+#   CARD    EVR card number starting at 0 (matches card number in ErConfigure).
+#   NAME    EVENT1 to EVENT14 - instantiate all 14 records even if you only use a few events.
+#   ID  Event code number.
+#   P0 to P2 - trigger state for channels 0 to 2
+#       (0 = disabled for the event code, 1 = enabled for the event code)
+#       Channels 0 to 2  are used for the front panel triggers.
+# 
+#   IRQ Controls whether an IRQ happens when this event code occurs.
+#       (0 = no IRQ, 1 = IRQ)
+#       Must be set to 1 if you want event record processing using the event code.
+#       Must be set to 1 if you have records with TSE fields set to the event code.
+file evrPmcEvent.template
+{
+#     Device    Card  <----------------------------  Event -------------------------->       
+    pattern
+    { DEV,      CARD,   NAME,    ID,  P0,P1,P2,IRQ, LNAME           }
+    { $(EVR),   0,      EVENT1, 140,  1, 1, 1, 1, "Beam Full"       }
+    { $(EVR),   0,      EVENT2, 141,  0, 0, 0, 0, "Beam & 60Hz"     }
+    { $(EVR),   0,      EVENT3, 142,  0, 0, 0, 0, "Beam & 30Hz"     }
+    { $(EVR),   0,      EVENT4, 143,  0, 0, 0, 0, "Beam & 10Hz"     }
+    { $(EVR),   0,      EVENT5, 144,  0, 0, 0, 0, "Beam & 5Hz"      }
+    { $(EVR),   0,      EVENT6, 145,  0, 0, 0, 0, "Beam & 1Hz"      }
+    { $(EVR),   0,      EVENT7, 146,  0, 0, 0, 0, "Beam & 0.5Hz"    }
+    { $(EVR),   0,      EVENT8,  40,  0, 0, 0, 0, "120Hz"           }
+    { $(EVR),   0,      EVENT9,  41,  0, 0, 0, 0, "60Hz"            }
+    { $(EVR),   0,      EVENT10, 42,  0, 0, 0, 0, "30Hz"            }
+    { $(EVR),   0,      EVENT11, 43,  0, 0, 0, 0, "10Hz"            }
+    { $(EVR),   0,      EVENT12, 44,  0, 0, 0, 0, "5Hz"             }
+    { $(EVR),   0,      EVENT13, 45,  0, 0, 0, 0, "1Hz"             }
+    { $(EVR),   0,      EVENT14, 46,  0, 0, 0, 0, "0.5Hz"           }
+}
+
+
+# Need one instance of fiducialTimestamp.db for
+# pattern processing and fiduicial ID timestamping
+file fiducialTimestamp.db
+{
+    {
+        DEV=$(EVR),
+		LINK4="",
+		LINK5=""
+    }
+}
+
+
+#
+# Creates records to support PCDS's standard set of
+# event codes for the LCLS accelerator and PCDS experiments
+file pcdsEventCodes.db
+{
+   { DEV="$(EVR)", CARD="0" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/evrVme230.substitutions b/src/makeBaseApp/top/pcdsEvrApp/Db/evrVme230.substitutions
new file mode 100644
index 0000000..20e5d06
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/evrVme230.substitutions
@@ -0,0 +1,91 @@
+#
+# Basic VME EVR 230 Event Substitutions file
+# Set event specific variations here.
+# Set EVR and IOC in dbLoadRecords()
+# Example:
+# dbLoadRecords( "db/evrVme230.db", "IOC=AMO:R06:IOC:19,EVR=AMO:R06:EVR:19" )
+#
+
+# Need one instance for the card
+file evrVme230.template
+{
+#       Device  Card
+#           FP*L        Trigger name
+#           DG*E        {Enabled|Disabled}
+#           DG*P        {Normal|Inverted}
+#           DG*W        {Width}
+#           DG*D        {Delay}
+#           DG*C        {ScaleFactor}
+    pattern
+    {   DEV,    CARD,
+        FP0L,   DG0E,       DG0P,   DG0W,       DG0D,   DG0C,
+        FP1L,   DG1E,       DG1P,   DG1W,       DG1D,   DG1C,
+        FP2L,   DG2E,       DG2P,   DG2W,       DG2D,   DG2C,
+        FP3L,   DG3E,       DG3P,   DG3W,       DG3D,   DG3C,
+    }
+
+    {   $(EVR), 0,
+        "Spare",    Enabled,    Normal,     1000,   500,    119,
+        "Spare",    Enabled,    Normal,     1000,   750,    119,
+        "Spare",    Disabled,   Normal,     5000,   500,    119,
+        "Spare",    Disabled,   Normal,     5000,   500,    119,
+    } 
+}
+
+
+#   DEV     Name of EVR
+#   CARD    EVR card number starting at 0 (matches card number in ErConfigure).
+#   NAME    EVENT1 to EVENT14 - instantiate all 14 records even if you only use a few events.
+#   ID  Event code number.
+#   P0 to P2 - trigger state for channels 0 to 2
+#       (0 = disabled for the event code, 1 = enabled for the event code)
+#       Channels 0 to 6  are used for the front panel triggers.
+#       Channels 0 to 13 are used for the transition module triggers.
+#		Macros are available for P3-P14, but you'll need to modify this
+#		substitutions file or they default to disabled.
+#
+#   IRQ Controls whether an IRQ happens when this event code occurs.
+#       (0 = no IRQ, 1 = IRQ)
+#       Must be set to 1 if you want event record processing using the event code.
+#       Must be set to 1 if you have records with TSE fields set to the event code.
+file evrVmeEvent.template
+{
+#     Device    Card  <----------------------------  Event -------------------------->       
+    pattern
+    { DEV,      CARD,   NAME,    ID,  P0,P1,P2,IRQ, LNAME           }
+    { $(EVR),   0,      EVENT1, 140,  1, 1, 1, 1, "Beam Full"       }
+    { $(EVR),   0,      EVENT2, 141,  0, 0, 0, 0, "Beam & 60Hz"     }
+    { $(EVR),   0,      EVENT3, 142,  0, 0, 0, 0, "Beam & 30Hz"     }
+    { $(EVR),   0,      EVENT4, 143,  0, 0, 0, 0, "Beam & 10Hz"     }
+    { $(EVR),   0,      EVENT5, 144,  0, 0, 0, 0, "Beam & 5Hz"      }
+    { $(EVR),   0,      EVENT6, 145,  0, 0, 0, 0, "Beam & 1Hz"      }
+    { $(EVR),   0,      EVENT7, 146,  0, 0, 0, 0, "Beam & 0.5Hz"    }
+    { $(EVR),   0,      EVENT8,  40,  0, 0, 0, 0, "120Hz"           }
+    { $(EVR),   0,      EVENT9,  41,  0, 0, 0, 0, "60Hz"            }
+    { $(EVR),   0,      EVENT10, 42,  0, 0, 0, 0, "30Hz"            }
+    { $(EVR),   0,      EVENT11, 43,  0, 0, 0, 0, "10Hz"            }
+    { $(EVR),   0,      EVENT12, 44,  0, 0, 0, 0, "5Hz"             }
+    { $(EVR),   0,      EVENT13, 45,  0, 0, 0, 0, "1Hz"             }
+    { $(EVR),   0,      EVENT14, 46,  0, 0, 0, 0, "0.5Hz"           }
+}
+
+# Need one instance of fiducialTimestamp.db for
+# pattern processing and fiduicial ID timestamping
+file fiducialTimestamp.db
+{
+    {
+        DEV=$(EVR),
+		LINK4="",
+		LINK5=""
+    }
+}
+
+
+#
+# Creates records to support PCDS's standard set of
+# event codes for the LCLS accelerator and PCDS experiments
+file pcdsEventCodes.db
+{
+   { DEV="$(EVR)", CARD="0" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsEvrApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsEvrApp/Makefile b/src/makeBaseApp/top/pcdsEvrApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/configure/RELEASE b/src/makeBaseApp/top/pcdsEvrApp/configure/RELEASE
new file mode 100644
index 0000000..64cfb98
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/configure/RELEASE
@@ -0,0 +1,38 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+EVENT_MODULE_VERSION=R3.3.0-2.5.0
+MISCUTILS_MODULE_VERSION=R2.2.2-0.4.0
+
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+EVENT=$(EPICS_MODULES)/event/$(EVENT_MODULE_VERSION)
+MISCUTILS=$(EPICS_MODULES)/miscUtils/$(MISCUTILS_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/src/Makefile b/src/makeBaseApp/top/pcdsEvrApp/src/Makefile
new file mode 100644
index 0000000..8b5f586
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/src/Makefile
@@ -0,0 +1,45 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+_APPNAME__DBD += evrSupport.dbd
+_APPNAME__DBD += devMrfEr.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += evrSupport
+_APPNAME__LIBS += devMrfEr
+_APPNAME__LIBS_RTEMS += mrfVme64x
+_APPNAME__LIBS_Linux += drvMrf
+_APPNAME__LIBS_Linux += mrfApi
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsEvrApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsEvrApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/Makefile b/src/makeBaseApp/top/pcdsEvrBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsEvrBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..eb36b38
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/Makefile@Common
@@ -0,0 +1,24 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsEvrBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..11bee62
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,10 @@
+# IOC archive file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC archive request 
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_", EVR = "_EVRPVROOT_" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..22b1ad5
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,10 @@
+# IOC autosave file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC autosave request 
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_", EVR = "_EVRPVROOT_" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..0e5254f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@Common
@@ -0,0 +1,57 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Set EVR module debug level
+ErDebugLevel( 0 )
+
+# Initialize PMC EVR
+ErConfigure( 0, 0, 0, 0, 1 )
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/evr.db",					"IOC=_IOCPVROOT_,EVR=_EVRPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5 )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..32ec48c
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,68 @@
+## Example RTEMS startup script
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+# Set EVR module debug level
+ErDebugLevel( 0 )
+
+# Configure EVR driver
+ErConfigure( 0, 0, 0, 0, 1 )
+
+## Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/evr.db",					"IOC=_IOCPVROOT_,EVR=_EVRPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5 )
+
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..5589466
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change xxx as needed for your hutch
+source /reg/d/iocCommon/All/xxx_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/xxx/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsEvrBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsIocApp/Db/Makefile b/src/makeBaseApp/top/pcdsIocApp/Db/Makefile
new file mode 100644
index 0000000..ec86d6f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/Db/Makefile
@@ -0,0 +1,33 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..86ba3e2
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,29 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin archive request 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_iocAdmin.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
+
+# Generate Save/Restore status archive requests
+#	Macros:
+#		IOC		- PV prefix for all IOC Save/Restore PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_SR.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..7f74c88
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,13 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		# Hack till msi supports empty substitutions
+		_FOOBAR_=_FOOBAR_
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsIocApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsIocApp/Makefile b/src/makeBaseApp/top/pcdsIocApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/configure/RELEASE b/src/makeBaseApp/top/pcdsIocApp/configure/RELEASE
new file mode 100644
index 0000000..0e05655
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/configure/RELEASE
@@ -0,0 +1,33 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/src/Makefile b/src/makeBaseApp/top/pcdsIocApp/src/Makefile
new file mode 100644
index 0000000..a06ea00
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/src/Makefile
@@ -0,0 +1,38 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsIocApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsIocApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsIocBoot/Makefile b/src/makeBaseApp/top/pcdsIocBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsIocBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..eb36b38
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/Makefile@Common
@@ -0,0 +1,24 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsIocBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsIocBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsIocBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..17c36f7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,10 @@
+# IOC archive file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC archive request 
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..b4a50ff
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,9 @@
+# _APPNAME_ IOC instance autosave file
+
+# Generate autosave PV list for IOC specific PV's
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..e82d0ab
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@Common
@@ -0,0 +1,50 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..3704bd6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,65 @@
+## Example RTEMS startup script
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Configure drivers as needed
+# EVR driver
+# ErConfigure( 0, 0, 0, 0, 1 )
+
+## Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..5589466
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change xxx as needed for your hutch
+source /reg/d/iocCommon/All/xxx_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/xxx/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsIocBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsModuleApp/Db/Makefile b/src/makeBaseApp/top/pcdsModuleApp/Db/Makefile
new file mode 100644
index 0000000..035b9f0
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/Db/Makefile
@@ -0,0 +1,24 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += dbExample1.db
+DB += dbExample2.db
+DB += dbSubExample.db
+
+#----------------------------------------------------
+# If <anyname>.db template is not named <anyname>*.template add
+# <anyname>_TEMPLATE = <templatename>
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample1.db b/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample1.db
new file mode 100644
index 0000000..4f16ada
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample1.db
@@ -0,0 +1,62 @@
+record(ai, "$(user):aiExample")
+{
+	field(DESC, "Analog input")
+	field(INP, "$(user):calcExample.VAL  NPP NMS")
+	field(EGUF, "10")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(LOPR, "0")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(calc, "$(user):calcExample")
+{
+	field(DESC, "Counter")
+	field(SCAN,"1 second")
+	field(FLNK, "$(user):aiExample")
+	field(CALC, "(A<B)?(A+C):D")
+	field(INPA, "$(user):calcExample.VAL  NPP NMS")
+	field(INPB, "9")
+	field(INPC, "1")
+	field(INPD, "0")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(xxx, "$(user):xxxExample")
+{
+	field(DESC, "xxx record")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(compress,"$(user):compressExample")
+{
+	field(DESC, "Circular buffer")
+	field(INP,"$(user):aiExample.VAL CP NMS")
+	field(ALG,"Circular Buffer")
+	field(NSAM,"10")
+	field(HOPR,"10")
+	field(EGU,"Counts")
+}
+
diff --git a/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample2.db b/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample2.db
new file mode 100644
index 0000000..836c53d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/Db/dbExample2.db
@@ -0,0 +1,38 @@
+record(calc, "$(user):calcExample$(no)")
+{
+	field(DESC, "Counter No. $(no)")
+	field(SCAN,"$(scan)")
+	field(FLNK, "$(user):aiExample$(no)")
+	field(CALC, "(A<B)?(A+C):D")
+	field(INPA, "$(user):calcExample$(no).VAL NPP NMS")
+	field(INPB, "9")
+	field(INPC, "1")
+	field(INPD, "0")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
+record(ai, "$(user):aiExample$(no)")
+{
+	field(DESC, "Analog input No. $(no)")
+	field(INP, "$(user):calcExample$(no).VAL NPP NMS")
+	field(EGUF, "10")
+	field(EGU, "Counts")
+	field(HOPR, "10")
+	field(LOPR, "0")
+	field(HIHI, "8")
+	field(HIGH, "6")
+	field(LOW, "4")
+	field(LOLO, "2")
+	field(HHSV, "MAJOR")
+	field(HSV, "MINOR")
+	field(LSV, "MINOR")
+	field(LLSV, "MAJOR")
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/Db/dbSubExample.db b/src/makeBaseApp/top/pcdsModuleApp/Db/dbSubExample.db
new file mode 100644
index 0000000..96b8638
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/Db/dbSubExample.db
@@ -0,0 +1,5 @@
+record(sub,"$(user):subExample")
+{
+    field(INAM,"mySubInit")
+    field(SNAM,"mySubProcess")
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/Makefile b/src/makeBaseApp/top/pcdsModuleApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/Makefile b/src/makeBaseApp/top/pcdsModuleApp/src/Makefile
new file mode 100644
index 0000000..3ab7ca1
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/Makefile
@@ -0,0 +1,76 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#==================================================
+# Build an IOC support library
+
+LIBRARY_IOC += xxxSupport
+
+# xxxRecord.h will be created from xxxRecord.dbd
+DBDINC += xxxRecord
+# install devXxxSoft.dbd into <top>/dbd
+DBD += xxxSupport.dbd
+
+# The following are compiled and added to the Support library
+xxxSupport_SRCS += xxxRecord.c
+xxxSupport_SRCS += devXxxSoft.c
+
+xxxSupport_LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#=============================
+# build an ioc application
+
+PROD_IOC = _APPNAME_
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += xxxSupport.dbd
+_APPNAME__DBD += dbSubExample.dbd
+_APPNAME__DBD += _APPNAME_Hello.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+_APPNAME__SRCS_vxWorks += -nil-
+
+# Add locally compiled object code
+_APPNAME__SRCS += dbSubExample.c
+_APPNAME__SRCS += _APPNAME_Hello.c
+
+# The following adds support from base/src/vxWorks
+_APPNAME__OBJS_vxWorks += $(EPICS_BASE_BIN)/vxComLibrary
+
+_APPNAME__LIBS += xxxSupport
+
+# NOTE: To build SNL programs, SNCSEQ must be defined
+# in the <top>/configure/RELEASE file
+
+ifneq ($(SNCSEQ),)
+    # This builds sncExample as a component of _APPNAME_
+    _APPNAME__SNCFLAGS += +r
+    _APPNAME__DBD += sncExample.dbd
+    _APPNAME__SRCS += sncExample.stt
+    _APPNAME__LIBS += seq pv
+
+    # The following builds sncProgram as a standalone application
+    PROD_HOST += sncProgram
+    sncProgram_SNCFLAGS += +m
+    sncProgram_SRCS += sncProgram.st
+    sncProgram_LIBS += seq pv
+    sncProgram_LIBS += $(EPICS_BASE_HOST_LIBS)
+endif
+
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.c b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.c
new file mode 100644
index 0000000..6582b84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.c
@@ -0,0 +1,31 @@
+/* Example showing how to register a new command with iocsh */
+
+#include <stdio.h>
+
+#include <epicsExport.h>
+#include <iocsh.h>
+
+/* This is the command, which the vxWorks shell will call directly */
+void hello(const char *name) {
+    if (name) {
+	printf("Hello %s, from _APPNAME_\n", name);
+    } else {
+	puts("Hello from _APPNAME_");
+    }
+}
+
+/* Information needed by iocsh */
+static const iocshArg     helloArg0 = {"name", iocshArgString};
+static const iocshArg    *helloArgs[] = {&helloArg0};
+static const iocshFuncDef helloFuncDef = {"hello", 1, helloArgs};
+
+/* Wrapper called by iocsh, selects the argument types that hello needs */
+static void helloCallFunc(const iocshArgBuf *args) {
+    hello(args[0].sval);
+}
+
+/* Registration routine, runs at startup */
+static void helloRegister(void) {
+    iocshRegister(&helloFuncDef, helloCallFunc);
+}
+epicsExportRegistrar(helloRegister);
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.dbd b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.dbd
new file mode 100644
index 0000000..64eb038
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Hello.dbd
@@ -0,0 +1 @@
+registrar(helloRegister)
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.c b/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.c
new file mode 100644
index 0000000..9a5776d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.c
@@ -0,0 +1,32 @@
+#include <stdio.h>
+
+#include <dbDefs.h>
+#include <registryFunction.h>
+#include <subRecord.h>
+#include <epicsExport.h>
+
+int mySubDebug;
+
+typedef long (*processMethod)(subRecord *precord);
+
+static long mySubInit(subRecord *precord,processMethod process)
+{
+    if (mySubDebug)
+        printf("Record %s called mySubInit(%p, %p)\n",
+               precord->name, (void*) precord, (void*) process);
+    return(0);
+}
+
+static long mySubProcess(subRecord *precord)
+{
+    if (mySubDebug)
+        printf("Record %s called mySubProcess(%p)\n",
+               precord->name, (void*) precord);
+    return(0);
+}
+
+/* Register these symbols for use by IOC code: */
+
+epicsExportAddress(int, mySubDebug);
+epicsRegisterFunction(mySubInit);
+epicsRegisterFunction(mySubProcess);
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.dbd b/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.dbd
new file mode 100644
index 0000000..a907fb7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/dbSubExample.dbd
@@ -0,0 +1,3 @@
+variable(mySubDebug)
+function(mySubInit)
+function(mySubProcess)
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/devXxxSoft.c b/src/makeBaseApp/top/pcdsModuleApp/src/devXxxSoft.c
new file mode 100644
index 0000000..0507fdf
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/devXxxSoft.c
@@ -0,0 +1,58 @@
+/* devXxxSoft.c */
+/* Example device support module */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "alarm.h"
+#include "cvtTable.h"
+#include "dbDefs.h"
+#include "dbAccess.h"
+#include "recGbl.h"
+#include "recSup.h"
+#include "devSup.h"
+#include "link.h"
+#include "xxxRecord.h"
+#include "epicsExport.h"
+
+/*Create the dset for devXxxSoft */
+static long init_record();
+static long read_xxx();
+struct {
+	long		number;
+	DEVSUPFUN	report;
+	DEVSUPFUN	init;
+	DEVSUPFUN	init_record;
+	DEVSUPFUN	get_ioint_info;
+	DEVSUPFUN	read_xxx;
+}devXxxSoft={
+	5,
+	NULL,
+	NULL,
+	init_record,
+	NULL,
+	read_xxx,
+};
+epicsExportAddress(dset,devXxxSoft);
+
+
+static long init_record(pxxx)
+    struct xxxRecord	*pxxx;
+{
+    if(recGblInitConstantLink(&pxxx->inp,DBF_DOUBLE,&pxxx->val))
+         pxxx->udf = FALSE;
+    return(0);
+}
+
+static long read_xxx(pxxx)
+    struct xxxRecord	*pxxx;
+{
+    long status;
+
+    status = dbGetLink(&(pxxx->inp),DBF_DOUBLE, &(pxxx->val),0,0);
+    /*If return was succesful then set undefined false*/
+    if(!status) pxxx->udf = FALSE;
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.dbd b/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.dbd
new file mode 100644
index 0000000..df61066
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.dbd
@@ -0,0 +1 @@
+registrar(sncExampleRegistrar)
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.stt b/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.stt
new file mode 100644
index 0000000..bc1a576
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/sncExample.stt
@@ -0,0 +1,28 @@
+program sncExample
+double v;
+assign v to "{user}:xxxExample";
+monitor v;
+
+ss ss1
+{
+	state low
+	{
+	    when(v>5.0)
+	    {
+		printf("changing to high\n");
+	    } state high
+	    when(delay(.1)) 
+	    {
+	    } state low
+	}
+	state high
+	{
+	    when(v<=5.0)
+	    {
+		printf("changing to low\n");
+	    } state low
+	    when(delay(.1))
+	    {
+	    } state high
+	}
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/sncProgram.st b/src/makeBaseApp/top/pcdsModuleApp/src/sncProgram.st
new file mode 100644
index 0000000..1ba2989
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/sncProgram.st
@@ -0,0 +1 @@
+#include "../sncExample.stt"
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.c b/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.c
new file mode 100644
index 0000000..6fb1472
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.c
@@ -0,0 +1,272 @@
+/* xxxRecord.c */
+/* Example record support module */
+  
+#include <stddef.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "alarm.h"
+#include "dbAccess.h"
+#include "recGbl.h"
+#include "dbEvent.h"
+#include "dbDefs.h"
+#include "dbAccess.h"
+#include "devSup.h"
+#include "errMdef.h"
+#include "recSup.h"
+#include "special.h"
+#define GEN_SIZE_OFFSET
+#include "xxxRecord.h"
+#undef  GEN_SIZE_OFFSET
+#include "epicsExport.h"
+
+/* Create RSET - Record Support Entry Table */
+#define report NULL
+#define initialize NULL
+static long init_record();
+static long process();
+#define special NULL
+#define get_value NULL
+#define cvt_dbaddr NULL
+#define get_array_info NULL
+#define put_array_info NULL
+static long get_units();
+static long get_precision();
+#define get_enum_str NULL
+#define get_enum_strs NULL
+#define put_enum_str NULL
+static long get_graphic_double();
+static long get_control_double();
+static long get_alarm_double();
+ 
+rset xxxRSET={
+	RSETNUMBER,
+	report,
+	initialize,
+	init_record,
+	process,
+	special,
+	get_value,
+	cvt_dbaddr,
+	get_array_info,
+	put_array_info,
+	get_units,
+	get_precision,
+	get_enum_str,
+	get_enum_strs,
+	put_enum_str,
+	get_graphic_double,
+	get_control_double,
+	get_alarm_double
+};
+epicsExportAddress(rset,xxxRSET);
+
+typedef struct xxxset { /* xxx input dset */
+	long		number;
+	DEVSUPFUN	dev_report;
+	DEVSUPFUN	init;
+	DEVSUPFUN	init_record; /*returns: (-1,0)=>(failure,success)*/
+	DEVSUPFUN	get_ioint_info;
+	DEVSUPFUN	read_xxx;
+}xxxdset;
+
+static void checkAlarms(xxxRecord *pxxx);
+static void monitor(xxxRecord *pxxx);
+
+static long init_record(void *precord,int pass)
+{
+    xxxRecord	*pxxx = (xxxRecord *)precord;
+    xxxdset	*pdset;
+    long	status;
+
+    if (pass==0) return(0);
+
+    if(!(pdset = (xxxdset *)(pxxx->dset))) {
+	recGblRecordError(S_dev_noDSET,(void *)pxxx,"xxx: init_record");
+	return(S_dev_noDSET);
+    }
+    /* must have read_xxx function defined */
+    if( (pdset->number < 5) || (pdset->read_xxx == NULL) ) {
+	recGblRecordError(S_dev_missingSup,(void *)pxxx,"xxx: init_record");
+	return(S_dev_missingSup);
+    }
+
+    if( pdset->init_record ) {
+	if((status=(*pdset->init_record)(pxxx))) return(status);
+    }
+    return(0);
+}
+
+static long process(void *precord)
+{
+	xxxRecord	*pxxx = (xxxRecord *)precord;
+	xxxdset		*pdset = (xxxdset *)(pxxx->dset);
+	long		 status;
+	unsigned char    pact=pxxx->pact;
+
+	if( (pdset==NULL) || (pdset->read_xxx==NULL) ) {
+		pxxx->pact=TRUE;
+		recGblRecordError(S_dev_missingSup,(void *)pxxx,"read_xxx");
+		return(S_dev_missingSup);
+	}
+
+	/* pact must not be set until after calling device support */
+	status=(*pdset->read_xxx)(pxxx);
+	/* check if device support set pact */
+	if ( !pact && pxxx->pact ) return(0);
+	pxxx->pact = TRUE;
+
+	recGblGetTimeStamp(pxxx);
+	/* check for alarms */
+	checkAlarms(pxxx);
+	/* check event list */
+	monitor(pxxx);
+	/* process the forward scan link record */
+        recGblFwdLink(pxxx);
+
+	pxxx->pact=FALSE;
+	return(status);
+}
+
+static long get_units(DBADDR *paddr, char *units)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+
+    strncpy(units,pxxx->egu,DB_UNITS_SIZE);
+    return(0);
+}
+
+static long get_precision(DBADDR *paddr, long *precision)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+
+    *precision = pxxx->prec;
+    if(paddr->pfield == (void *)&pxxx->val) return(0);
+    recGblGetPrec(paddr,precision);
+    return(0);
+}
+
+static long get_graphic_double(DBADDR *paddr,struct dbr_grDouble *pgd)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL
+    || fieldIndex == xxxRecordHIHI
+    || fieldIndex == xxxRecordHIGH
+    || fieldIndex == xxxRecordLOW
+    || fieldIndex == xxxRecordLOLO
+    || fieldIndex == xxxRecordHOPR
+    || fieldIndex == xxxRecordLOPR) {
+        pgd->upper_disp_limit = pxxx->hopr;
+        pgd->lower_disp_limit = pxxx->lopr;
+    } else recGblGetGraphicDouble(paddr,pgd);
+    return(0);
+}
+
+static long get_control_double(DBADDR *paddr,struct dbr_ctrlDouble *pcd)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL
+    || fieldIndex == xxxRecordHIHI
+    || fieldIndex == xxxRecordHIGH
+    || fieldIndex == xxxRecordLOW
+    || fieldIndex == xxxRecordLOLO) {
+	pcd->upper_ctrl_limit = pxxx->hopr;
+	pcd->lower_ctrl_limit = pxxx->lopr;
+    } else recGblGetControlDouble(paddr,pcd);
+    return(0);
+}
+
+static long get_alarm_double(DBADDR *paddr,struct dbr_alDouble *pad)
+{
+    xxxRecord	*pxxx=(xxxRecord *)paddr->precord;
+    int		fieldIndex = dbGetFieldIndex(paddr);
+
+    if(fieldIndex == xxxRecordVAL) {
+	pad->upper_alarm_limit = pxxx->hihi;
+	pad->upper_warning_limit = pxxx->high;
+	pad->lower_warning_limit = pxxx->low;
+	pad->lower_alarm_limit = pxxx->lolo;
+    } else recGblGetAlarmDouble(paddr,pad);
+    return(0);
+}
+
+static void checkAlarms(xxxRecord *pxxx)
+{
+	double		val;
+	float		hyst, lalm, hihi, high, low, lolo;
+	unsigned short	hhsv, llsv, hsv, lsv;
+
+	if(pxxx->udf == TRUE ){
+		recGblSetSevr(pxxx,UDF_ALARM,INVALID_ALARM);
+		return;
+	}
+	hihi = pxxx->hihi; lolo = pxxx->lolo; high = pxxx->high; low = pxxx->low;
+	hhsv = pxxx->hhsv; llsv = pxxx->llsv; hsv = pxxx->hsv; lsv = pxxx->lsv;
+	val = pxxx->val; hyst = pxxx->hyst; lalm = pxxx->lalm;
+
+	/* alarm condition hihi */
+	if (hhsv && (val >= hihi || ((lalm==hihi) && (val >= hihi-hyst)))){
+	        if (recGblSetSevr(pxxx,HIHI_ALARM,pxxx->hhsv)) pxxx->lalm = hihi;
+		return;
+	}
+
+	/* alarm condition lolo */
+	if (llsv && (val <= lolo || ((lalm==lolo) && (val <= lolo+hyst)))){
+	        if (recGblSetSevr(pxxx,LOLO_ALARM,pxxx->llsv)) pxxx->lalm = lolo;
+		return;
+	}
+
+	/* alarm condition high */
+	if (hsv && (val >= high || ((lalm==high) && (val >= high-hyst)))){
+	        if (recGblSetSevr(pxxx,HIGH_ALARM,pxxx->hsv)) pxxx->lalm = high;
+		return;
+	}
+
+	/* alarm condition low */
+	if (lsv && (val <= low || ((lalm==low) && (val <= low+hyst)))){
+	        if (recGblSetSevr(pxxx,LOW_ALARM,pxxx->lsv)) pxxx->lalm = low;
+		return;
+	}
+
+	/* we get here only if val is out of alarm by at least hyst */
+	pxxx->lalm = val;
+	return;
+}
+
+static void monitor(xxxRecord *pxxx)
+{
+	unsigned short	monitor_mask;
+	double		delta;
+
+        monitor_mask = recGblResetAlarms(pxxx);
+	/* check for value change */
+	delta = pxxx->mlst - pxxx->val;
+	if(delta<0.0) delta = -delta;
+	if (delta > pxxx->mdel) {
+		/* post events for value change */
+		monitor_mask |= DBE_VALUE;
+		/* update last value monitored */
+		pxxx->mlst = pxxx->val;
+	}
+
+	/* check for archive change */
+	delta = pxxx->alst - pxxx->val;
+	if(delta<0.0) delta = -delta;
+	if (delta > pxxx->adel) {
+		/* post events on value field for archive change */
+		monitor_mask |= DBE_LOG;
+		/* update last archive value monitored */
+		pxxx->alst = pxxx->val;
+	}
+
+	/* send out monitors connected to the value field */
+	if (monitor_mask){
+		db_post_events(pxxx,&pxxx->val,monitor_mask);
+	}
+	return;
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.dbd b/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.dbd
new file mode 100644
index 0000000..4a71c54
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/xxxRecord.dbd
@@ -0,0 +1,117 @@
+recordtype(xxx) {
+	include "dbCommon.dbd" 
+	field(VAL,DBF_DOUBLE) {
+		prompt("Current EGU Value")
+		asl(ASL0)
+		pp(TRUE)
+	}
+	field(INP,DBF_INLINK) {
+		prompt("Input Specification")
+		promptgroup(GUI_INPUTS)
+		special(SPC_NOMOD)
+		interest(1)
+	}
+	field(PREC,DBF_SHORT) {
+		prompt("Display Precision")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(EGU,DBF_STRING) {
+		prompt("Engineering Units")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+		size(16)
+	}
+	field(HOPR,DBF_FLOAT) {
+		prompt("High Operating Range")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(LOPR,DBF_FLOAT) {
+		prompt("Low Operating Range")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(HIHI,DBF_FLOAT) {
+		prompt("Hihi Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(LOLO,DBF_FLOAT) {
+		prompt("Lolo Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(HIGH,DBF_FLOAT) {
+		prompt("High Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(LOW,DBF_FLOAT) {
+		prompt("Low Alarm Limit")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+	}
+	field(HHSV,DBF_MENU) {
+		prompt("Hihi Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(LLSV,DBF_MENU) {
+		prompt("Lolo Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(HSV,DBF_MENU) {
+		prompt("High Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(LSV,DBF_MENU) {
+		prompt("Low Severity")
+		promptgroup(GUI_ALARMS)
+		pp(TRUE)
+		interest(1)
+		menu(menuAlarmSevr)
+	}
+	field(HYST,DBF_DOUBLE) {
+		prompt("Alarm Deadband")
+		promptgroup(GUI_ALARMS)
+		interest(1)
+	}
+	field(ADEL,DBF_DOUBLE) {
+		prompt("Archive Deadband")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(MDEL,DBF_DOUBLE) {
+		prompt("Monitor Deadband")
+		promptgroup(GUI_DISPLAY)
+		interest(1)
+	}
+	field(LALM,DBF_DOUBLE) {
+		prompt("Last Value Alarmed")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+	field(ALST,DBF_DOUBLE) {
+		prompt("Last Value Archived")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+	field(MLST,DBF_DOUBLE) {
+		prompt("Last Val Monitored")
+		special(SPC_NOMOD)
+		interest(3)
+	}
+}
diff --git a/src/makeBaseApp/top/pcdsModuleApp/src/xxxSupport.dbd b/src/makeBaseApp/top/pcdsModuleApp/src/xxxSupport.dbd
new file mode 100644
index 0000000..8094bdd
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/src/xxxSupport.dbd
@@ -0,0 +1,2 @@
+include "xxxRecord.dbd"
+device(xxx,CONSTANT,devXxxSoft,"SoftChannel")
diff --git a/src/makeBaseApp/top/pcdsModuleApp/srcDisplay/Makefile b/src/makeBaseApp/top/pcdsModuleApp/srcDisplay/Makefile
new file mode 100644
index 0000000..dec71f3
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/srcDisplay/Makefile
@@ -0,0 +1,29 @@
+#  -*- Makefile -*-
+T_A=$EPICS_HOST_ARCH
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+# EDM Screens to install
+# You can override the default installation path.
+#INSTALL_LOCATION=
+
+#EDLS += example.edl
+
+# Install images to be used by EDM (Gif and Png are supported)
+# PNG is better and preferred.
+#PNGS +=
+#GIFS +=
+
+# EDM Screens to install
+# If you want to install all screens and are
+# lazy use the wildcard method. :)
+#EDLS+=$(wildcard *.edl)
+#PNGS+=$(wildcard *.png)
+#GIFS+=$(wildcard *.gif)
+
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
diff --git a/src/makeBaseApp/top/pcdsModuleApp/srcDisplay/example.edl b/src/makeBaseApp/top/pcdsModuleApp/srcDisplay/example.edl
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/Makefile b/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/Makefile
new file mode 100644
index 0000000..ee58d1c
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/Makefile
@@ -0,0 +1,29 @@
+# Makefile for copying streamDevice protocol files during build.
+# Author: Jason Tiller
+
+T_A=$(EPICS_HOST_ARCH)
+TOP=../..
+include $(TOP)/configure/CONFIG
+
+######################################################################
+# Specify what files should be copied and where.
+
+# What protocol files should be copied as part of the build.
+# COPY_FILES = example.proto
+
+# What subdirectory should hold the protcol files.  For this example,
+# $INSTALL_LOCATION/protocol will be created.
+# COPY_SUBDIR = protocol
+
+# Uncomment this if you only want to copy when *not* installing to
+# your development area.  Useful for iocBoot, where the source and
+# target directories are actually the same.
+# COPY_ONLY_IF_NON_LOCAL=1
+
+######################################################################
+# Don't change these.
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.copy
+
+######################################################################
+# Add additional RULES files, if necessary.
diff --git a/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/example.proto b/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/example.proto
new file mode 100644
index 0000000..22d7882
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleApp/srcProtocol/example.proto
@@ -0,0 +1,24 @@
+# This is an example streamDevice protocol file.
+
+Terminator = CR LF;
+ReadTimeout = 10;
+# ReplyTimeout = 2000;
+# MaxInput = 32;
+# InTerminator = CR LF;
+# ExtraInput = Ignore;
+
+# read_X      {in "$%f,%*f,%*f,N%*4s\r\n";}
+# read_X      {out "*9900XY"; in "$%f,%*f,%*f,N%*4s";}
+# read_Y      {               in "$%*f,%f,%*f,N%*4s";}
+# read_temp   {               in "$%*f,%*f,%f,N%*4s";}
+# read_serial {               in "$%*f,%*f,%*f,N%4s";}
+
+# For I/O Intr mode - every 1 second.
+start_X { out "*9900XYC2"; }
+read_X      {in "$%f,%(AMO:HFP:CLIN:Y.VAL)f,%(AMO:HFP:CLIN:TEMP.VAL)f,N%(AMO:HFP:CLIN:SERL.VAL)4s";}
+
+# For SCAN mode.
+# start_X { out "*9900XYC-OFF"; }
+# read_X      {out "*9900XY"; in "$%f,%(AMO:MT:HFP:CLIN:Y.VAL)f,%(AMO:MT:HFP:CLIN:TEMP.VAL)f,N%(AMO:MT:HFP:CLIN:SERL.VAL)4s";}
+
+# debug {in "%s"}
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/Makefile b/src/makeBaseApp/top/pcdsModuleBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..7790152
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@Common
@@ -0,0 +1,15 @@
+# Makefile to install the st.cmd into the correctly location.
+# Author: Jason Tiller
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# See RULES.copy for more information on these variables.
+COPY_ONLY_IF_NON_LOCAL=1
+COPY_SUBDIR=iocBoot/ioc_APPNAME_
+COPY_FILES=st.cmd
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks
new file mode 100644
index 0000000..c7f3254
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks
@@ -0,0 +1,6 @@
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = cdCommands
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks6 b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks6
new file mode 100644
index 0000000..c7f3254
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/Makefile@vxWorks6
@@ -0,0 +1,6 @@
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = cdCommands
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@vxWorks b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@vxWorks
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsModuleBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..d04070f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Common
@@ -0,0 +1,41 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+< envPaths
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd ${TOP}
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_Host")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_Host,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_Host")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+cd ${TOP}/iocBoot/${IOC}
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_Host"
+
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Cross b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Cross
new file mode 100644
index 0000000..7f33928
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@Cross
@@ -0,0 +1,26 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+#< envPaths
+
+## Register all support components
+dbLoadDatabase("../../dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Load record instances
+dbLoadRecords("../../db/dbExample1.db","user=_USER_Host")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=1,scan=1 second")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=2,scan=2 second")
+dbLoadRecords("../../db/dbExample2.db","user=_USER_Host,no=3,scan=5 second")
+dbLoadRecords("../../db/dbSubExample.db","user=_USER_Host")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_"
+
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..7127a27
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,42 @@
+## Example RTEMS startup script
+
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+< envPaths
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#var mySubDebug 1
+
+iocInit()
+
+## Start any sequence programs
+#seq sncExample,"user=_USER_"
+
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
+
+
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks
new file mode 100644
index 0000000..947003d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks
@@ -0,0 +1,52 @@
+## Example vxWorks startup file
+
+## The following is needed if your board support package doesn't at boot time
+## automatically cd to the directory containing its startup script
+#cd "_TOP_/iocBoot/_IOC_"
+
+< cdCommands
+#< ../nfsCommands
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd topbin
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+ld < _APPNAME_.munch
+
+## This drvTS initializer is needed if the IOC has a hardware event system
+#TSinit
+
+## Register all support components
+cd top
+dbLoadDatabase("dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#mySubDebug = 1
+
+cd startup
+iocInit()
+
+## Start any sequence programs
+#seq &sncExample,"user=_USER_"
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks6 b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks6
new file mode 100644
index 0000000..947003d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/ioc/st.cmd@vxWorks6
@@ -0,0 +1,52 @@
+## Example vxWorks startup file
+
+## The following is needed if your board support package doesn't at boot time
+## automatically cd to the directory containing its startup script
+#cd "_TOP_/iocBoot/_IOC_"
+
+< cdCommands
+#< ../nfsCommands
+
+
+# IOCs can load settings which are common
+# for all IOCs. Such as EPICS_CA_ADDR_LIST, etc...
+# The file: pre_st.cmd does the trick
+# </afs/slac/g/lcls/build/epics/iocCommon/All/pre_st.cmd
+
+
+cd topbin
+## You may have to change _APPNAME_ to something else
+## everywhere it appears in this file
+
+ld < _APPNAME_.munch
+
+## This drvTS initializer is needed if the IOC has a hardware event system
+#TSinit
+
+## Register all support components
+cd top
+dbLoadDatabase("dbd/_APPNAME_.dbd",0,0)
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+## Load record instances
+dbLoadRecords("db/dbExample1.db","user=_USER_")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=1,scan=1 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=2,scan=2 second")
+dbLoadRecords("db/dbExample2.db","user=_USER_,no=3,scan=5 second")
+dbLoadRecords("db/dbSubExample.db","user=_USER_")
+
+## Set this to see messages from mySub
+#mySubDebug = 1
+
+cd startup
+iocInit()
+
+## Start any sequence programs
+#seq &sncExample,"user=_USER_"
+
+## Now we need to do a favor for the IRMIS crawler
+## All IOCs should dump some common info after initial
+## startup.
+## The file: post_st.cmd does the trick
+#</afs/slac/g/lcls/build/epics/iocCommon/All/post_st.cmd
+
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/Makefile b/src/makeBaseApp/top/pcdsModuleLib/Db/Makefile
new file mode 100644
index 0000000..d8b4ab6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/Makefile
@@ -0,0 +1,32 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+# DB += _APPNAME_.db
+DB += _APPNAME_.template
+DB += _APPNAME_.substitutions
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+# REQ += autosave_APPNAME_.req
+REQ += _APPNAME_.tpl-req
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+# ARCHIVE += archive_APPNAME_.archive
+ARCHIVE += _APPNAME_.tpl-arch
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.substitutions b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.substitutions
new file mode 100644
index 0000000..34faf3d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.substitutions
@@ -0,0 +1,16 @@
+#
+# _APPNAME_ database substitutions file
+#
+
+# Generate _APPNAME_ db file 
+#	Macros:
+#		TODO:	List here any macros used in the template
+#				Note which ones have defaults.
+file __APPNAME_.template
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.template b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.template
new file mode 100644
index 0000000..9da42d8
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.template
@@ -0,0 +1,7 @@
+
+
+record( stringout, "$(IOC):_APPNAME_:STATUS" )
+{
+	field( DTYP, "Soft Channel" )
+	field( VAL,	 "Unknown status" )
+}
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-arch b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-arch
new file mode 100644
index 0000000..355528e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-arch
@@ -0,0 +1,3 @@
+# _APPNAME_ archive template file
+
+# TODO: Add list of PV's to archive w/ rates and monitor/scan
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-req b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-req
new file mode 100644
index 0000000..2f2e83d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/_APPNAME_.tpl-req
@@ -0,0 +1,3 @@
+# _APPNAME_ autosave template file
+
+# TODO: Add list of PV's to autosave
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.sub-arch b/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.sub-arch
new file mode 100644
index 0000000..e1cd8c7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.sub-arch
@@ -0,0 +1,16 @@
+#
+# _APPNAME_ archive substitutions file
+#
+
+# Generate _APPNAME_ archive file 
+#	Macros:
+#		TODO:	List here any macros used in the template
+#				Note which ones have defaults.
+file archive__APPNAME_.template
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.tpl-arch b/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.tpl-arch
new file mode 100644
index 0000000..4aef458
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/archive__APPNAME_.tpl-arch
@@ -0,0 +1,30 @@
+#
+# Archive template for _APPNAME_
+#
+# Syntax:	<pv_name>   		<period> [ monitor ]
+# Example:	TST:R00:IOC:00:STATUS   0.1    monitor
+#
+# For monitor mode, the period should be your estimate
+# of how often the PV will change and is used to determine
+# how big a buffer to allocate in the archiver to guard
+# against dropped values.
+#
+# For sample mode, (no "monitor" keyword), the period is the
+# rate at which to sample and archive the PV.
+
+# Archive values which seldom change 
+# Ex: TST:R00:IOC:00:DEVNAME	30	monitor
+#
+# TODO:	Add a list of PV's which should be archived, but seldom change.
+
+# Archive values which occasionally have bursts of
+# activity which needs to be archived.
+# Ex: TST:R00:IOC:00:STATUS	0.1	monitor
+#
+# TODO:	Add a list of PV's which have burst activity
+
+# Archive values which change often but don't need all values archived
+# Ex: TST:R00:IOC:00:TEMP	30
+#
+# TODO:	Add a list of PV's for sampled archiving
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.sub-req b/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.sub-req
new file mode 100644
index 0000000..018ea14
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.sub-req
@@ -0,0 +1,16 @@
+#
+# _APPNAME_ autosave substitutions file
+#
+
+# Generate _APPNAME_ autosave file 
+#	Macros:
+#		TODO:	List here any macros used in the template
+#				Note which ones have defaults.
+file autosave__APPNAME_.template
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.tpl-req b/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.tpl-req
new file mode 100644
index 0000000..901c735
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Db/autosave__APPNAME_.tpl-req
@@ -0,0 +1,10 @@
+#
+# Autosave template for _APPNAME_
+#
+# Syntax:	<pv_name>
+# Example:	TST:R00:IOC:00:HIGH_LIMIT 
+#
+
+# TODO:	Add a list of PV's which should be saved
+# periodically and restored when the IOC reboots
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Makefile b/src/makeBaseApp/top/pcdsModuleLib/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/Replace.pl b/src/makeBaseApp/top/pcdsModuleLib/Replace.pl
new file mode 100644
index 0000000..66ce6ae
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/Replace.pl
@@ -0,0 +1,15 @@
+#!/usr/bin/perl
+
+sub ReplaceFilenameHook
+{
+	print "ReplaceFilenameHook: $_[0]\n" if $opt_d;
+	return $_[0];
+}
+sub ReplaceLineHook
+{
+#	print "ReplaceLineHook: $_[0]\n" if $opt_d;
+	return $_[0];
+}
+
+# Always end Replace.pl with a "1" so it returns true
+1;
diff --git a/src/makeBaseApp/top/pcdsModuleLib/configure/RELEASE b/src/makeBaseApp/top/pcdsModuleLib/configure/RELEASE
new file mode 100644
index 0000000..07fb72d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/configure/RELEASE
@@ -0,0 +1,31 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+# Ex: IOCADMIN_MODULE_VERSION=R2.0.0-1.0.0
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+# Ex: IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/src/Makefile b/src/makeBaseApp/top/pcdsModuleLib/src/Makefile
new file mode 100644
index 0000000..89238ce
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/src/Makefile
@@ -0,0 +1,34 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build a module library
+# Use LIBRARY_IOC_RTEMS for RTEMS only
+# Use LIBRARY_IOC_Linux for Linux only
+LIBRARY_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be made up from these files:
+DBD += _APPNAME_.dbd
+
+# Add any header files here which should be installed
+INC	+=	_APPNAME_.h
+
+# Add any html documentation here
+# HTMLS	+=	index.html
+# HTMLS +=	_APPNAME_.html
+HTMLS_DIR	= .
+
+# Add any source files here
+# Note: No lib will be built if no sources are listed here
+LIBSRCS += _APPNAME_.cpp
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.cpp b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.cpp
new file mode 100644
index 0000000..6990d77
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.cpp
@@ -0,0 +1,14 @@
+/* _APPNAME_.cpp */
+/* Author:  _USER_	 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <string.h>
+#include <stdio.h>
+#include "_APPNAME_.h"
+
+int	 _APPNAME_Init( )
+{
+    printf( "_APPNAME_ Initialized.\n" );
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.dbd b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.dbd
new file mode 100644
index 0000000..ec6ea3f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.dbd
@@ -0,0 +1 @@
+include "base.dbd"
diff --git a/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.h b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.h
new file mode 100644
index 0000000..b55ca28
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsModuleLib/src/_APPNAME_.h
@@ -0,0 +1,29 @@
+#ifndef	_APPNAME__H
+#define _APPNAME__H
+
+/*
+ *	Author:  _USER_
+ *
+ *	Abstract:
+ *		TODO:	What does this lib provide?
+ */
+
+#ifdef	__cplusplus
+extern "C" {
+#endif	/*	__cplusplus	*/
+
+
+/*
+ * Constants
+ */
+
+
+/*
+ * Function declarations
+ */
+int		_APPNAME_Init( );
+
+#ifdef	__cplusplus
+}
+#endif	/*	__cplusplus	*/
+#endif	/*	_APPNAME_H	*/
diff --git a/src/makeBaseApp/top/pcdsMotorApp/Db/Makefile b/src/makeBaseApp/top/pcdsMotorApp/Db/Makefile
new file mode 100644
index 0000000..ec86d6f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/Db/Makefile
@@ -0,0 +1,33 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..60a6698
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,32 @@
+#
+# _APPNAME_ substitutions file
+#
+# Generate a list of PV's which will be expanded
+# once using the $(IOC) macro for each IOC instance.
+#
+# Typically, IOC will be expanded in
+#	iocBoot/<ioc_name>/Makefile
+# so no need to define it here.
+#
+
+# Generate iocAdmin archive PV's 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+file archive_iocAdmin.tpl-arch
+{
+	{
+		IOC=$(IOC)
+	}
+}
+
+# Generate Save/Restore archive PV's
+#	Macros:
+#		IOC		- PV prefix for all IOC Save/Restore PV's
+file archive_SR.tpl-arch
+{
+	{
+		IOC=$(IOC)
+	}
+}
+
+# TODO: Add your custom template expansions here
diff --git a/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..e9a5054
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,20 @@
+#
+# _APPNAME_ autosave substitutions file
+#
+# Generate a list of PV's which will be expanded
+# once using the $(IOC) macro for each IOC instance.
+#
+# Typically, IOC will be expanded in
+#	iocBoot/<ioc_name>/Makefile
+# so no need to define it here.
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		IOC=$(IOC)
+	}
+}
+
+# TODO: Add your custom template expansions here
diff --git a/src/makeBaseApp/top/pcdsMotorApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsMotorApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsMotorApp/Makefile b/src/makeBaseApp/top/pcdsMotorApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/_APPNAME_.edl b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/_APPNAME_.edl
new file mode 100644
index 0000000..4a3e16e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/_APPNAME_.edl
@@ -0,0 +1,1393 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 2526
+y 236
+w 560
+h 259
+font "helvetica-medium-r-10.0"
+ctlFont "helvetica-medium-r-10.0"
+btnFont "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 7
+textColor index 14
+ctlFgColor1 index 25
+ctlFgColor2 index 18
+ctlBgColor1 index 3
+ctlBgColor2 index 5
+topShadowColor index 1
+botShadowColor index 11
+title "IMS MDrivePlus Motor Controller - $(MOTOR)"
+showGrid
+snapToGrid
+gridSize 8
+endScreenProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 8
+y 40
+w 264
+h 192
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 6
+lineWidth 0
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 6
+lineWidth 0
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 120
+w 16
+h 16
+lineColor index 39
+lineAlarm
+fill
+fillColor index 39
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 120
+w 16
+h 16
+lineColor index 39
+lineAlarm
+fill
+fillColor index 39
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 27
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).DMOV"
+visMin ".05"
+visMax "99.0"
+value {
+  "Stopped"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 72
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 17
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).MOVN"
+visMin ".05"
+visMax "99.0"
+value {
+  "Moving"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 128
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 82
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).SPMG"
+visMin "1"
+visMax "2"
+value {
+  "PAUSED"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 0
+y 0
+w 560
+h 24
+font "helvetica-bold-r-14.0"
+fgColor index 14
+bgColor index 56
+value {
+  "Motor $(MOTOR)"
+}
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 288
+y 40
+w 256
+h 192
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 8
+y 32
+w 48
+h 16
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+value {
+  "Status"
+}
+endObjectProperties
+
+# (Exit Button)
+object activeExitButtonClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 512
+y 0
+w 48
+h 24
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+label "Exit"
+font "helvetica-medium-r-12.0"
+3d
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 88
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Position"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 384
+y 120
+w 72
+h 24
+controlPv "$(MOTOR).TWV"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 120
+w 48
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Relative"
+  "Move"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 416
+y 192
+w 64
+h 32
+fgColor index 35
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).STOP"
+pressValue "1"
+onLabel "STOP"
+offLabel "STOP"
+3d
+useEnumNumeric
+font "helvetica-bold-r-18.0"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 288
+y 32
+w 56
+h 16
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+value {
+  "Control"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 88
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Absolute"
+  "Position"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 176
+y 0
+w 232
+h 24
+controlPv "$(MOTOR).DESC"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 376
+y 88
+w 88
+h 24
+controlPv "$(MOTOR).VAL"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 320
+y 56
+w 168
+h 24
+fgColor index 14
+bgColor index 3
+selectColor index 3
+inconsistentColor index 5
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).SPMG"
+indicatorPv "$(MOTOR).SPMG"
+font "helvetica-medium-r-12.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 120
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Limit &"
+  "Switches"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 120
+w 16
+h 16
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR).LLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 120
+w 16
+h 16
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR).HLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 152
+y 120
+w 16
+h 16
+lineColor index 30
+lineAlarm
+fill
+fillColor index 40
+visPv "$(MOTOR).LVIO"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 152
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Velocity"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 376
+y 152
+w 88
+h 24
+controlPv "$(MOTOR).VELO"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 160
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "HW Steps"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 120
+y 160
+w 80
+h 24
+controlPv "$(MOTOR).RMP"
+displayMode "decimal"
+fgColor index 16
+fgAlarm
+bgColor index 12
+fill
+font "courier-medium-r-12.0"
+fontAlign "center"
+lineWidth 2
+lineAlarm
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 472
+y 88
+w 16
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 200
+y 144
+w 24
+h 16
+font "helvetica-medium-r-8.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "CW"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 96
+y 144
+w 24
+h 16
+font "helvetica-medium-r-8.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "CCW"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 472
+y 152
+w 16
+h 32
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 472
+y 152
+w 16
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 472
+y 160
+w 13
+h 24
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/sec"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 30
+fillAlarm
+lineWidth 0
+visPv "$(MOTOR).RLLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 30
+fillAlarm
+lineWidth 0
+visPv "$(MOTOR).RHLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 104
+w 24
+h 16
+controlPv "$(MOTOR).LLM"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 80
+w 24
+h 16
+controlPv "$(MOTOR).HLM"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 120
+w 24
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 168
+w 24
+h 16
+controlPv "$(MOTOR).VBAS"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 144
+w 24
+h 16
+controlPv "$(MOTOR).VMAX"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 368
+y 40
+w 88
+h 16
+font "helvetica-bold-r-12.0"
+fgColor index 35
+bgColor index 10
+visPv "$(MOTOR).SET"
+visMin "1"
+visMax "2"
+value {
+  "Setting Mode!"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 192
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Dial Position"
+}
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 120
+y 192
+w 80
+h 24
+controlPv "$(MOTOR).DRBV"
+font "courier-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 12
+limitsFromDb
+nullColor index 18
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 112
+y 88
+w 96
+h 24
+controlPv "$(MOTOR).RBV"
+font "courier-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 12
+limitsFromDb
+nullColor index 18
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 400
+y 232
+w 128
+h 24
+controlPv "$(IOC):TOD"
+precision 1
+fgColor index 14
+fgAlarm
+bgColor index 12
+font "helvetica-medium-r-12.0"
+fontAlign "right"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 232
+y 232
+w 112
+h 24
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 4
+useDisplayBg
+value {
+  "$(IOC)"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 200
+y 56
+w 20
+h 20
+lineColor index 14
+fill
+fillColor index 15
+fillAlarm
+alarmPv "$(MOTOR):STATUS"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 208
+y 168
+w 64
+h 16
+font "helvetica-bold-i-12.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).DIR"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "Reversed"
+}
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 72
+y 120
+w 40
+h 16
+controlPv "$(MOTOR):REV_MEANS"
+font "helvetica-bold-r-12.0"
+fontAlign "right"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 208
+y 120
+w 40
+h 16
+controlPv "$(MOTOR):FW_MEANS"
+font "helvetica-bold-r-12.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 136
+y 232
+w 2
+h 0
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+autoSize
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 464
+y 120
+w 40
+h 24
+
+beginGroup
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 464
+y 120
+w 40
+h 24
+fgColor index 14
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).TWF"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-bold-r-10.0"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 464
+y 120
+w 40
+h 24
+controlPv "$(MOTOR):FW_MEANS"
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 344
+y 120
+w 40
+h 24
+
+beginGroup
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 344
+y 120
+w 40
+h 24
+fgColor index 14
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).TWR"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-bold-r-10.0"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 344
+y 120
+w 40
+h 24
+controlPv "$(MOTOR):REV_MEANS"
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 216
+y 83
+w 48
+h 28
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 218
+y 83
+w 45
+h 12
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).LVIO"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "soft limit"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 99
+w 48
+h 12
+font "helvetica-bold-r-10.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).LVIO"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "exceeded"
+}
+autoSize
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 312
+y 200
+w 48
+h 24
+fgColor index 14
+bgColor index 3
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-10.0"
+buttonLabel "SETUP"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "motionScreens/motor_setup.edl"
+}
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 456
+y 0
+w 56
+h 24
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-12.0"
+buttonLabel "Home"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "AMOHome"
+}
+setPosition {
+  0 "parentWindow"
+}
+replaceSymbols {
+  0 1
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 96
+y 232
+w 136
+h 24
+controlPv "$(IOC):UPTIME"
+precision 1
+fgColor index 14
+fgAlarm
+bgColor index 12
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 8
+y 232
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 4
+useDisplayBg
+value {
+  "IOC Uptime:"
+}
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor.edl b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor.edl
new file mode 100644
index 0000000..4a3e16e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor.edl
@@ -0,0 +1,1393 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 2526
+y 236
+w 560
+h 259
+font "helvetica-medium-r-10.0"
+ctlFont "helvetica-medium-r-10.0"
+btnFont "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 7
+textColor index 14
+ctlFgColor1 index 25
+ctlFgColor2 index 18
+ctlBgColor1 index 3
+ctlBgColor2 index 5
+topShadowColor index 1
+botShadowColor index 11
+title "IMS MDrivePlus Motor Controller - $(MOTOR)"
+showGrid
+snapToGrid
+gridSize 8
+endScreenProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 8
+y 40
+w 264
+h 192
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 6
+lineWidth 0
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 6
+lineWidth 0
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 120
+w 16
+h 16
+lineColor index 39
+lineAlarm
+fill
+fillColor index 39
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 120
+w 16
+h 16
+lineColor index 39
+lineAlarm
+fill
+fillColor index 39
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 27
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).DMOV"
+visMin ".05"
+visMax "99.0"
+value {
+  "Stopped"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 72
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 17
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).MOVN"
+visMin ".05"
+visMax "99.0"
+value {
+  "Moving"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 128
+y 56
+w 56
+h 24
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 82
+fgAlarm
+bgColor index 0
+useDisplayBg
+visPv "$(MOTOR).SPMG"
+visMin "1"
+visMax "2"
+value {
+  "PAUSED"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 0
+y 0
+w 560
+h 24
+font "helvetica-bold-r-14.0"
+fgColor index 14
+bgColor index 56
+value {
+  "Motor $(MOTOR)"
+}
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 288
+y 40
+w 256
+h 192
+lineColor index 3
+fill
+fillColor index 3
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 8
+y 32
+w 48
+h 16
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+value {
+  "Status"
+}
+endObjectProperties
+
+# (Exit Button)
+object activeExitButtonClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 512
+y 0
+w 48
+h 24
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+label "Exit"
+font "helvetica-medium-r-12.0"
+3d
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 88
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Position"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 384
+y 120
+w 72
+h 24
+controlPv "$(MOTOR).TWV"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 120
+w 48
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Relative"
+  "Move"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 416
+y 192
+w 64
+h 32
+fgColor index 35
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).STOP"
+pressValue "1"
+onLabel "STOP"
+offLabel "STOP"
+3d
+useEnumNumeric
+font "helvetica-bold-r-18.0"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 288
+y 32
+w 56
+h 16
+font "helvetica-bold-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+value {
+  "Control"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 88
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Absolute"
+  "Position"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 176
+y 0
+w 232
+h 24
+controlPv "$(MOTOR).DESC"
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 376
+y 88
+w 88
+h 24
+controlPv "$(MOTOR).VAL"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 320
+y 56
+w 168
+h 24
+fgColor index 14
+bgColor index 3
+selectColor index 3
+inconsistentColor index 5
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).SPMG"
+indicatorPv "$(MOTOR).SPMG"
+font "helvetica-medium-r-12.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 120
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Limit &"
+  "Switches"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 120
+w 16
+h 16
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR).LLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 120
+w 16
+h 16
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR).HLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 152
+y 120
+w 16
+h 16
+lineColor index 30
+lineAlarm
+fill
+fillColor index 40
+visPv "$(MOTOR).LVIO"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 152
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Velocity"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 376
+y 152
+w 88
+h 24
+controlPv "$(MOTOR).VELO"
+font "helvetica-medium-r-12.0"
+fgColor index 25
+bgColor index 3
+useDisplayBg
+editable
+motifWidget
+limitsFromDb
+nullColor index 18
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 160
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "HW Steps"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 120
+y 160
+w 80
+h 24
+controlPv "$(MOTOR).RMP"
+displayMode "decimal"
+fgColor index 16
+fgAlarm
+bgColor index 12
+fill
+font "courier-medium-r-12.0"
+fontAlign "center"
+lineWidth 2
+lineAlarm
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 472
+y 88
+w 16
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 200
+y 144
+w 24
+h 16
+font "helvetica-medium-r-8.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "CW"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 96
+y 144
+w 24
+h 16
+font "helvetica-medium-r-8.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "CCW"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 472
+y 152
+w 16
+h 32
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 472
+y 152
+w 16
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 472
+y 160
+w 13
+h 24
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/sec"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 120
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 30
+fillAlarm
+lineWidth 0
+visPv "$(MOTOR).RLLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 184
+y 144
+w 16
+h 8
+lineColor index 3
+fill
+fillColor index 30
+fillAlarm
+lineWidth 0
+visPv "$(MOTOR).RHLS"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 104
+w 24
+h 16
+controlPv "$(MOTOR).LLM"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 80
+w 24
+h 16
+controlPv "$(MOTOR).HLM"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 120
+w 24
+h 24
+controlPv "$(MOTOR).EGU"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 168
+w 24
+h 16
+controlPv "$(MOTOR).VBAS"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 512
+y 144
+w 24
+h 16
+controlPv "$(MOTOR).VMAX"
+format "decimal"
+font "helvetica-medium-r-8.0"
+fontAlign "right"
+fgColor index 14
+fgAlarm
+bgColor index 3
+useDisplayBg
+limitsFromDb
+nullColor index 18
+nullCondition "nullEq0"
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 368
+y 40
+w 88
+h 16
+font "helvetica-bold-r-12.0"
+fgColor index 35
+bgColor index 10
+visPv "$(MOTOR).SET"
+visMin "1"
+visMax "2"
+value {
+  "Setting Mode!"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 16
+y 192
+w 88
+h 24
+font "helvetica-medium-r-12.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Dial Position"
+}
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 120
+y 192
+w 80
+h 24
+controlPv "$(MOTOR).DRBV"
+font "courier-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 12
+limitsFromDb
+nullColor index 18
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 112
+y 88
+w 96
+h 24
+controlPv "$(MOTOR).RBV"
+font "courier-medium-r-12.0"
+fontAlign "center"
+fgColor index 15
+fgAlarm
+bgColor index 12
+limitsFromDb
+nullColor index 18
+showUnits
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 400
+y 232
+w 128
+h 24
+controlPv "$(IOC):TOD"
+precision 1
+fgColor index 14
+fgAlarm
+bgColor index 12
+font "helvetica-medium-r-12.0"
+fontAlign "right"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 232
+y 232
+w 112
+h 24
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 4
+useDisplayBg
+value {
+  "$(IOC)"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 200
+y 56
+w 20
+h 20
+lineColor index 14
+fill
+fillColor index 15
+fillAlarm
+alarmPv "$(MOTOR):STATUS"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 208
+y 168
+w 64
+h 16
+font "helvetica-bold-i-12.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).DIR"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "Reversed"
+}
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 72
+y 120
+w 40
+h 16
+controlPv "$(MOTOR):REV_MEANS"
+font "helvetica-bold-r-12.0"
+fontAlign "right"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 208
+y 120
+w 40
+h 16
+controlPv "$(MOTOR):FW_MEANS"
+font "helvetica-bold-r-12.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 136
+y 232
+w 2
+h 0
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+autoSize
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 464
+y 120
+w 40
+h 24
+
+beginGroup
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 464
+y 120
+w 40
+h 24
+fgColor index 14
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).TWF"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-bold-r-10.0"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 464
+y 120
+w 40
+h 24
+controlPv "$(MOTOR):FW_MEANS"
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 344
+y 120
+w 40
+h 24
+
+beginGroup
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 344
+y 120
+w 40
+h 24
+fgColor index 14
+onColor index 4
+offColor index 4
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR).TWR"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-bold-r-10.0"
+endObjectProperties
+
+# (Text Monitor)
+object activeXTextDspClass:noedit
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 344
+y 120
+w 40
+h 24
+controlPv "$(MOTOR):REV_MEANS"
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+nullColor index 18
+useHexPrefix
+newPos
+objType "monitors"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 216
+y 83
+w 48
+h 28
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 218
+y 83
+w 45
+h 12
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).LVIO"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "soft limit"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 99
+w 48
+h 12
+font "helvetica-bold-r-10.0"
+fgColor index 14
+bgColor index 3
+useDisplayBg
+visPv "$(MOTOR).LVIO"
+visInvert
+visMin "0"
+visMax "1"
+value {
+  "exceeded"
+}
+autoSize
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 312
+y 200
+w 48
+h 24
+fgColor index 14
+bgColor index 3
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-10.0"
+buttonLabel "SETUP"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "motionScreens/motor_setup.edl"
+}
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 456
+y 0
+w 56
+h 24
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-12.0"
+buttonLabel "Home"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "AMOHome"
+}
+setPosition {
+  0 "parentWindow"
+}
+replaceSymbols {
+  0 1
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 96
+y 232
+w 136
+h 24
+controlPv "$(IOC):UPTIME"
+precision 1
+fgColor index 14
+fgAlarm
+bgColor index 12
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 8
+y 232
+w 80
+h 24
+font "helvetica-medium-r-12.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 4
+useDisplayBg
+value {
+  "IOC Uptime:"
+}
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_mcode.edl b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_mcode.edl
new file mode 100644
index 0000000..658bfb8
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_mcode.edl
@@ -0,0 +1,8385 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 2903
+y 170
+w 900
+h 1000
+font "helvetica-medium-r-18.0"
+ctlFont "helvetica-medium-r-10.0"
+btnFont "helvetica-medium-r-18.0"
+fgColor index 14
+bgColor index 3
+textColor index 14
+ctlFgColor1 index 30
+ctlFgColor2 index 32
+ctlBgColor1 index 34
+ctlBgColor2 index 35
+topShadowColor index 37
+botShadowColor index 44
+snapToGrid
+gridSize 5
+endScreenProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 655
+y 960
+w 80
+h 12
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):IT"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 655
+y 975
+w 80
+h 12
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):WT"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 780
+y 885
+w 30
+h 10
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):ER"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 780
+y 900
+w 30
+h 10
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):EF"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 455
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):BP"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 505
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):CE"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 535
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):CK"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 560
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):CW"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 585
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D1"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 610
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D2"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 635
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D3"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 660
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D4"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 685
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D5"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 785
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D12"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 760
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D11"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 735
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D10"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 785
+y 710
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D9"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 580
+y 585
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):EL"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 580
+y 685
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):HT"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 580
+y 660
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):HC"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 580
+y 635
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):RC"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 580
+y 610
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MS"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 675
+y 80
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):DN"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 675
+y 55
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):EM"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 675
+y 30
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):PY"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 360
+y 60
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MV"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 380
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):R4"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 355
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):R3"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 330
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):R2"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 305
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):R1"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 280
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):PC"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 255
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):NE"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 230
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MP"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 205
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MD"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 165
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):IN"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 135
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):IL"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 445
+y 110
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):IH"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 300
+y 105
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I11"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 300
+y 80
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I10"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 300
+y 55
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I9"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 300
+y 30
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I6"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 660
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):V"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 635
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):ST"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 610
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):SM"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 585
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):SF"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 560
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):DB"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 365
+y 485
+w 80
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):C2"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 365
+y 460
+w 80
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):C1"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 365
+y 435
+w 80
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):P"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 125
+y 695
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):BD"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 125
+y 665
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MT"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 125
+y 635
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):PM"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 595
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S13"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 570
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S12"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 545
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S11"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 520
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S10"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 495
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S9"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 470
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S8"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 445
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S7"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 420
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S5"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 395
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S4"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 375
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S3"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 355
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S2"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 335
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):S1"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 310
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):LM"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 260
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):D"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 235
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):A"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 195
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):VI"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 105
+y 170
+w 55
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):VM"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 130
+y 30
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I1"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 130
+y 55
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I2"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 130
+y 80
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I3"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 130
+y 105
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I4"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 130
+y 130
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):I5"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 0
+y 740
+w 570
+h 210
+lineColor index 14
+fillColor index 34
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x -15
+y 0
+w 620
+h 25
+lineColor index 1
+fill
+fillColor index 1
+lineWidth 0
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 0
+y 0
+w 170
+h 16
+controlPv "$(MOTOR).DESC"
+format "decimal"
+font "helvetica-bold-r-10.0"
+fgColor index 44
+bgColor index 1
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 175
+y 15
+w 175
+h 15
+controlPv "$(MOTOR).DTYP"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 44
+bgColor index 1
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 0
+y 20
+w 625
+h 20
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 0
+  1 616
+}
+yPoints {
+  0 28
+  1 28
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 35
+y 55
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Negative Limit (I2)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 170
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Max Velocity (VM)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 235
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Acceleration (A)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 200
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Initial Velocity (VI)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 260
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Deceleration (D)"
+}
+endObjectProperties
+
+# (Exit Button)
+object activeExitButtonClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 560
+y 0
+w 35
+h 25
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+label "Exit"
+font "helvetica-medium-r-10.0"
+3d
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 175
+y 0
+w 180
+h 15
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "($(MOTOR))"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 40
+y 30
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Positive Limit (I1)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 305
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Limit Mode (LM)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 585
+y 30
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Party Mode (PY)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 585
+y 55
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Echo Mode (EM)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 580
+y 80
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Device Name (DN)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 130
+y 55
+w 30
+h 20
+controlPv "$(MOTOR):I2"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 130
+y 30
+w 30
+h 20
+controlPv "$(MOTOR):I1"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 195
+w 65
+h 15
+controlPv "$(MOTOR):SET_VI"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 170
+w 65
+h 15
+controlPv "$(MOTOR):SET_VM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 195
+w 55
+h 20
+controlPv "$(MOTOR):VI"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 170
+w 55
+h 20
+controlPv "$(MOTOR):VM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 260
+w 65
+h 16
+controlPv "$(MOTOR):SET_D"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 235
+w 65
+h 16
+controlPv "$(MOTOR):SET_A"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 260
+w 55
+h 20
+controlPv "$(MOTOR):D"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 235
+w 55
+h 20
+controlPv "$(MOTOR):A"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 310
+w 65
+h 16
+controlPv "$(MOTOR):SET_LM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 310
+w 55
+h 20
+controlPv "$(MOTOR):LM"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 185
+y 150
+w 20
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Set"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 115
+y 150
+w 30
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Actual"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 710
+y 30
+w 35
+h 16
+controlPv "$(MOTOR):SET_PY"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 675
+y 30
+w 30
+h 20
+controlPv "$(MOTOR):PY"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 710
+y 55
+w 35
+h 16
+controlPv "$(MOTOR):SET_EM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 675
+y 55
+w 30
+h 20
+controlPv "$(MOTOR):EM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 710
+y 80
+w 35
+h 16
+controlPv "$(MOTOR):SET_DN"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 675
+y 80
+w 30
+h 20
+controlPv "$(MOTOR):DN"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 165
+y 35
+w 10
+h 10
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR):I1"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 165
+y 60
+w 10
+h 10
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR):I2"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 620
+y 360
+w 50
+h 15
+fgColor index 14
+onColor index 34
+offColor index 34
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):SAVE"
+pressValue "1"
+onLabel "SAVE"
+offLabel "SAVE"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 715
+y 400
+w 70
+h 40
+fgColor index 14
+onColor index 34
+offColor index 34
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):UPDATE_ALL"
+pressValue "1"
+onLabel "UPDATE ALL"
+offLabel "UPDATE ALL"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 715
+y 360
+w 70
+h 30
+fgColor index 14
+onColor index 34
+offColor index 34
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):UPDATE_STATUS"
+pressValue "1"
+onLabel "UPDATE ST"
+offLabel "UPDATE ST"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 360
+y 60
+w 30
+h 20
+controlPv "$(MOTOR):MV"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 350
+y 40
+w 65
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Moving (MV)"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 395
+y 65
+w 10
+h 10
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR):MV"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 335
+w 65
+h 16
+controlPv "$(MOTOR):SET_S1"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 335
+w 55
+h 20
+controlPv "$(MOTOR):S1"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 335
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S1)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 355
+w 65
+h 16
+controlPv "$(MOTOR):SET_S2"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 355
+w 55
+h 20
+controlPv "$(MOTOR):S2"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 355
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S2)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 375
+w 65
+h 16
+controlPv "$(MOTOR):SET_S3"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 375
+w 55
+h 20
+controlPv "$(MOTOR):S3"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 375
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S3)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 395
+w 65
+h 16
+controlPv "$(MOTOR):SET_S4"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 395
+w 55
+h 20
+controlPv "$(MOTOR):S4"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 395
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S4)"
+}
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 190
+y 40
+w 20
+h 20
+lineColor index 20
+lineAlarm
+fill
+fillColor index 20
+visPv "$(MOTOR):I1"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 190
+y 40
+w 20
+h 20
+lineColor index 20
+lineAlarm
+fill
+fillColor index 20
+visPv "$(MOTOR):I2"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 165
+y 85
+w 10
+h 10
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR):I3"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 130
+y 80
+w 30
+h 20
+controlPv "$(MOTOR):I3"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 40
+y 80
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Home Switch (I3)"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 605
+y 110
+w 185
+h 75
+
+beginGroup
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 605
+y 110
+w 185
+h 75
+lineColor index 14
+fillColor index 34
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 670
+y 150
+w 110
+h 15
+controlPv "$(MOTOR):CUSTOM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 615
+y 150
+w 50
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Custom"
+  "Command"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 655
+y 115
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "EXPERT ONLY"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 540
+y 195
+w 300
+h 160
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 550
+y 225
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Move Relative (MR)"
+}
+endObjectProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 540
+y 195
+w 300
+h 160
+lineColor index 14
+fillColor index 34
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 705
+y 225
+w 65
+h 16
+controlPv "$(MOTOR):MR"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 645
+y 225
+w 55
+h 20
+controlPv "$(MOTOR):MR"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 715
+y 200
+w 40
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Current"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 655
+y 200
+w 20
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Last"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 705
+y 250
+w 65
+h 16
+controlPv "$(MOTOR):MA"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 645
+y 250
+w 55
+h 20
+controlPv "$(MOTOR):MA"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 545
+y 250
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Move Absolute (MA)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 705
+y 275
+w 65
+h 16
+controlPv "$(MOTOR):SL"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 645
+y 275
+w 55
+h 20
+controlPv "$(MOTOR):SL"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 565
+y 275
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Move Slew (SL)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 705
+y 300
+w 65
+h 16
+controlPv "$(MOTOR):HI"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 645
+y 300
+w 55
+h 20
+controlPv "$(MOTOR):HI"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 545
+y 300
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Home to Index (HI)"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 780
+y 320
+w 45
+h 25
+fgColor index 14
+onColor index 23
+offColor index 23
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):STOP"
+pressValue "1"
+onLabel "STOP"
+offLabel "STOP"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 705
+y 325
+w 65
+h 16
+controlPv "$(MOTOR):HM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 645
+y 325
+w 55
+h 20
+controlPv "$(MOTOR):HM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 565
+y 325
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Home to home"
+  "switch (HM)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 550
+y 195
+w 45
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Motion"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Circle)
+object activeCircleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 165
+y 110
+w 10
+h 10
+lineColor index 35
+lineAlarm
+fill
+fillColor index 35
+visPv "$(MOTOR):I4"
+visMin "1"
+visMax "2"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 130
+y 105
+w 30
+h 20
+controlPv "$(MOTOR):I4"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 55
+y 105
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I4)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 765
+w 35
+h 15
+controlPv "$(MOTOR):SET_CM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 765
+w 30
+h 20
+controlPv "$(MOTOR):CM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 5
+y 765
+w 115
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Clock mode enable (CM)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 795
+w 35
+h 15
+controlPv "$(MOTOR):SET_CR"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 795
+w 30
+h 20
+controlPv "$(MOTOR):CR"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 40
+y 795
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Clock ratio (CR)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 25
+y 750
+w 125
+h 10
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Not Currently Initialized"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 820
+w 35
+h 15
+controlPv "$(MOTOR):SET_DE"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 820
+w 30
+h 20
+controlPv "$(MOTOR):DE"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 35
+y 820
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Drive enable (DE)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 850
+w 35
+h 15
+controlPv "$(MOTOR):SET_DG"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 850
+w 30
+h 20
+controlPv "$(MOTOR):DG"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 30
+y 850
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Disable global (DG)"
+  "response"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 875
+w 35
+h 15
+controlPv "$(MOTOR):SET_ES"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 875
+w 30
+h 20
+controlPv "$(MOTOR):ES"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 60
+y 875
+w 60
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Escape (ES)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 155
+y 895
+w 35
+h 15
+controlPv "$(MOTOR):SET_FC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 900
+w 30
+h 20
+controlPv "$(MOTOR):FC"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 35
+y 900
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Filter capture (FC)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 925
+w 35
+h 15
+controlPv "$(MOTOR):SET_FM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 925
+w 30
+h 20
+controlPv "$(MOTOR):FM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 35
+y 925
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Filter motion (FM)"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 675
+y 455
+w 180
+h 350
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 455
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Break Point (BP)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 455
+w 35
+h 16
+controlPv "$(MOTOR):SET_BP"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 455
+w 30
+h 20
+controlPv "$(MOTOR):BP"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 690
+y 480
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Program Exe (BY)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 480
+w 30
+h 20
+controlPv "$(MOTOR):BY"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 505
+w 35
+h 16
+controlPv "$(MOTOR):SET_CE"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 505
+w 30
+h 20
+controlPv "$(MOTOR):CE"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 680
+y 505
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Software Reset (CE)"
+  "Enable"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 535
+w 35
+h 16
+controlPv "$(MOTOR):SET_CK"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 535
+w 30
+h 20
+controlPv "$(MOTOR):CK"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 675
+y 535
+w 105
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Checksum enable (CK)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 560
+w 35
+h 16
+controlPv "$(MOTOR):SET_CW"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 560
+w 30
+h 20
+controlPv "$(MOTOR):CW"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 560
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Clock width (CW)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 585
+w 35
+h 16
+controlPv "$(MOTOR):SET_D1"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 585
+w 30
+h 20
+controlPv "$(MOTOR):D1"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 585
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D1)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 610
+w 35
+h 16
+controlPv "$(MOTOR):SET_D2"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 610
+w 30
+h 20
+controlPv "$(MOTOR):D2"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 610
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D2)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 635
+w 35
+h 16
+controlPv "$(MOTOR):SET_D3"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 635
+w 30
+h 20
+controlPv "$(MOTOR):D3"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 635
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D3)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 660
+w 35
+h 16
+controlPv "$(MOTOR):SET_D4"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 660
+w 30
+h 20
+controlPv "$(MOTOR):D4"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 660
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D4)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 685
+w 35
+h 16
+controlPv "$(MOTOR):SET_D5"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 685
+w 30
+h 20
+controlPv "$(MOTOR):D5"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 685
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Analog Input (D5)"
+  "Filter"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 710
+w 35
+h 16
+controlPv "$(MOTOR):SET_D9"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 710
+w 30
+h 20
+controlPv "$(MOTOR):D9"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 695
+y 710
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D9)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 735
+w 35
+h 16
+controlPv "$(MOTOR):SET_D10"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 735
+w 30
+h 20
+controlPv "$(MOTOR):D10"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 690
+y 735
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D10)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 760
+w 35
+h 16
+controlPv "$(MOTOR):SET_D11"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 760
+w 30
+h 20
+controlPv "$(MOTOR):D11"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 690
+y 760
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D11)"
+  "Debounce"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 820
+y 785
+w 35
+h 16
+controlPv "$(MOTOR):SET_D12"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 785
+y 785
+w 30
+h 20
+controlPv "$(MOTOR):D12"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 690
+y 785
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input Switch (D12)"
+  "Debounce"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 130
+y 130
+w 30
+h 20
+controlPv "$(MOTOR):I5"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 55
+y 130
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I5)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 55
+w 30
+h 20
+controlPv "$(MOTOR):I9"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 225
+y 55
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I9)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 80
+w 30
+h 20
+controlPv "$(MOTOR):I10"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 220
+y 80
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I10)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 105
+w 30
+h 20
+controlPv "$(MOTOR):I11"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 220
+y 105
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I11)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 30
+w 30
+h 20
+controlPv "$(MOTOR):I6"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 225
+y 30
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "IO Switch (I6)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 765
+w 30
+h 20
+controlPv "$(MOTOR):IF"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 210
+y 765
+w 85
+h 25
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Input variable (IF)"
+  "pending"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 795
+w 35
+h 15
+controlPv "$(MOTOR):SET_JE"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 795
+w 30
+h 20
+controlPv "$(MOTOR):JE"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 220
+y 795
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Jog enable (JE)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 820
+w 35
+h 15
+controlPv "$(MOTOR):SET_LK"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 820
+w 30
+h 20
+controlPv "$(MOTOR):LK"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 220
+y 820
+w 75
+h 25
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Lock user (LK)"
+  "program"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 850
+w 35
+h 15
+controlPv "$(MOTOR):SET_QD"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 850
+w 30
+h 20
+controlPv "$(MOTOR):QD"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 230
+y 850
+w 65
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Queued (QD)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 420
+w 65
+h 16
+controlPv "$(MOTOR):SET_S5"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 420
+w 55
+h 20
+controlPv "$(MOTOR):S5"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 420
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S5)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 445
+w 65
+h 16
+controlPv "$(MOTOR):SET_S7"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 445
+w 55
+h 20
+controlPv "$(MOTOR):S7"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 445
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S7)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 470
+w 65
+h 16
+controlPv "$(MOTOR):SET_S8"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 470
+w 55
+h 20
+controlPv "$(MOTOR):S8"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 470
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S8)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 495
+w 65
+h 16
+controlPv "$(MOTOR):SET_S9"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 495
+w 55
+h 20
+controlPv "$(MOTOR):S9"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 20
+y 495
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S9)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 520
+w 65
+h 16
+controlPv "$(MOTOR):SET_S10"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 520
+w 55
+h 20
+controlPv "$(MOTOR):S10"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 520
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S10)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 545
+w 65
+h 16
+controlPv "$(MOTOR):SET_S11"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 545
+w 55
+h 20
+controlPv "$(MOTOR):S11"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 545
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S11)"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 450
+y 585
+w 200
+h 120
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 615
+y 585
+w 35
+h 15
+controlPv "$(MOTOR):SET_EL"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 475
+y 590
+w 100
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Encoder Lines (EL)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 615
+y 615
+w 35
+h 15
+controlPv "$(MOTOR):SET_MS"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 490
+y 610
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Microsteps (MS)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 580
+y 610
+w 30
+h 20
+controlPv "$(MOTOR):MS"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 580
+y 585
+w 30
+h 20
+controlPv "$(MOTOR):EL"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 450
+y 635
+w 200
+h 45
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 470
+y 635
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Run Current %: (RC)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 450
+y 660
+w 120
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Holding Current %: (HC)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 615
+y 635
+w 35
+h 16
+controlPv "$(MOTOR):SET_RC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 615
+y 660
+w 35
+h 16
+controlPv "$(MOTOR):SET_HC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 580
+y 635
+w 30
+h 20
+controlPv "$(MOTOR):RC"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 580
+y 660
+w 30
+h 20
+controlPv "$(MOTOR):HC"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 615
+y 685
+w 35
+h 16
+controlPv "$(MOTOR):SET_HT"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 580
+y 685
+w 30
+h 20
+controlPv "$(MOTOR):HT"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 480
+y 685
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Motor Hold"
+  "Current Time (HT)"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 570
+w 65
+h 16
+controlPv "$(MOTOR):SET_S12"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 570
+w 55
+h 20
+controlPv "$(MOTOR):S12"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 570
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S12)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 165
+y 595
+w 65
+h 16
+controlPv "$(MOTOR):SET_S13"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 105
+y 595
+w 55
+h 20
+controlPv "$(MOTOR):S13"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 15
+y 595
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Setup I/O (S13)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 665
+w 35
+h 16
+controlPv "$(MOTOR):SET_MT"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 665
+w 30
+h 20
+controlPv "$(MOTOR):MT"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 25
+y 665
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Motor Settling (MT)"
+  "Time"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 45
+y 690
+w 150
+h 25
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 695
+w 35
+h 16
+controlPv "$(MOTOR):SET_BD"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 695
+w 30
+h 20
+controlPv "$(MOTOR):BD"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 45
+y 690
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Baud Rate (BD)"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 160
+y 635
+w 35
+h 16
+controlPv "$(MOTOR):SET_PM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 125
+y 635
+w 30
+h 20
+controlPv "$(MOTOR):PM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 25
+y 630
+w 90
+h 25
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Position"
+  "Maintanenace (PM)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 875
+w 35
+h 16
+controlPv "$(MOTOR):SET_TC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 875
+w 30
+h 20
+controlPv "$(MOTOR):TC"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 215
+y 875
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip capture (TC)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 900
+w 35
+h 16
+controlPv "$(MOTOR):SET_TE"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 900
+w 30
+h 20
+controlPv "$(MOTOR):TE"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 220
+y 900
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip enable (TE)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 335
+y 925
+w 35
+h 16
+controlPv "$(MOTOR):SET_TI"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 300
+y 925
+w 30
+h 20
+controlPv "$(MOTOR):TI"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 215
+y 925
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip on input (TI)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 510
+y 765
+w 35
+h 16
+controlPv "$(MOTOR):SET_TP"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 475
+y 765
+w 30
+h 20
+controlPv "$(MOTOR):TP"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 375
+y 765
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip on position (TP)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 510
+y 790
+w 35
+h 16
+controlPv "$(MOTOR):SET_TR"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 475
+y 790
+w 30
+h 20
+controlPv "$(MOTOR):TR"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 375
+y 790
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip on relative (TR)"
+  "position"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 510
+y 815
+w 35
+h 16
+controlPv "$(MOTOR):SET_TT"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 475
+y 815
+w 30
+h 20
+controlPv "$(MOTOR):TT"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 375
+y 815
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Trip on position (TT)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 510
+y 840
+w 35
+h 16
+controlPv "$(MOTOR):SET_VC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 475
+y 840
+w 30
+h 20
+controlPv "$(MOTOR):VC"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 405
+y 840
+w 65
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Velocity (VC)"
+  "changing"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 330
+y 110
+w 145
+h 290
+
+beginGroup
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 135
+w 30
+h 20
+controlPv "$(MOTOR):IL"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 365
+y 135
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "I1-4 group (IL)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 110
+w 30
+h 20
+controlPv "$(MOTOR):IH"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 360
+y 110
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "I9-12 group (IH)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 165
+w 30
+h 20
+controlPv "$(MOTOR):IN"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 330
+y 165
+w 110
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "I1-4 & 9-12 group (IN)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 205
+w 30
+h 20
+controlPv "$(MOTOR):MD"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 350
+y 205
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Motion mode (MD)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 230
+w 30
+h 20
+controlPv "$(MOTOR):MP"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 365
+y 230
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Moving to (MP)"
+  "position"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 255
+w 30
+h 20
+controlPv "$(MOTOR):NE"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 345
+y 255
+w 95
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Numeric enable (NE)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 280
+w 30
+h 20
+controlPv "$(MOTOR):PC"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 335
+y 280
+w 105
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Position capture (PC)"
+  "at trip"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 380
+w 30
+h 20
+controlPv "$(MOTOR):R4"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 355
+y 380
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "User register (R4)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 355
+w 30
+h 20
+controlPv "$(MOTOR):R3"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 355
+y 355
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "User register (R3)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 330
+w 30
+h 20
+controlPv "$(MOTOR):R2"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 355
+y 330
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "User register (R2)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 445
+y 305
+w 30
+h 20
+controlPv "$(MOTOR):R1"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 355
+y 305
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "User register (R1)"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 295
+y 435
+w 250
+h 75
+
+beginGroup
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 290
+y 460
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Counter 1 (C1)"
+  "Motor Steps"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 290
+y 490
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Counter 2 (C2)"
+  "Encoder Counts"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 305
+y 435
+w 65
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Position (P)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 455
+y 435
+w 85
+h 16
+controlPv "$(MOTOR):SET_P"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 365
+y 435
+w 80
+h 20
+controlPv "$(MOTOR):P"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 455
+y 460
+w 85
+h 16
+controlPv "$(MOTOR):SET_C1"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 365
+y 460
+w 80
+h 20
+controlPv "$(MOTOR):C1"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 455
+y 485
+w 85
+h 16
+controlPv "$(MOTOR):SET_C2"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 365
+y 485
+w 80
+h 20
+controlPv "$(MOTOR):C2"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 290
+y 560
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Deadband (DB)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 285
+y 585
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Stall Factor (SF)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 405
+y 585
+w 35
+h 16
+controlPv "$(MOTOR):SET_SF"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 585
+w 30
+h 20
+controlPv "$(MOTOR):SF"
+fgColor index 19
+fgAlarm
+bgColor index 5
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 405
+y 560
+w 35
+h 16
+controlPv "$(MOTOR):SET_DB"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 560
+w 30
+h 20
+controlPv "$(MOTOR):DB"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 405
+y 610
+w 35
+h 15
+controlPv "$(MOTOR):SET_SM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 610
+w 30
+h 20
+controlPv "$(MOTOR):SM"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 290
+y 610
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Stall Mode (SM)"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 305
+y 420
+w 50
+h 15
+fgColor index 14
+onColor index 34
+offColor index 34
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):ZERO_POS"
+pressValue "1"
+onLabel "SET ZERO"
+offLabel "SET ZERO"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 635
+w 30
+h 20
+controlPv "$(MOTOR):ST"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 300
+y 635
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Stall flag (ST)"
+}
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 660
+w 30
+h 20
+controlPv "$(MOTOR):V"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 285
+y 660
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Read velocty (V)"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 525
+y 70
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MV"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 475
+y 75
+w 30
+h 20
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):MV"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 675
+y 865
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "MCode version (VR)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 780
+y 870
+w 60
+h 10
+controlPv "$(MOTOR):VR"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 780
+y 885
+w 30
+h 10
+controlPv "$(MOTOR):ER"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 675
+y 880
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Last Error code (ER)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 780
+y 850
+w 75
+h 10
+controlPv "$(MOTOR):SN"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 675
+y 845
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Serial Number (SN)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 780
+y 830
+w 75
+h 12
+controlPv "$(MOTOR):PN"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 675
+y 825
+w 100
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Part Number (PN)"
+}
+endObjectProperties
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 815
+y 885
+w 50
+h 15
+fgColor index 14
+onColor index 34
+offColor index 34
+topShadowColor index 37
+botShadowColor index 44
+controlPv "$(MOTOR):CLEAR_ER"
+pressValue "1"
+onLabel "CLR"
+offLabel "CLR"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 780
+y 900
+w 30
+h 12
+controlPv "$(MOTOR):EF"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 705
+y 895
+w 70
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Error flag (EF)"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 280
+y 525
+w 203
+h 25
+
+beginGroup
+
+# (Message Button)
+object activeMessageButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 370
+y 525
+w 30
+h 25
+fgColor index 14
+onColor index 3
+offColor index 3
+topShadowColor index 3
+botShadowColor index 3
+controlPv "$(MOTOR):EE"
+pressValue "1"
+3d
+useEnumNumeric
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 280
+y 525
+w 85
+h 25
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Encoder Enabled:"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 445
+y 525
+w 38
+h 21
+font "helvetica-medium-r-18.0"
+fgColor index 15
+bgColor index 34
+useDisplayBg
+visPv "$(MOTOR):EE"
+visMin "1"
+visMax "2"
+value {
+  "YES"
+}
+autoSize
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 450
+y 525
+w 30
+h 21
+font "helvetica-bold-r-18.0"
+fgColor index 41
+bgColor index 34
+useDisplayBg
+visPv "$(MOTOR):EE"
+visMin "0"
+visMax "1"
+value {
+  "NO"
+}
+autoSize
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 405
+y 525
+w 35
+h 20
+controlPv "$(MOTOR):SET_EE"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Update)
+object TextupdateClass
+beginObjectProperties
+major 10
+minor 0
+release 0
+x 370
+y 525
+w 30
+h 25
+controlPv "$(MOTOR):EE"
+fgColor index 16
+fgAlarm
+bgColor index 2
+fill
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 465
+y 955
+w 425
+h 0
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 466
+  1 888
+}
+yPoints {
+  0 955
+  1 955
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 865
+y 980
+w 25
+h 10
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "V1.0"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 655
+y 960
+w 80
+h 12
+controlPv "$(MOTOR):IT"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 560
+y 955
+w 85
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Internal Temp (IT)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 655
+y 975
+w 80
+h 12
+controlPv "$(MOTOR):WT"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 560
+y 970
+w 90
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Warning Temp (WT)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 480
+y 955
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "MDrive34 only"
+}
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 770
+y 965
+w 65
+h 25
+fgColor index 14
+bgColor index 3
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-10.0"
+buttonLabel "GRAPHICS"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "motor_graphics.edl"
+}
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_setup.edl b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_setup.edl
new file mode 100644
index 0000000..8311437
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/_APPNAME_Screens/motor_setup.edl
@@ -0,0 +1,2156 @@
+4 0 1
+beginScreenProperties
+major 4
+minor 0
+release 1
+x 3024
+y 144
+w 430
+h 611
+font "helvetica-medium-r-18.0"
+ctlFont "helvetica-medium-r-10.0"
+btnFont "helvetica-medium-r-18.0"
+fgColor index 14
+bgColor index 3
+textColor index 14
+ctlFgColor1 index 30
+ctlFgColor2 index 32
+ctlBgColor1 index 34
+ctlBgColor2 index 35
+topShadowColor index 37
+botShadowColor index 44
+snapToGrid
+gridSize 5
+endScreenProperties
+
+# (Rectangle)
+object activeRectangleClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x -20
+y 0
+w 470
+h 25
+lineColor index 1
+fill
+fillColor index 1
+lineWidth 0
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 190
+y 90
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Backlash"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 110
+y 90
+w 80
+h 20
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Normal"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 2
+y 90
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Dynamics"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 285
+y 90
+w 110
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Calibration"
+}
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 0
+y 85
+w 465
+h 5
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 1
+  1 463
+}
+yPoints {
+  0 87
+  1 87
+}
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 275
+y 84
+w 3
+h 219
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 276
+  1 276
+}
+yPoints {
+  0 85
+  1 301
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 0
+y 0
+w 170
+h 16
+controlPv "$(MOTOR).DESC"
+format "decimal"
+font "helvetica-bold-r-10.0"
+fgColor index 44
+bgColor index 1
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 175
+y 15
+w 175
+h 15
+controlPv "$(MOTOR).DTYP"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 44
+bgColor index 1
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x -10
+y 25
+w 465
+h 5
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 -14
+  1 448
+}
+yPoints {
+  0 27
+  1 27
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 219
+y 31
+w 100
+h 10
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "DIAL"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 115
+y 31
+w 100
+h 10
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "USER"
+}
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 77
+y 39
+w 242
+h 22
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 115
+y 39
+w 100
+h 22
+controlPv "$(MOTOR).HLM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 219
+y 39
+w 100
+h 22
+controlPv "$(MOTOR).DHLM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 77
+y 42
+w 35
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "High"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 2
+y 32
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Limits"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 115
+y 61
+w 100
+h 22
+controlPv "$(MOTOR).LLM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 219
+y 61
+w 100
+h 22
+controlPv "$(MOTOR).DLLM"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 77
+y 64
+w 35
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Low"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 1
+y 117
+w 140
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Max. Speed (Rev/s)"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 151
+y 114
+w 80
+h 25
+controlPv "$(MOTOR).SMAX"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 191
+y 242
+w 80
+h 25
+controlPv "$(MOTOR).FRAC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 191
+y 217
+w 80
+h 25
+controlPv "$(MOTOR).BDST"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 191
+y 192
+w 80
+h 25
+controlPv "$(MOTOR).BACC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 191
+y 142
+w 80
+h 25
+controlPv "$(MOTOR).SBAK"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 151
+y 167
+w 80
+h 25
+controlPv "$(MOTOR).SBAS"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 111
+y 192
+w 80
+h 25
+controlPv "$(MOTOR).ACCL"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 111
+y 142
+w 80
+h 25
+controlPv "$(MOTOR).S"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 195
+w 100
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Accel time (s)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 245
+w 150
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Move fraction"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 145
+w 100
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Speed (Rev/s)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 170
+w 125
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Base speed (Rev/s)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 286
+y 145
+w 25
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Cal"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 286
+y 182
+w 25
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Off"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 286
+y 220
+w 25
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Dir"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 316
+y 166
+w 80
+h 25
+controlPv "$(MOTOR).OFF"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 220
+w 190
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Backlash dist.(        )"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 121
+y 221
+w 65
+h 14
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 305
+w 200
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Resolution, Readback"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 241
+y 353
+w 50
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/Rev."
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 241
+y 428
+w 50
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/Unit"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 241
+y 403
+w 50
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/Step"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 241
+y 378
+w 50
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/Rev."
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 171
+y 378
+w 70
+h 18
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "right"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 171
+y 428
+w 70
+h 18
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "right"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 171
+y 403
+w 70
+h 18
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "right"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 171
+y 353
+w 70
+h 18
+font "helvetica-medium-r-10.0"
+fontAlign "right"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Steps"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 375
+w 80
+h 25
+controlPv "$(MOTOR).UREV"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 3
+y 400
+w 168
+h 25
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 400
+w 80
+h 25
+controlPv "$(MOTOR).ERES"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 403
+w 60
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Encoder:"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Group)
+object activeGroupClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 3
+y 425
+w 168
+h 25
+
+beginGroup
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 425
+w 80
+h 25
+controlPv "$(MOTOR).RRES"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 428
+w 70
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Readback:"
+}
+endObjectProperties
+
+endGroup
+
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 350
+w 80
+h 25
+controlPv "$(MOTOR).SREV"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 325
+w 80
+h 25
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 403
+w 30
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Use:"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 296
+y 428
+w 30
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Use:"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 365
+w 60
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Motor:"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 328
+w 60
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Units:"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 543
+w 95
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Precision"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 525
+w 95
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "VME card#"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 505
+w 95
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Code version"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 216
+y 485
+w 75
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Misc."
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 316
+y 505
+w 80
+h 18
+controlPv "$(MOTOR).VERS"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 316
+y 525
+w 80
+h 18
+controlPv "$(MOTOR).CARD"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 316
+y 540
+w 80
+h 25
+controlPv "$(MOTOR).PREC"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 121
+y 530
+w 50
+h 25
+controlPv "$(MOTOR).RTRY"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 505
+w 80
+h 25
+controlPv "$(MOTOR).RDBD"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 508
+w 70
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Deadband"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 533
+w 120
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Max. retries"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 485
+w 127
+h 20
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "Retry"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 91
+y 450
+w 200
+h 25
+controlPv "$(MOTOR).RDBL"
+format "string"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 40
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 453
+w 70
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "RBV inLink:"
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 301
+y 374
+w 80
+h 25
+controlPv "$(MOTOR).DLY"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 301
+y 345
+w 80
+h 14
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Readback"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 301
+y 360
+w 80
+h 14
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "delay (s)"
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 368
+y 573
+w 25
+h 10
+font "helvetica-medium-r-10.0"
+fgColor index 0
+bgColor index 0
+useDisplayBg
+value {
+  "V1.8"
+}
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 0
+y 300
+w 440
+h 5
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 1
+  1 438
+}
+yPoints {
+  0 302
+  1 302
+}
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 3
+y 271
+w 91
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "Home Speed ("
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 191
+y 267
+w 80
+h 25
+controlPv "$(MOTOR).HVEL"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 51
+editable
+autoHeight
+motifWidget
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 190
+y 485
+w 5
+h 115
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 192
+  1 192
+}
+yPoints {
+  0 487
+  1 598
+}
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 0
+y 485
+w 445
+h 0
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 1
+  1 443
+}
+yPoints {
+  0 485
+  1 485
+}
+endObjectProperties
+
+# (Text Control)
+object activeXTextDspClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 97
+y 271
+w 65
+h 14
+controlPv "$(MOTOR).EGU"
+format "decimal"
+font "helvetica-medium-r-10.0"
+fontAlign "center"
+fgColor index 44
+bgColor index 3
+autoHeight
+nullColor index 32
+smartRefresh
+fastUpdate
+useHexPrefix
+newPos
+objType "controls"
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 165
+y 271
+w 20
+h 18
+font "helvetica-medium-r-10.0"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "/s)"
+}
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 316
+y 217
+w 80
+h 21
+fgColor index 14
+bgColor index 51
+selectColor index 51
+inconsistentColor index 14
+topShadowColor index 0
+botShadowColor index 14
+controlPv "$(MOTOR).DIR"
+font "helvetica-medium-r-10.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Menu Button)
+object activeMenuButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 316
+y 191
+w 80
+h 18
+fgColor index 14
+bgColor index 51
+inconsistentColor index 12
+topShadowColor index 2
+botShadowColor index 12
+controlPv "$(MOTOR).FOFF"
+indicatorPv "$(MOTOR).FOFF"
+font "helvetica-medium-r-10.0"
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 316
+y 143
+w 80
+h 21
+fgColor index 14
+bgColor index 51
+selectColor index 51
+inconsistentColor index 14
+topShadowColor index 0
+botShadowColor index 14
+controlPv "$(MOTOR).SET"
+font "helvetica-medium-r-10.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 326
+y 403
+w 70
+h 20
+fgColor index 14
+bgColor index 51
+selectColor index 51
+inconsistentColor index 14
+topShadowColor index 0
+botShadowColor index 14
+controlPv "$(MOTOR).UEIP"
+font "helvetica-medium-r-10.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Choice Button)
+object activeChoiceButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 326
+y 428
+w 70
+h 20
+fgColor index 14
+bgColor index 51
+selectColor index 51
+inconsistentColor index 14
+topShadowColor index 0
+botShadowColor index 14
+controlPv "$(MOTOR).URIP"
+font "helvetica-medium-r-10.0"
+orientation "horizontal"
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 15
+y 570
+w 40
+h 20
+fgColor index 0
+bgColor index 17
+topShadowColor index 2
+botShadowColor index 12
+font "helvetica-medium-r-10.0"
+buttonLabel "Debug"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "motorscreens/motorx_all.edl"
+}
+closeAction {
+  0 1
+}
+symbols {
+  0 "M=$(MOTOR),P=$(MOTOR).DESC"
+}
+closeDisplay {
+  0 1
+}
+endObjectProperties
+
+# (Exit Button)
+object activeExitButtonClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 390
+y 0
+w 35
+h 25
+fgColor index 14
+bgColor index 4
+topShadowColor index 1
+botShadowColor index 11
+label "Exit"
+font "helvetica-medium-r-10.0"
+3d
+endObjectProperties
+
+# (Static Text)
+object activeXTextClass
+beginObjectProperties
+major 4
+minor 1
+release 0
+x 175
+y 0
+w 180
+h 15
+font "helvetica-bold-r-10.0"
+fontAlign "center"
+fgColor index 14
+bgColor index 0
+useDisplayBg
+value {
+  "($(MOTOR))"
+}
+endObjectProperties
+
+# (Lines)
+object activeLineClass
+beginObjectProperties
+major 4
+minor 0
+release 1
+x 0
+y 595
+w 445
+h 5
+lineColor index 44
+fillColor index 44
+lineWidth 3
+numPoints 2
+xPoints {
+  0 1
+  1 444
+}
+yPoints {
+  0 596
+  1 596
+}
+endObjectProperties
+
+# (Related Display)
+object relatedDisplayClass
+beginObjectProperties
+major 4
+minor 2
+release 0
+x 70
+y 565
+w 48
+h 24
+fgColor index 14
+bgColor index 3
+topShadowColor index 1
+botShadowColor index 11
+font "helvetica-medium-r-10.0"
+buttonLabel "MCODE"
+numPvs 4
+numDsps 1
+displayFileName {
+  0 "motionScreens/motor_mcode.edl"
+}
+endObjectProperties
+
+# (Button)
+object activeButtonClass
+beginObjectProperties
+major 4
+minor 0
+release 0
+x 205
+y 560
+w 80
+h 32
+fgColor index 14
+onColor index 37
+offColor index 37
+inconsistentColor index 5
+topShadowColor index 1
+botShadowColor index 11
+controlPv "$(MOTOR):SET_ZERO"
+onLabel "Set ZERO Pos"
+offLabel "Set ZERO Pos"
+labelType "literal"
+buttonType "push"
+3d
+font "helvetica-bold-r-10.0"
+objType "controls"
+endObjectProperties
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/configure/CONFIG_SITE b/src/makeBaseApp/top/pcdsMotorApp/configure/CONFIG_SITE
new file mode 100644
index 0000000..58faa15
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/configure/CONFIG_SITE
@@ -0,0 +1,31 @@
+# CONFIG_SITE
+
+# Make any application-specific changes to the EPICS build
+# configuration variables in this file.
+#
+# Host/target specific settings can be specified in files named
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).Common
+#  CONFIG_SITE.Common.$(T_A)
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
+
+# Set this when you only want to compile this application
+# for a subset of the cross-compiled target architectures
+# that Base is built for.
+# CROSS_COMPILER_TARGET_ARCHS = RTEMS-beatnik linux-x86 linux-x86_64
+CROSS_COMPILER_TARGET_ARCHS = linux-x86
+
+# If you do NOT want to build for the host architecture,
+# clear BUILD_FOR_HOST_ARCH
+BUILD_FOR_HOST_ARCH = 
+
+# Set this when your IOC and the host use different paths
+# to access the application. This will be needed to boot
+# from a Microsoft FTP server or with some NFS mounts.
+# You must rebuild in the iocBoot directory for this to
+# take effect.
+#IOCS_APPL_TOP = <path to application top as seen by IOC>
+
+# If you don't want to install into $(TOP) then
+# define INSTALL_LOCATION here
+#INSTALL_LOCATION=<fullpathname>
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/configure/RELEASE b/src/makeBaseApp/top/pcdsMotorApp/configure/RELEASE
new file mode 100644
index 0000000..f36c8e4
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/configure/RELEASE
@@ -0,0 +1,46 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+ASYN_MODULE_VERSION          = R4.19.0-0.1.0
+AUTOSAVE_MODULE_VERSION      = R4.2.1.2-2.7.0
+CALC_MODULE_VERSION          = R2.8.0-0.5.0
+IOCADMIN_MODULE_VERSION      = R3.0.0-1.6.0
+MOTOR_MODULE_VERSION         = R7.1.3
+PCDS_MOTION_MODULE_VERSION   = R2.3.4
+SSCAN_MODULE_VERSION         = R2.6.6.0-0.6.0
+STREAMDEVICE_MODULE_VERSION  = R2.5-0.3.2
+
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+ASYN=$(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+CALC=$(EPICS_MODULES)/calc/$(CALC_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+MOTOR=$(EPICS_MODULES)/motor/$(MOTOR_MODULE_VERSION)
+PCDS_MOTION=$(EPICS_MODULES)/pcds_motion/$(PCDS_MOTION_MODULE_VERSION)
+SSCAN=$(EPICS_MODULES)/sscan/$(SSCAN_MODULE_VERSION)
+STREAMDEVICE=$(EPICS_MODULES)/streamdevice/$(STREAMDEVICE_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/src/Makefile b/src/makeBaseApp/top/pcdsMotorApp/src/Makefile
new file mode 100644
index 0000000..c06d14f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/src/Makefile
@@ -0,0 +1,77 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += calc.dbd
+_APPNAME__DBD += calcSupport.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+_APPNAME__DBD += asyn.dbd
+_APPNAME__DBD += asynRecord.dbd
+_APPNAME__DBD += stream.dbd
+_APPNAME__DBD += drvAsynSerialPort.dbd
+_APPNAME__DBD += drvAsynIPPort.dbd
+_APPNAME__DBD += motorSupport.dbd
+_APPNAME__DBD += devImsMotor.dbd
+_APPNAME__DBD += devSoftMotor.dbd
+_APPNAME__DBD += sscan.dbd
+_APPNAME__DBD += sscanSupport.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += Ims
+_APPNAME__LIBS += softMotor
+_APPNAME__LIBS += motor
+_APPNAME__LIBS += stream
+_APPNAME__LIBS += asyn
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += sscan
+_APPNAME__LIBS += calc
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#Disable Regexp for RTEMS-beatnik as pcre lib not avail
+ifneq '$(T_A)' 'RTEMS-beatnik'
+PCRE_INCLUDE=/usr/include
+ifeq '$(EPICS_HOST_ARCH)' 'linux-x86_64'
+PCRE_LIB=/usr/lib64
+else
+PCRE_LIB=/usr/lib
+endif
+endif
+
+ifdef PCRE
+LIB_LIBS += pcre
+else
+ifneq ($(words $(PCRE_LIB) $(PCRE_INCLUDE)),0)
+PROD_SYS_LIBS_DEFAULT += pcre
+PROD_SYS_LIBS_WIN32 += $(PCRE_LIB)\\pcre
+SHRLIB_DEPLIB_DIRS += $(PCRE_LIB)
+endif
+endif
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsMotorApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsMotorApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsMotorApp/srcProtocol/Makefile b/src/makeBaseApp/top/pcdsMotorApp/srcProtocol/Makefile
new file mode 100644
index 0000000..4c8280d
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorApp/srcProtocol/Makefile
@@ -0,0 +1,31 @@
+# Makefile for copying streamDevice protocol files during build.
+# Author: Jason Tiller
+
+T_A=$(EPICS_HOST_ARCH)
+TOP=../..
+include $(TOP)/configure/CONFIG
+
+######################################################################
+# Specify what files should be copied and where.
+
+# What protocol files should be copied as part of the build.
+COPY_FILES += $(PCDS_MOTION)/protocol/mcode.proto
+COPY_FILES += $(PCDS_MOTION)/protocol/newall-shg-a2.proto
+COPY_FILES += $(PCDS_MOTION)/protocol/AGI_MD900_clinometer.proto
+
+# What subdirectory should hold the protcol files.  For this example,
+# $INSTALL_LOCATION/protocol will be created.
+COPY_SUBDIR = protocol
+
+# Uncomment this if you only want to copy when *not* installing to
+# your development area.  Useful for iocBoot, where the source and
+# target directories are actually the same.
+# COPY_ONLY_IF_NON_LOCAL=1
+
+######################################################################
+# Don't change these.
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.copy
+
+######################################################################
+# Add additional RULES files, if necessary.
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/Makefile b/src/makeBaseApp/top/pcdsMotorBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsMotorBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..823e36a
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/Makefile@Common
@@ -0,0 +1,30 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC motors db file
+#
+DB += _IOC_-motors.db
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+REQ += _IOC_-positions.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-motors.substitutions b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-motors.substitutions
new file mode 100644
index 0000000..3d1ac35
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-motors.substitutions
@@ -0,0 +1,55 @@
+# P and M combine to make the instance's name.
+# P EPICS PV Prefix
+# M Motor number (please use leading 0, i.e. 01, 02, ...)
+# DTYP is the motor driver name for our motors.
+# C is controller; this links to the ASYN port
+#   ASYN gives digi port a name
+#   MDrivePlusConfig maps digi name to controller #.
+# ACCL is the time to accelerate from the base speed to full speed.
+# DIR is the direction of rotation, "Pos" or "Neg"
+
+# SREV (not shown) is the number of steps per revolution is 200 by default
+#
+# There are three pivot points to which the six motors are attached.
+#   Three provide vertical motion: M0Y, M1Y, and M2Y.
+#   M2Z provides horizontal motion in the Z direction (along beamline)
+#   M0X and M2X provide horiz motion in the X direction (perpendicular to beamline):
+#
+
+# 
+# For SREV:
+#    2048 = internal encoder (EQ)
+#     250 = external encoder, NUMERIK-JENA
+#     200 = external encoder, Renishaw
+#   51200 = no encoder
+
+# NOTE: Soft limits (DHLM & DLLM) may be better off using HLM & LLM and
+# relying on autosave to keep those than loading them into the database everytime.
+# If the motor is reversed in DIR, then the DHLM and HLM are reveresed
+# which makes it difficult to accurately set the soft limits.
+# (Dial) DHLM 140, DLLM 2 is equivalent to (User) HLM -2, LLM -140
+
+file pcds_motor_ims.template
+{
+    pattern
+    {  P,            M, C,  DESC,              EGU, DIR, SREV,  UREV,    SP,  SBAS, SMAX, ACCL,  RDBD, DLY, DHLM,  DLLM, UEvent, UEIP, DVER  }
+    { TST:XXX:MMS:, 01, 0,  "Manipulator 1 X",  mm, Neg,  200,   0.200,   2,   0.5,  1,    1.0,  0.01, 0,   200.0, -200.0,    1,  Yes,    2  }
+#   { TST:XXX:MMS:, 02, 1,  "Y Stepper 1 vert", mm, Pos,   79,   3.794,   1,   0.1,  1,    0.1,  0.01, 0,   47.0,  -47.0,     1,  Yes,    2  }
+}
+
+file motor-status.template
+{
+    pattern
+    { MOT,             FW_MEANS,    REV_MEANS    }
+    { "TST:XXX:MMS:01", "X+",       "X-"        }
+#   { "TST:XXX:MMS:02", "Y+",       "Y-"        }
+}
+
+file mcode.template
+{
+    pattern
+    { cont,               M,    addr   }
+    { "TST:XXX:MMS:$(M)", "01", 1      }
+#   { "TST:XXX:MMS:$(M)", "02", 1      }
+}
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-positions.sub-req b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-positions.sub-req
new file mode 100644
index 0000000..9a37d52
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_-positions.sub-req
@@ -0,0 +1,8 @@
+# Generate motor postions PV list for each motor
+# Note: Motor positions are not always restored automatically
+file autosave_motor_positions.template
+{
+	{ MOTOR = "TST:XXX:MMS:01" }
+#	{ MOTOR = "TST:XXX:MMS:02" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..6d0a435
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,16 @@
+# _APPNAME_ IOC instance archive file
+
+# Generate archive PV list for IOC
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+
+# Generate archive PV list for motors
+file archive_motor-mc.template
+{
+	{ MOTOR = "TST:XXX:MMS:01" }
+#	{ MOTOR = "TST:XXX:MMS:02" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..cb0c000
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,18 @@
+# _APPNAME_ IOC instance autosave file
+
+# Generate autosave PV list for IOC specific PV's
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+# Generate motor settings PV list for each motor
+# Note: use ims_motor_settings.template for IMS motors
+# Note: use autosave_motor_settings.template for other motors
+#file autosave_motor_settings.template
+file ims_motor_settings.template
+{
+	{ MOTOR = "TST:XXX:MMS:01" }
+#	{ MOTOR = "TST:XXX:MMS:02" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..31935f5
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@Common
@@ -0,0 +1,80 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: Remove this comment after checking these macros!
+##
+## The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER",  "your_name (_USER_)" )
+epicsEnvSet( "LOCATION",  "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+epicsEnvSet( "STREAM_PROTOCOL_PATH", "protocol" )
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/$(IOC)-motors.db",		"" )
+
+# MDrive driver Setup parameters:
+#	MDrivePlusSetup( maxCtrlrs, rate )
+#	maxCtrlrs	= Maximum number of motor controllers
+#	rate		= Motor task polling rate (min=1Hz,max=60Hz)
+MDrivePlusSetup( 10, 5 )
+
+# Configure each motor
+drvAsynIPPortConfigure( "M01", "serial-tst-r219.pcdsn:2106 TCP", 0, 0 0 )
+
+# Configurure one MDrive driver instance for each motor
+MDrivePlusConfig( 0, "M01" )
+
+# Optional: Enable tracing
+# asynSetTraceIOMask( "M01",	0,		2 )
+# asynSetTraceMask(   "M01",	0,		9 )
+
+# Send trace output to motor specific log files
+asynSetTraceFile(   "M01",	0, "/reg/d/iocData/$(IOC)/M01.log" )
+
+# Optional: Enable MDrive debug output
+# Requires that ImsSrc motor be built with DEBUG
+# drvMDrivePlusdebug = 4
+
+# Setup autosave
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 30, "" )
+create_monitor_set( "$(IOC)-positions.req", 5, "" )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..fdd0be2
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,93 @@
+## Example RTEMS startup script
+
+## ToDo: Remove this comment after checking these macros!
+##
+## The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER",  "your_name (_USER_)" )
+epicsEnvSet( "LOCATION",  "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+epicsEnvSet( "STREAM_PROTOCOL_PATH", "protocol" )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/$(IOC)-motors.db",		"" )
+
+# MDrive driver Setup parameters:
+#	MDrivePlusSetup( maxCtrlrs, rate )
+#	maxCtrlrs	= Maximum number of controllers
+#	rate		= Motor task polling rate (min=1Hz,max=60Hz)
+MDrivePlusSetup( 10, 5 )
+
+# Configure each motor
+drvAsynIPPortConfigure( "M01", "serial-tst-r219.pcdsn:2106 TCP", 0, 0 0 )
+
+# Configurure one MDrive driver instance for each motor
+MDrivePlusConfig( 0, "M01" )
+
+# Optional: Enable tracing
+# asynSetTraceIOMask( "M01",	0,		2 )
+# asynSetTraceMask(   "M01",	0,		9 )
+
+# Send trace output to motor specific log files
+asynSetTraceFile(   "M01",	0, "/reg/d/iocData/$(IOC)/M01.log" )
+
+# Optional: Enable MDrive debug output
+# Requires that ImsSrc motor be built with DEBUG
+# drvMDrivePlusdebug = 4
+
+# Setup autosave
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 30, "" )
+create_monitor_set( "$(IOC)-positions.req", 5, "" )
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..8e1e577
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change tst as needed for your hutch
+source /reg/d/iocCommon/All/tst_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsMotorBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/Makefile b/src/makeBaseApp/top/pcdsSerialApp/Db/Makefile
new file mode 100644
index 0000000..2975c15
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/Makefile
@@ -0,0 +1,36 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+DB += exampleDevice.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+ARCHIVE += exampleDevice.tpl-arch
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+REQ += exampleDevice.tpl-req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..80af2bd
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,34 @@
+#
+# _APPNAME_ substitutions file
+#
+# Generate a list of PV's which will be expanded
+# once using the $(IOC) macro for each IOC instance.
+#
+# Typically, IOC will be expanded in
+#	iocBoot/<ioc_name>/Makefile
+# so no need to define it here.
+#
+
+# Generate iocAdmin archive PV's 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+file archive_iocAdmin.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC=$(IOC)
+	}
+}
+
+# Generate Save/Restore archive PV's
+#	Macros:
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_SR.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC=$(IOC)
+	}
+}
+
+# TODO: Add your custom template expansions here
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..e9a5054
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,20 @@
+#
+# _APPNAME_ autosave substitutions file
+#
+# Generate a list of PV's which will be expanded
+# once using the $(IOC) macro for each IOC instance.
+#
+# Typically, IOC will be expanded in
+#	iocBoot/<ioc_name>/Makefile
+# so no need to define it here.
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		IOC=$(IOC)
+	}
+}
+
+# TODO: Add your custom template expansions here
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.db b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.db
new file mode 100644
index 0000000..91a91d4
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.db
@@ -0,0 +1,386 @@
+#
+# Example serial device database template file
+#
+# This file was originally done for a
+# Scientech Vector S310 Calorimeter
+#
+# Required Macros:
+#   P
+#       EPICS prefix.
+#       Every PV for this device starts with this prefix    
+# Optional Macros:
+#   FAST_UPDATE
+#       Rate at which to query often changing values such as
+#       current measurement, status, statistics, etc.
+#       Defaults to .5 seconds
+#   SLOW_UPDATE
+#       Rate at which to query slow changing values such as
+#       measurement mode and other settings.
+#       Defaults to 5 seconds
+#
+
+# User can enable or disable all serial communications
+# with the device using this PV.
+# Turning it off keeps error messages from spewing to the console.
+record( bo, "$(P):COMM:ENABLE" )
+{
+    field( DESC, "User Enable/Disable of comms" )
+    field( ZNAM, "Comm Disabled!" )
+    field( ONAM, "Comm Enabled" )
+    field( FLNK, "$(P):ID PP" )
+    field( PINI, "YES" )
+}
+
+# This record looks at $(P):COMM:ENABLE and
+# one serial query PV that is used to see if
+# the device is available and talking to us.
+record( calcout, "$(P):COMM:NOT_READY" )
+{
+    field( INPA, "$(P):COMM:ENABLE CPP" )
+    field( INPB, "$(P):ID CPP MS" )
+    field( CALC, "!A" )
+    field( OOPT, "When Non-zero" )
+    field( OUT,  "$(P):COMM:SHUTDOWN PP" )
+    field( IVOA, "Set output to IVOV" )
+    field( IVOV, "1" )
+}
+
+# This fanout writes 0 to one or more PV's
+# which can be used to set status or other
+# PV's to indicate communication is down.
+record( dfanout, "$(P):COMM:SHUTDOWN" )
+{
+    field( DOL,  "0" )
+    field( OMSL, "closed_loop" )
+#    field( OUTA, "$(P):STATUS PP" )
+}
+
+# Read the device ID string
+record( stringin, "$(P):ID" )
+{
+	field( DTYP, "stream" )
+	field( PINI, "YES" )
+	field( INP, "@example.proto get_id $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( ai, "$(P):RawValue" )
+{
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_val $(P)" )
+	field( EGU, "W" )
+	field( PREC, 5 )
+	field( SCAN, "$(FAST_UPDATE=.5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+    field( FLNK, "$(P):GetValue PP" )
+}
+
+
+record( dfanout, "$(P):SetDarkValue" )
+{
+	field( DOL,  "$(P):RawValue NPP" )
+	field( OUTA, "$(P):DarkValue PP" )
+}
+
+
+record( ai, "$(P):DarkValue" )
+{
+	field( EGU, "W" )
+	field( PREC, 5 )
+	field( INP,  0 )
+	field( PINI, "YES" )
+    field( FLNK, "$(P):GetValue PP" )
+	field( SCAN, "$(FAST_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+
+record( calc, "$(P):GetValue" )
+{
+	field( CALC, "(A-B)" )
+	field( EGU, "W" )
+	field( PREC, 5 )
+	field( INPA, "$(P):RawValue NPP MS" )	# current raw wattmeter reading
+	field( INPB, "$(P):DarkValue NPP MS" )	# dark (background) wm reading
+}
+
+record( mbbi,	"$(P):GetDetMode" )
+{
+	field( DTYP, "stream"	)
+	field( INP,	 "@example.proto get_mode $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( ZRST, "Volts" )
+	field( ONST, "Energy" )
+	field( TWST, "Avg Energy" )
+	field( THST, "Power" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+    field( FLNK, "$(P):Units PP" )
+}
+
+# Valid Detector Modes
+#	Pyroelectric Detectors:
+#		Volts, Energy, Avg Energy, Power
+#	Calorimeter Detectors:
+#		Energy, Power
+#	Ultra Detectors:
+#		Power
+record( mbbo,	"$(P):SetDetMode" )
+{
+	field( DTYP, "stream"	)
+	field( OUT,	"@example.proto set_mode $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( ZRST, "Volts" )
+	field( ONST, "Energy" )
+	field( TWST, "Avg Energy" )
+	field( THST, "Power" )
+    field( FLNK, "$(P):GetDetMode PP" )
+}
+
+record( mbbi,	"$(P):Units" )
+{
+    field( INP,  "$(P):GetDetMode NPP MS" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( ZRST, "V" )
+	field( ONST, "J" )
+	field( TWST, "J" )
+	field( THST, "W" )
+}
+
+record( mbbi,	"$(P):GetDetType" )
+{
+	field( DTYP, "stream"	)
+	field( INP,	 "@example.proto get_det $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( ZRST, "PYRO" )
+	field( ONST, "CAL" )
+	field( TWST, "PHR" )
+	field( THST, "ULTRA" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( mbbo,	"$(P):SetDetType" )
+{
+	field( DTYP, "stream"	)
+	field( OUT,	 "@example.proto set_det $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( ZRST, "PYRO" )
+	field( ONST, "CAL" )
+	field( TWST, "PHR" )
+	field( THST, "ULTRA" )
+    field( FLNK, "$(P):GetDetType PP" )
+}
+
+record( mbbi, "$(P):GetRange" )
+{
+	field( DESC, "Range AUTO or 1-5" )
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_range $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( FRVL, "4" )
+	field( FVVL, "5" )
+	field( ZRST, "Auto" )
+	field( ONST, "1" )
+	field( TWST, "2" )
+	field( THST, "3" )
+	field( FRST, "4" )
+	field( FVST, "5" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( mbbo, "$(P):SetRange" )
+{
+	field( DESC, "Range AUTO or 1-5" )
+	field( DTYP, "stream" )
+	field( OUT, "@example.proto set_range $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( TWVL, "2" )
+	field( THVL, "3" )
+	field( FRVL, "4" )
+	field( FVVL, "5" )
+	field( ZRST, "Auto" )
+	field( ONST, "1" )
+	field( TWST, "2" )
+	field( THST, "3" )
+	field( FRST, "4" )
+	field( FVST, "5" )
+    field( FLNK, "$(P):GetRange PP" )
+}
+
+record( longin, "$(P):GetPulseCount" )
+{
+	field( DESC, "Pulse count" )
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_pulse $(P)" )
+	field( SCAN, "$(FAST_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longin, "$(P):GetAvgEnergyCount" )
+{
+	field( DESC, "# of pulses in avg mode" )
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_count $(P)" )
+	field( SCAN, "$(FAST_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longout, "$(P):SetAvgEnergyCount" )
+{
+	field( DESC, "# of pulses in avg mode" )
+	field( DOL,  "10" )
+	field( DTYP, "stream" )
+	field( OUT,  "@example.proto set_count $(P)" )
+    field( FLNK, "$(P):GetAvgEnergyCount PP" )
+	field( PINI, "YES" )
+}
+
+record( longin, "$(P):GetCalib" )
+{
+	field( DESC, "Calibration constant" )
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_calib $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longout, "$(P):SetCalib" )
+{
+	field( DESC, "Calibration constant" )
+	field( DTYP, "stream" )
+	field( OUT, "@example.proto set_calib $(P)" )
+    field( FLNK, "$(P):GetCalib PP" )
+}
+
+record( longin, "$(P):GetAtten" )
+{
+	field( DESC, "Attenuation factor" )
+	field( DTYP, "stream" )
+	field( INP, "@example.proto get_atten $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longout, "$(P):SetAtten" )
+{
+	field( DESC, "Attenuation factor" )
+	field( DTYP, "stream" )
+	field( OUT, "@example.proto set_atten $(P)" )
+    field( FLNK, "$(P):GetAtten PP" )
+}
+
+record( mbbi,	"$(P):GetPyroSpeed" )
+{
+	field( DTYP, "stream"	)
+	field( INP,	 "@example.proto get_pyro_spd $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( ZRST, "HF" )
+	field( ONST, "BL" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( mbbo,	"$(P):SetPyroSpeed" )
+{
+	field( DTYP, "stream"	)
+	field( OUT,	 "@example.proto set_pyro_spd $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( ZRST, "HF" )
+	field( ONST, "BL" )
+    field( FLNK, "$(P):GetPyroSpeed PP" )
+}
+
+record( mbbi,	"$(P):GetPyroSpeed" )
+{
+	field( DTYP, "stream"	)
+	field( INP,	 "@example.proto get_pyro_spd $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( ZRST, "HF" )
+	field( ONST, "BL" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( mbbo,	"$(P):SetPyroSpeed" )
+{
+	field( DTYP, "stream"	)
+	field( OUT,	 "@example.proto set_pyro_spd $(P)" )
+	field( ZRVL, "0" )
+	field( ONVL, "1" )
+	field( ZRST, "HF" )
+	field( ONST, "BL" )
+    field( FLNK, "$(P):GetPyroSpeed PP" )
+}
+
+record( longin, "$(P):GetCalSpeed" )
+{
+	field( DESC, "Cal Watts Disp Resp Spd" )
+	field( DTYP, "stream" )
+	field( INP,  "@example.proto get_cal_spd $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longout, "$(P):SetCalSpeed" )
+{
+	field( DESC, "Cal Watts Disp Resp Spd" )
+	field( DTYP, "stream" )
+	field( OUT,  "@example.proto set_cal_spd $(P)" )
+    field( FLNK, "$(P):GetCalSpeed PP" )
+}
+
+record( longin, "$(P):GetCalDelay" )
+{
+	field( DESC, "Calorimeter Delay" )
+	field( DTYP, "stream" )
+	field( INP,  "@example.proto get_cal_delay $(P)" )
+	field( SCAN, "$(SLOW_UPDATE=5 second)" )
+    field( SDIS, "$(P):COMM:NOT_READY" )
+    field( DISS, "INVALID" )
+}
+
+record( longout, "$(P):SetCalDelay" )
+{
+	field( DESC, "Calorimeter Delay" )
+	field( DTYP, "stream" )
+	field( OUT,  "@example.proto set_cal_delay $(P)" )
+    field( FLNK, "$(P):GetCalDelay PP" )
+}
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-arch b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-arch
new file mode 100644
index 0000000..d79ecca
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-arch
@@ -0,0 +1,18 @@
+# Archive list for Scientech Vector S310 Power/Energy Meter
+$(P):ID				10	monitor
+$(P):RAWAVAL		1	
+$(P):DARKAVAL		1
+$(P):SET_DARKAVAL	1	monitor
+$(P):RAWDARKDIFF	1
+$(P):GetDetMode		1
+$(P):SetDetMode		1	monitor
+$(P):GetDetType		1
+$(P):SetDetType		1	monitor
+$(P):GetRange		1
+$(P):SetRange		1	monitor
+$(P):GetCount		1
+$(P):SetCount		1	monitor
+$(P):GetCalib		1
+$(P):SetCalib		1	monitor
+$(P):GetAtten		1
+$(P):SetAtten		1	monitor
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-req b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-req
new file mode 100644
index 0000000..108f9c4
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/exampleDevice.tpl-req
@@ -0,0 +1,8 @@
+# Autosave list for Scientech Vector S310 Power/Energy Meter
+$(P):SET_DARKAVAL
+$(P):SetDetMode	
+$(P):SetDetType
+$(P):SetRange
+$(P):SetCount
+$(P):SetCalib
+$(P):SetAtten
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsSerialApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsSerialApp/Makefile b/src/makeBaseApp/top/pcdsSerialApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsSerialApp/configure/CONFIG_SITE b/src/makeBaseApp/top/pcdsSerialApp/configure/CONFIG_SITE
new file mode 100644
index 0000000..34f853c
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/configure/CONFIG_SITE
@@ -0,0 +1,37 @@
+# CONFIG_SITE
+
+# Make any application-specific changes to the EPICS build
+# configuration variables in this file.
+#
+# Host/target specific settings can be specified in files named
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).Common
+#  CONFIG_SITE.Common.$(T_A)
+#  CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
+
+# Set this when you only want to compile this application
+# for a subset of the cross-compiled target architectures
+# that Base is built for.
+# CROSS_COMPILER_TARGET_ARCHS = RTEMS-beatnik linux-x86 linux-x86_64
+
+# If you do NOT want to build for the host architecture,
+# clear BUILD_FOR_HOST_ARCH
+# BUILD_FOR_HOST_ARCH = 
+
+ifeq '$(EPICS_HOST_ARCH)' 'linux-x86_64'
+PCRE_LIB	= /usr/lib64
+endif
+ifeq '$(EPICS_HOST_ARCH)' 'linux-x86'
+PCRE_LIB	= /usr/lib
+endif
+
+# Set this when your IOC and the host use different paths
+# to access the application. This will be needed to boot
+# from a Microsoft FTP server or with some NFS mounts.
+# You must rebuild in the iocBoot directory for this to
+# take effect.
+#IOCS_APPL_TOP = <path to application top as seen by IOC>
+
+# If you don't want to install into $(TOP) then
+# define INSTALL_LOCATION here
+#INSTALL_LOCATION=<fullpathname>
+
diff --git a/src/makeBaseApp/top/pcdsSerialApp/configure/RELEASE b/src/makeBaseApp/top/pcdsSerialApp/configure/RELEASE
new file mode 100644
index 0000000..44dd3bf
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/configure/RELEASE
@@ -0,0 +1,36 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+ASYN_MODULE_VERSION=R4.19.0-0.1.0
+STREAMDEVICE_MODULE_VERSION=R2.5-0.3.1
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+ASYN=$(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
+STREAMDEVICE=$(EPICS_MODULES)/streamdevice/$(STREAMDEVICE_MODULE_VERSION)
diff --git a/src/makeBaseApp/top/pcdsSerialApp/src/Makefile b/src/makeBaseApp/top/pcdsSerialApp/src/Makefile
new file mode 100644
index 0000000..4adf1ac
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/src/Makefile
@@ -0,0 +1,50 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+_APPNAME__DBD += asyn.dbd
+_APPNAME__DBD += asynRecord.dbd
+_APPNAME__DBD += drvAsynSerialPort.dbd
+_APPNAME__DBD += drvAsynIPPort.dbd
+_APPNAME__DBD += stream.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += asyn
+_APPNAME__LIBS += stream
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+ifneq '$(T_A)' 'RTEMS-beatnik'
+PROD_SYS_LIBS_DEFAULT += pcre
+SHRLIB_DEPLIB_DIRS += $(PCRE_LIB)
+endif
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsSerialApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsSerialApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/Makefile b/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/Makefile
new file mode 100644
index 0000000..296735a
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/Makefile
@@ -0,0 +1,32 @@
+# Makefile for copying streamDevice protocol files during build.
+# Author: Jason Tiller
+
+T_A=$(EPICS_HOST_ARCH)
+TOP=../..
+include $(TOP)/configure/CONFIG
+
+######################################################################
+# Specify what files should be copied and where.
+
+# What protocol files should be copied as part of the build.
+# Enable this line to install example.proto to $(TOP)/protocol
+# However, this is not necessary as long as your st.cmd sets
+# the env var STREAM_PROTOCOL_PATH to $(TOP)/_APPNAME_App/srcProtocol
+#COPY_FILES += example.proto
+
+# What subdirectory should hold the protcol files.  For this example,
+# $INSTALL_LOCATION/protocol will be created.
+COPY_SUBDIR = protocol
+
+# Uncomment this if you only want to copy when *not* installing to
+# your development area.  Useful for iocBoot, where the source and
+# target directories are actually the same.
+# COPY_ONLY_IF_NON_LOCAL=1
+
+######################################################################
+# Don't change these.
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.copy
+
+######################################################################
+# Add additional RULES files, if necessary.
diff --git a/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/example.proto b/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/example.proto
new file mode 100644
index 0000000..385249b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialApp/srcProtocol/example.proto
@@ -0,0 +1,59 @@
+# This is an example protocol file
+# This protocol file was based on the Scientech Vector S310 Calorimeter/Power Meter
+# No need to keep this file unless you want to use it for examples.
+InTerminator  = CR;
+OutTerminator = CR;
+ReplyTimeout  =  2000;
+ReadTimeout   =  100;
+WriteTimeout  =  100;
+ExtraInput    = Ignore;
+
+#read_wm_debug    { out "0";				in "%(\$1:STRVAL.VAL)s";}
+#read_wm           { out "0";				in "%(\$1:STRVAL.VAL)s";}
+
+get_id	{	out "*IDN?";		in "%39c"	}
+
+get_det {	out "SENS?";		in "%{PYRO|CAL|PHR|ULTRA}" }
+
+set_det {	out "SENS_%{PYRO|CAL|PHR|ULTRA}";		}
+
+get_mode {	out "MODE?";		in "%{VOLTS|ENERGY|AVGE|AVGP}" }
+
+set_mode {	out "MODE_%{VOLTS|ENERGY|AVGE|AVGP}"; }
+
+get_val	{	out "SND?";			in "%f" }
+
+get_range { out "RANGE?";		in "%{AUTO|1|2|3|4|5}"	}
+
+set_range {	out "RANGE_%{AUTO|1|2|3|4|5}";				}
+
+# Number of pulses this run
+get_pulse { out "PULSES?";		in "%u" }
+
+# Number of pulses used to compute average in AVGE mode
+get_count { out "COUNT?";		in "%u" }
+
+set_count { out "COUNT_%u";				}
+
+get_calib { out "CALIB?";		in "%u" }
+
+set_calib { out "CALIB_%u";				}
+
+get_atten { out "ATTEN?";		in "%u" }
+
+set_atten { out "ATTEN_%u";				}
+
+zero	{	out "ZERO";					}
+
+get_pyro_spd	{	out	"PSPEED?";	in "%{HF|BL}"	}
+
+set_pyro_spd	{	out "PSPEED %{HF|BL}";		}
+
+get_cal_spd		{	out	"CSPEED?";	in "%u" }
+
+set_cal_spd		{	out	"CSPEED_%u";		}
+
+get_cal_delay	{	out	"CDELAY?";	in "%u"	}
+
+set_cal_delay	{	out "CDELAY_%u";		}
+
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/Makefile b/src/makeBaseApp/top/pcdsSerialBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsSerialBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..eb36b38
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/Makefile@Common
@@ -0,0 +1,24 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsSerialBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..2df6e90
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,15 @@
+# _APPNAME_ IOC instance archive file
+
+# Generate archive PV list for IOC
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+
+# Generate archive PV list for each serial device
+file exampleDevice.tpl-arch
+{
+	{ P = "TST:EXP:XXX:01" }
+#	{ P = "TST:EXP:XXX:02" }
+}
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..022e059
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,16 @@
+# _APPNAME_ IOC instance autosave file
+
+# Generate autosave PV list for IOC specific PV's
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+
+# Generate autosave PV list for each serial device
+file exampleDevice.tpl-req
+{
+	{ P = "TST:EXP:XXX:01" }
+#	{ P = "TST:EXP:XXX:02" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@Common
new file mode 100755
index 0000000..9353210
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@Common
@@ -0,0 +1,74 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: Remove this comment after checking these macros!
+##
+## The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER",  "your_name (_USER_)" )
+epicsEnvSet( "LOCATION",  "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+epicsEnvSet( "STREAM_PROTOCOL_PATH", "$(TOP)/_APPNAME_App/srcProtocol" )
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Set this to enable LOTS of stream module diagnostics
+#var streamDebug 1
+
+# Configure each device
+epicsEnvSet( "DEV1", "TST:EXP:XXX:01" )
+drvAsynIPPortConfigure( "$(DEV1)", "serial-tst-01.pcdsn:2106 TCP", 0, 0, 0 )
+# or
+# drvAsynSerialPortConfigure( "$(DEV1)", "/dev/ttyS0", 0, 0, 0 )
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/exampleDevice.db",		"P=$(DEV1)" )
+
+
+# Optional: Enable tracing
+# asynSetTraceIOMask( "$(DEV1)",	0,		2 )
+# asynSetTraceMask(   "$(DEV1)",	0,		9 )
+
+# Send trace output to motor specific log files
+asynSetTraceFile(   "$(DEV1)",	0, "/reg/d/iocData/$(IOC)/logs/$(DEV1).log" )
+
+# Setup autosave
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+
+# Just restore the settings
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@RTEMS
new file mode 100755
index 0000000..605b639
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,90 @@
+## Example RTEMS startup script
+
+## ToDo: Remove this comment after checking these macros!
+##
+## The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER",  "your_name (_USER_)" )
+epicsEnvSet( "LOCATION",  "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+epicsEnvSet( "STREAM_PROTOCOL_PATH", "protocol" )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+# Set this to enable LOTS of stream module diagnostics
+#streamDebug = 1
+
+# Configure each device
+epicsEnvSet( "DEV1", "TST:EXP:XXX:01" )
+drvAsynIPPortConfigure( "$(DEV1)", "serial-tst-01.pcdsn:2106 TCP", 0, 0, 0 )
+# or
+# drvAsynSerialPortConfigure( "$(DEV1)", "/dev/ttyS0", 0, 0, 0 )
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/exampleDevice.db",		"P=$(DEV1)" )
+
+# Optional: Enable tracing
+# asynSetTraceIOMask( "$(DEV1)",	0,		2 )
+# asynSetTraceMask(   "$(DEV1)",	0,		9 )
+
+# Send trace output to motor specific log files
+asynSetTraceFile(   "$(DEV1)",	0, "/reg/d/iocData/$(IOC)/logs/$(DEV1).log" )
+
+# Optional: Enable MDrive debug output
+# Requires that ImsSrc motor be built with DEBUG
+# drvMDrivePlusdebug = 4
+
+# Setup autosave
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+
+# Just restore the settings
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..5589466
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change xxx as needed for your hutch
+source /reg/d/iocCommon/All/xxx_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/xxx/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsSerialBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/Db/Makefile b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/Makefile
new file mode 100644
index 0000000..ec86d6f
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/Makefile
@@ -0,0 +1,33 @@
+TOP=../..
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+
+#----------------------------------------------------
+#  Optimization of db files using dbst (DEFAULT: NO)
+#DB_OPT = YES
+
+#----------------------------------------------------
+# Create and install (or just install)
+# databases, templates, substitutions like this
+DB += iocAdmin.db
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Archive files, templates, substitutions like this
+#
+ARCHIVE += _APPNAME_-ioc.archive
+
+#----------------------------------------------------
+# Create and install (or just install)
+# Autosave request files, templates, substitutions like this
+#
+REQ += _APPNAME_-ioc.req
+
+# Nothing to build for autosave, just install from $AUTOSAVE/db
+DB_INSTALLS += $(AUTOSAVE)/db/save_restoreStatus.db
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-arch b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-arch
new file mode 100644
index 0000000..86ba3e2
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-arch
@@ -0,0 +1,29 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin archive request 
+#	Macros:
+#		IOC		- PV prefix for all iocAdmin PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_iocAdmin.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
+
+# Generate Save/Restore status archive requests
+#	Macros:
+#		IOC		- PV prefix for all IOC Save/Restore PV's
+# Typically, IOC will be expanded in the iocBoot/<ioc_name>/Makefile
+file archive_SR.tpl-arch
+{
+	{
+		# Hack till msi supports empty substitutions
+		IOC		=	$(IOC),
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-req b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-req
new file mode 100644
index 0000000..7f74c88
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/_APPNAME_-ioc.sub-req
@@ -0,0 +1,13 @@
+#
+# _APPNAME_ substitutions file
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.tpl-req
+{
+	{
+		# Hack till msi supports empty substitutions
+		_FOOBAR_=_FOOBAR_
+	}
+}
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/Db/iocAdmin.substitutions b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/iocAdmin.substitutions
new file mode 100644
index 0000000..4ebe401
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/Db/iocAdmin.substitutions
@@ -0,0 +1,31 @@
+#==============================================================================
+#
+# Abs:  IOC Administration Records
+#
+# Name: iocAdmin.substitutions
+#
+#==============================================================================
+#
+file access.db
+{
+	pattern
+	{ DEV    , MANAGE      }
+	{ $(IOC) , IOCMANAGERS }
+}
+
+file ioc.db
+{
+	pattern
+	{ IOCNAME }
+	{ $(IOC)  }
+}
+
+file iocCluster.db
+{
+#                   Pool   Size
+	pattern
+	{ IOCNAME ,  P   ,  S   , TYPE   }
+# System Pool
+	{ $(IOC)  ,  1   ,  0   , System }
+	{ $(IOC)  ,  1   ,  1   , System }
+}
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/Makefile b/src/makeBaseApp/top/pcdsTemplateIocApp/Makefile
new file mode 100644
index 0000000..10e0126
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/Makefile
@@ -0,0 +1,8 @@
+TOP = ..
+include $(TOP)/configure/CONFIG
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Src*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *db*))
+DIRS := $(DIRS) $(filter-out $(DIRS), $(wildcard *Db*))
+include $(TOP)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/configure/RELEASE b/src/makeBaseApp/top/pcdsTemplateIocApp/configure/RELEASE
new file mode 100644
index 0000000..0e05655
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/configure/RELEASE
@@ -0,0 +1,33 @@
+# RELEASE
+# Defines location of external products
+include $(TOP)/RELEASE_SITE
+
+# ===============================================================
+# Define the location and version of EPICS base
+# ===============================================================
+BASE_MODULE_VERSION=R3.14.12-0.4.0
+EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)
+
+# ===============================================================
+# Define the version of modules needed by
+# IOC apps or other Support apps
+# ===============================================================
+AUTOSAVE_MODULE_VERSION=R4.2.1.2-2.7.0
+IOCADMIN_MODULE_VERSION=R3.0.0-1.6.0
+
+# ============================================================
+# External Support module path definitions
+#
+# If any of these macros expand to a path which
+# contains an "include" directory, that directory will be
+# included in the compiler include path.
+#
+# If any of these macros expand to a path which
+# contains a "lib/<arch>" directory, that directory will be
+# included in the compiler link path for that architecture.
+#
+# If your build fails, look for these paths in your build output
+# ============================================================
+AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
+IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/src/Makefile b/src/makeBaseApp/top/pcdsTemplateIocApp/src/Makefile
new file mode 100644
index 0000000..a06ea00
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/src/Makefile
@@ -0,0 +1,38 @@
+TOP=../..
+
+include $(TOP)/configure/CONFIG
+#----------------------------------------
+#  ADD MACRO DEFINITIONS AFTER THIS LINE
+#=============================
+
+#=============================
+# Build an ioc application
+# Use PROD_IOC_RTEMS for RTEMS only
+# Use PROD_IOC_Linux for Linux only
+PROD_IOC = _APPNAME_
+
+# _APPNAME_.dbd will be created and installed
+DBD += _APPNAME_.dbd
+
+# _APPNAME_.dbd will be made up from these files:
+_APPNAME__DBD += base.dbd
+_APPNAME__DBD += iocAdmin.dbd
+_APPNAME__DBD += autosaveSupport.dbd
+
+# <name>_registerRecordDeviceDriver.cpp will be created from <name>.dbd
+_APPNAME__SRCS += _APPNAME__registerRecordDeviceDriver.cpp
+_APPNAME__SRCS_DEFAULT += _APPNAME_Main.cpp
+
+# Add locally compiled object code
+#_APPNAME__SRCS += dbSubExample.c
+
+_APPNAME__LIBS += devIocStats
+_APPNAME__LIBS += autosave
+_APPNAME__LIBS += $(EPICS_BASE_IOC_LIBS)
+
+#===========================
+
+include $(TOP)/configure/RULES
+#----------------------------------------
+#  ADD RULES AFTER THIS LINE
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocApp/src/_APPNAME_Main.cpp b/src/makeBaseApp/top/pcdsTemplateIocApp/src/_APPNAME_Main.cpp
new file mode 100644
index 0000000..ae0ecb6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocApp/src/_APPNAME_Main.cpp
@@ -0,0 +1,23 @@
+/* _APPNAME_Main.cpp */
+/* Author:  Marty Kraimer Date:    17MAR2000 */
+
+#include <stddef.h>
+#include <stdlib.h>
+#include <stddef.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "epicsExit.h"
+#include "epicsThread.h"
+#include "iocsh.h"
+
+int main(int argc,char *argv[])
+{
+    if(argc>=2) {    
+        iocsh(argv[1]);
+        epicsThreadSleep(.2);
+    }
+    iocsh(NULL);
+    epicsExit(0);
+    return(0);
+}
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/Makefile b/src/makeBaseApp/top/pcdsTemplateIocBoot/Makefile
new file mode 100644
index 0000000..0b68dbc
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/Makefile
@@ -0,0 +1,13 @@
+TOP = ..
+
+# Allow a local IOC_APPL_TOP file to redefine TOP
+# for our templated IOC builds
+-include $(TOP)/IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+DIRS += $(wildcard *ioc*)
+include $(EPICS_BASE)/configure/RULES_DIRS
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/Makefile@Common b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/Makefile@Common
new file mode 100644
index 0000000..eb36b38
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/Makefile@Common
@@ -0,0 +1,24 @@
+# IOC instance Makefile
+# Generates envPaths and expands the instance
+# specific substitution files.
+
+TOP = ../..
+include $(TOP)/configure/CONFIG
+ARCH = _ARCH_
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += _IOC_.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += _IOC_.req
+
+include $(TOP)/configure/RULES
+include $(TOP)/configure/RULES.ioc-targets
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@Common b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@Common
new file mode 100644
index 0000000..f6dc23b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@Common
@@ -0,0 +1,9 @@
+To start the ioc from this directory execute the command
+    ../../bin/_ARCH_/<appname> st.cmd
+
+Alternatively make the st.cmd file directly executable with
+    chmod +x st.cmd
+and check the executable name on the first line of the st.cmd file 
+
+You may need to change the name of the .dbd file given in the
+st.cmd's dbLoadDatabase() command before starting the ioc.
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@RTEMS b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@RTEMS
new file mode 100644
index 0000000..b040e84
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@RTEMS
@@ -0,0 +1,6 @@
+Copy the startup script (st.cmd) and top level db and dbd directories and
+contents to
+<<TFTP_ROOT>>/epics/<<IOC hostname>>/
+
+Then load the executable into the IOC (floppy disk, network boot, debugger,
+etc.) and start it.
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@vxWorks6 b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/README@vxWorks6
new file mode 100644
index 0000000..e69de29
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-arch b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-arch
new file mode 100644
index 0000000..17c36f7
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-arch
@@ -0,0 +1,10 @@
+# IOC archive file
+## Replace _IOCPVROOT_ with the PV prefix used for
+## iocAdmin PV's on this IOC
+
+# Generate IOC archive request 
+file _APPNAME_-ioc.archive
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-req b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-req
new file mode 100644
index 0000000..b4a50ff
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/_IOC_.sub-req
@@ -0,0 +1,9 @@
+# _APPNAME_ IOC instance autosave file
+
+# Generate autosave PV list for IOC specific PV's
+file _APPNAME_-ioc.req
+{
+	{ IOC = "_IOCPVROOT_" }
+}
+
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@Common b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@Common
new file mode 100644
index 0000000..e82d0ab
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@Common
@@ -0,0 +1,50 @@
+#!../../bin/_ARCH_/_APPNAME_
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ USER _ with your userid
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+cd( "../.." )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)
+
+# Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
+# All IOCs should dump some common info after initial startup.
+< /reg/d/iocCommon/All/post_linux.cmd
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@RTEMS b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@RTEMS
new file mode 100644
index 0000000..3704bd6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/st.cmd@RTEMS
@@ -0,0 +1,65 @@
+## Example RTEMS startup script
+
+## ToDo: The following substitutions can be done via makeBaseApp.pl
+## If they weren't, do them before releasing your IOC
+##
+## Replace _ APPNAME _ with the name of the application
+##
+## Replace _ IOC _ with the network name of the IOC
+##
+## Replace _ IOCPVROOT _ with the PV prefix used for
+## iocAdmin PV's on this IOC
+## ex. AMO:R15:IOC:23
+##
+## Then you can delete this comment 
+##
+
+# Load your application
+ld( "../../bin/_ARCH_/_APPNAME_.obj" )
+
+# Start the gdb stub so it's ready when needed
+rtems_gdb_start()
+
+< envPaths
+epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
+epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
+epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
+chdir( "../.." )
+
+## Register all support components
+dbLoadDatabase("dbd/_APPNAME_.dbd")
+_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 
+
+## Configure drivers as needed
+# EVR driver
+# ErConfigure( 0, 0, 0, 0, 1 )
+
+## Load record instances
+dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
+dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
+
+# Setup autosave
+set_savefile_path( "/thisIocData/autosave" )
+set_requestfile_path( "autosave" )
+save_restoreSet_status_prefix( "_IOCPVROOT_:" )
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+set_pass0_restoreFile( "$(IOC).sav" )
+set_pass1_restoreFile( "$(IOC).sav" )
+
+# Remove prior archive file
+rm( "/thisIocData/archive/$(IOC).archive" )
+
+# Update archive file
+cp( "archive/$(IOC).archive", "/thisIocData/archive/$(IOC).archive" )
+
+# Convenience aliases
+reboot=rtemsReboot
+mon=rtemsMonitor
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOC).req", 5, "" )
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@Common b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@Common
new file mode 100755
index 0000000..5589466
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@Common
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Set the IOC name
+export IOC="_IOC_"
+
+# Setup the IOC user environment
+# TODO: Change xxx as needed for your hutch
+source /reg/d/iocCommon/All/xxx_env.sh
+
+# For release
+#cd $EPICS_SITE_TOP/ioc/xxx/_APPNAME_/R0.1.0/iocBoot/_IOC_
+
+# Copy the archive file to iocData
+$RUNUSER "cp ../../archive/$IOC.archive $IOC_DATA/$IOC/archive"
+
+# Launch the IOC
+$RUNUSER "$PROCSERV --logfile $IOC_DATA/$IOC/iocInfo/ioc.log --name $IOC 30001 ../../bin/_ARCH_/_APPNAME_ st.cmd"
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@RTEMS b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@RTEMS
new file mode 100755
index 0000000..fa7d46e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/ioc/startup.cmd@RTEMS
@@ -0,0 +1,15 @@
+# Run the setup script
+# TODO: Change tst as needed for your hutch
+< /home/All/pre_rtems_tst.cmd
+
+# For development
+chdir( "/home3/my_user_id/devel/ioc/tst/_APPNAME_/current/iocBoot/_IOC_" )
+
+# For release
+#chdir( "/iocs/tst/_APPNAME_/R0.1.0/iocBoot/_IOC_" )
+
+# Run the start script
+< st.cmd
+
+< /home/All/post_rtems.cmd
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@RTEMS b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@RTEMS
new file mode 100644
index 0000000..0ba95a6
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@RTEMS
@@ -0,0 +1,26 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks6 b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks6
new file mode 100644
index 0000000..7cb8232
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/nfsCommands@vxWorks6
@@ -0,0 +1,29 @@
+#Instructions for creating and using a real nfsCommands file
+# 
+# in order to use nfs do the following:
+# 1) Create hostAdd and nfsMount commands for each nfs server
+# 2) In each st.cmd file add the following two commands BEFORE any load commands
+#    ../nfs.cmd
+#    cd "<iocname>
+# 
+# The hostAdd command has the form:
+# hostAdd("<host>","xxx.xxx.xxx.xxx")
+#
+# The nfsMount command has the form:
+# nfsMount("<host>", "/xxx/xxx/xxx", "/xxx")
+# 
+# You can also mount subdirectories as follows:
+# nfsMountAll("<host>")
+# 
+# For example assume
+# 
+# host is mercury with inet address 155.77.2.56
+# You want to mount the directory (which is a file system of mercury)
+# /home/mercury5/iocinfo
+#    as
+# /iocinfo
+# 
+# The commands would be
+# 
+# hostAdd("mercury","155.77.2.56")
+# nfsMount("mercury","/home/mercury5/iocinfo","/iocinfo")
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/Makefile b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/Makefile
new file mode 100644
index 0000000..77bf07a
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/Makefile
@@ -0,0 +1,34 @@
+# Makefile for ioc instance
+TOP = ../..
+
+-include ./IOC_APPL_TOP
+ifneq (,$(IOC_APPL_TOP))
+TOP = $(IOC_APPL_TOP)
+endif
+
+include $(TOP)/configure/CONFIG
+ifndef ARCH
+ARCH = linux-x86_64
+endif
+
+INSTALL_LOCATION = ../..
+INSTALL_LOCATION_BIN = $(TOP)/bin
+
+TARGETS = envPaths
+
+# Make sure these archive files are fully expanded
+USR_ARCHIVEFLAGS += -V
+
+#----------------------------------------------------
+# Create and install IOC archive file
+#
+ARCHIVE += $$IOCNAME.archive
+
+#----------------------------------------------------
+# Create and install IOC autosave file
+#
+REQ += $$IOCNAME.req
+
+include $(TOP)/configure/RULES.ioc
+-include $(TOP)/configure/RULES.archive
+-include $(TOP)/configure/RULES.autosave
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc-sample.cfg b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc-sample.cfg
new file mode 100644
index 0000000..c5818a9
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc-sample.cfg
@@ -0,0 +1,15 @@
+# Sample CONFIG file for templated ioc
+
+#
+RELEASE=/reg/g/pcds/package/epics/3.14/ioc/common/unixCam/R3.0.14
+ENGINEER="Your name (your_email)"
+LOCATION="TST Lab"
+IOC_PV=TST:IOC:CVV:01
+
+EVR(NAME=TST:R24:EVR:20,TYPE=PMC)
+
+CAMERA(NAME=TST:EXP:CVV:01,TYPE=UP900F,BOARD=0,CHAN=0)
+CAMERA(NAME=TST:EXP:CVV:02,TYPE=UP900F,BOARD=0,CHAN=1)
+CAMERA(NAME=TST:EXP:CVV:03,TYPE=UP900F,BOARD=1,CHAN=0)
+CAMERA(NAME=TST:EXP:CVV:04,TYPE=UP900F,BOARD=1,CHAN=1)
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-arch b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-arch
new file mode 100644
index 0000000..c3ead7e
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-arch
@@ -0,0 +1,21 @@
+#
+# unixCam IOC archive substitutions file
+#
+
+# Generate generic portion of unixCam archive request 
+file archive_unixCam.archive
+{
+	{
+		IOC		=	$$IOC_PV,
+		EVR		=	$$EVRNAME0
+	}
+}
+
+# Generate one set per camera
+file archive_edt_unix.archive
+{
+$$LOOP(CAMERA)
+	{	CAM     =    $$NAME }
+$$ENDLOOP(CAMERA)
+}
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-req b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-req
new file mode 100644
index 0000000..43e5127
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/ioc.sub-req
@@ -0,0 +1,63 @@
+#
+# unixCam IOC substitutions file
+#
+
+# Generate iocAdmin autosave request 
+file autosave_iocAdmin.req
+{
+	{
+		IOC		=	$$IOC_PV
+	}
+}
+
+# Generate EVR autosave request 
+file autosave_evr.req
+{
+	{
+		IOC		=	$$IOC_PV,
+		EVR		=	$$EVRNAME0
+	}
+}
+
+# Generate one set per camera
+file autosave_edt_unix.req
+{
+$$LOOP(CAMERA)
+	{	CAM     =    $$NAME }
+$$ENDLOOP(CAMERA)
+}
+
+
+file cameras.req
+{
+$$LOOP(CAMERA)
+	{	CAM     =    $$NAME }
+$$ENDLOOP(CAMERA)
+}
+
+$$LOOP(CAMERA)
+$$IF(TRIG)
+file camdelay.req
+{
+	{	CAM     =    $$NAME }
+}
+$$ENDIF(TRIG)
+$$IF(DROPLET)
+file autosave_droplet.req
+{
+	{
+		CAM		=	$$NAME,
+		N		=	$$DROPLET,
+	}
+}
+$$ENDIF(DROPLET)
+$$IF(DOPRJ)
+file autosave_doprj.req
+{
+	{
+		CAM		=	$$NAME,
+	}
+}
+$$ENDIF(DOPRJ)
+$$ENDLOOP(CAMERA)
+
diff --git a/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/st.cmd b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/st.cmd
new file mode 100755
index 0000000..c36f77b
--- /dev/null
+++ b/src/makeBaseApp/top/pcdsTemplateIocBoot/templates/st.cmd
@@ -0,0 +1,142 @@
+#!$$IOCTOP/bin/linux-x86_64/unixCam$$PDV_VERSION
+
+epicsEnvSet("IOCNAME", "$$IOCNAME")
+epicsEnvSet("ENGINEER", "$$ENGINEER" )
+epicsEnvSet("LOCATION", "$$LOCATION" )
+epicsEnvSet("IOCSH_PS1", "$(IOCNAME)> " )
+epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", "$$IF(MAX_ARRAY,$$MAX_ARRAY,8000000)" )
+epicsEnvSet("STREAM_PROTOCOL_PATH", "db" )
+epicsEnvSet("IOC_PV", "$$IOC_PV")
+epicsEnvSet("IOCTOP", "$$IOCTOP")
+
+< $(IOCTOP)/iocBoot/ioc/cameraDefs
+< $(IOCTOP)/iocBoot/ioc/envPaths
+< envPaths
+epicsEnvSet("TOP", "$$TOP")
+cd( "$(IOCTOP)" )
+
+# Run common startup commands for linux soft IOC's
+< /reg/d/iocCommon/All/pre_linux.cmd
+
+# Load EPICS database definition
+dbLoadDatabase("dbd/unixCam.dbd",0,0)
+
+# Register all support components
+unixCam_registerRecordDeviceDriver(pdbbase)
+
+# Initialize debug variables
+var IMAGE_REDUCE_DEBUG $$IF(IMAGE_REDUCE_DEBUG,$$IMAGE_REDUCE_DEBUG,0)
+var EDT_UNIX_DEV_DEBUG $$IF(EDT_UNIX_DEV_DEBUG,$$EDT_UNIX_DEV_DEBUG,0)
+var DEBUG_HI_RES_TIME 0
+ErDebugLevel( 0 )
+
+$$LOOP(EXTRA)
+$$IF(INITTIME)
+$$INCLUDE(NAME)
+$$ENDIF(INITTIME)
+$$ENDLOOP(EXTRA)
+
+## Load EPICS records
+$$LOOP(EVR)
+dbLoadRecords( $(EVRDB_$$TYPE), "IOC=$(IOC_PV),EVR=$$(NAME)$$LOOP(CAMERA),CAM$$INDEX=$$NAME$$IF(TRIG),TU$$INDEX=$$NAME:TRIGGER_DELAY,IP$$(TRIG)E=Enabled$$ENDIF(TRIG)$$ENDLOOP(CAMERA)" )
+$$ENDLOOP(EVR)
+
+$$LOOP(CAMERA)
+$$IF(TRIG)
+dbLoadRecords( "db/camdelay.db", "CAM=$$NAME,EVR=$$EVRNAME,TRIGGER=$$TRIG,BAUDRATE=$(CAMERA_BAUD_$$TYPE)")
+$$ENDIF(TRIG)
+$$IF(DROPLET)
+dbLoadRecords( "db/droplet.db", "CAM=$$NAME,N=$$DROPLET")
+$$ENDIF(DROPLET)
+$$ENDLOOP(CAMERA)
+
+# Initialize the cameras
+$$LOOP(CAMERA)
+$$IF(NOINIT)
+$$ELSE(NOINIT)
+$$IF(TRIG)
+epicsCamInit( "$$NAME", $$BOARD, $$CHAN, "$(EDT_UNIX)/camera_config/$(CAMERA_CFG_$$IF(CFG,$$CFG,$$TYPE))", "$$EVRNAME:Triggers.$$TRANSLATE(TRIG,"0123456789AB","ABCDEFGHIJKL")", $(CAMERA_SKIP_$$TYPE), "$$NAME:TRIGGER_DELAY" )
+$$ELSE(TRIG)
+epicsCamInit( "$$NAME", $$BOARD, $$CHAN, "$(EDT_UNIX)/camera_config/$(CAMERA_CFG_$$IF(CFG,$$CFG,$$TYPE))")
+$$ENDIF(TRIG)
+$$ENDIF(NOINIT)
+$$ENDLOOP(CAMERA)
+
+# Enable sleep() calls as needed to diagnose startup errors
+epicsThreadSleep( 5.0 )
+
+$$LOOP(EVR)
+# Initialize EVR
+ErConfigure( 0, 0, 0, 0, $(EVRID_$$TYPE) )
+$$ENDLOOP(EVR)
+
+## Load EPICS records
+dbLoadRecords( "db/iocAdmin.db",		   "IOC=$(IOC_PV)" )
+dbLoadRecords( "db/save_restoreStatus.db", "IOC=$(IOC_PV)" )
+
+$$LOOP(CAMERA)
+$$IF(ASYNTRACE)
+asynSetTraceIOMask(	"$$NAME", 0, 2 )
+asynSetTraceMask(	"$$NAME", 0, 9 )
+$$ENDIF(ASYNTRACE)
+$$IF(TRIG)
+dbLoadRecords( $(CAMERA_DB_$$TYPE),	 "CAM=$$NAME,TS_EVENT=$$EVRNAME:Triggers.$$TRANSLATE(TRIG,"0123456789AB","ABCDEFGHIJKL")$$IF(FAST_FLNK),FAST_FLNK=$$FAST_FLNK$$ELSE(FAST_FLNK)$$IF(DOPRJ),FAST_FLNK=$$NAME:IMAGE:DoPrj$$ENDIF(DOPRJ)$$ENDIF(FAST_FLNK),BOARD=$$BOARD,CHAN=$$CHAN,TRIG=$$TRIG,EVR=$$EVRNAME" )
+$$IF(DOPRJ)
+dbLoadRecords( "db/doprj.db"		"CAM=$$NAME")
+$$IF(BLDID)
+dbLoadRecords( "db/bldSettings.db", "IOC=$(IOC_PV):B$$INDEX,BLDNO=$$INDEX" )
+$$ENDIF(BLDID)
+$$ENDIF(DOPRJ)
+$$ELSE(TRIG)
+dbLoadRecords( $(CAMERA_DB_$$TYPE),      "CAM=$$NAME,TS_EVENT=140" )
+$$ENDIF(TRIG)
+$$ENDLOOP(CAMERA)
+
+$$LOOP(EXTRA)
+$$IF(LOADTIME)
+$$INCLUDE(NAME)
+$$ENDIF(LOADTIME)
+$$ENDLOOP(EXTRA)
+
+# Setup autosave
+set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
+set_requestfile_path( "$(TOP)/autosave" )
+save_restoreSet_status_prefix( "$(IOC_PV):" )
+
+save_restoreSet_IncompleteSetsOk( 1 )
+save_restoreSet_DatedBackupFiles( 1 )
+
+set_pass0_restoreFile( "$(IOCNAME).sav" )
+set_pass1_restoreFile( "$(IOCNAME).sav" )
+
+# Initialize the IOC and start processing records
+iocInit()
+
+# Start autosave backups
+create_monitor_set( "$(IOCNAME).req", 5, "IOC=$(IOC_PV),EVR=$$EVRNAME0" )
+
+$$LOOP(CAMERA)
+$$IF(DOPRJ)
+dbpf $$NAME:CMPX_COL.PROC 1
+dbpf $$NAME:CMPX_ROW.PROC 1
+
+$$IF(BLDID)
+SpectroBLD($$BLDID, 72)
+BldSetID($$INDEX)
+BldConfig( "239.255.24.$$BLDID", 10148, 8192, 0, $$BLDID, 72, "$$NAME:CURRENTFID", "$$NAME:BLDNEXT", "$$NAME:CURRENTFID", "$$NAME:IMAGE_CMPX:HPrj,$$NAME:IMAGE_CMPX:VPrj" )
+BldSetDebugLevel(1)
+# Uncomment the next line for BLD generation.
+$$(NOBLD)BldStart()
+BldShowConfig()
+$$ENDIF(BLDID)
+$$ENDIF(DOPRJ)
+$$ENDLOOP(CAMERA)
+
+$$LOOP(EXTRA)
+$$IF(FINISHTIME)
+$$INCLUDE(NAME)
+$$ENDIF(FINISHTIME)
+$$ENDLOOP(EXTRA)
+
+# Run the post startup script
+< /reg/d/iocCommon/All/post_linux.cmd
